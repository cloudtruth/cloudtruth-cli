# A callable workflow for CLI builds
# Stores the build artifact at the given artifact ID
---
name: Build
on:
  workflow_call:
    inputs:
      artifactId:
        description: The artifact ID used to store the build artifact with actions/upload-artifact
        type: string
        required: true
      runsOn:
        description: The runner to run the workflow on
        type: string
        default: ubuntu-latest
      ref:
        description: the git ref to checkout from cloudtruth-cli
        type: string
      buildOptions:
        description: options to pass to the Cargo build
        type: string
        default: --all-features --workspace --lib --bins
      testOptions:
        description: options to pass to the Cargo tests
        type: string
        default: --all-features --workspace --lib --bins
      rustCacheKey:
        description: cache ID to use for rust-cache
        type: string
        default: v0-cloudtruth

env:
  CI: true
  RUST_BACKTRACE: 1

jobs:
  build:
    name: CLI Build
    runs-on: ${{ inputs.runsOn }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - run: sh xtask/scripts/install-rust.sh

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ inputs.rustCacheKey }}

      - uses: taiki-e/install-action@cargo-nextest

      - name: Build
        run: cargo build ${{ inputs.buildOptions }}

      # run unit tests
      - name: Test
        run: cargo nextest run --profile ci ${{ inputs.testOptions }}

      # build integration tests but do not run them
      # this will store the integration test build in the output artifact, 
      # so that partitioned test runs are faster to start later in the pipeline
      - name: Build Integration Tests
        run: cargo nextest run --no-run --tests

      # compress target directory to speed up artifact upload
      - name: Compress Artifacts
        run: tar -czvf target.tar.gz ./target

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifactId }}
          if-no-files-found: ignore
          path: |
            ./target.tar.gz

