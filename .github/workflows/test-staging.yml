name: E2E Staging
on:
  workflow_call:
    inputs:
      runsOn:
        description: The runner to run the workflow on
        type: string
        default: ubuntu-latest
      ref:
        description: the git ref to checkout from cloudtruth-cli
        type: string
      buildOptions:
        description: options to pass to the Cargo build
        type: string
      testOptions:
        description: options to pass to the Cargo tests
        type: string
      testRunnerOptions:
        description: string of command-line options to pass to the test runner
        type: string
      rustCacheKey:
        description: cache ID to use for rust-cache
        type: string
        default: v0-cli-test
    secrets:
      CT_STAGING_CI_ADMIN_API_KEY:
        description: "Staging API Key"
        required: true

env:
  CI: true
  JOB_ID: ${{github.repository_id}}-${{github.run_id}}-${{github.run_attempt}}-${{inputs.runsOn}}
  RUST_BACKTRACE: 1

jobs:
  build:
    name: CLI Build
    uses: ./.github/workflows/build.yml
    with:
      artifactId: ${{github.repository_id}}-${{github.run_id}}-${{inputs.runsOn}}
      runsOn: ${{ inputs.runsOn }}
      ref: ${{ inputs.ref }}
      buildOptions: ${{ inputs.buildOptions }}
      testOptions: ${{ inputs.testOptions }}
      rustCacheKey: ${{ inputs.rustCacheKey }}

  test:
    name: CLI E2E Test (Staging)
    needs: build
    runs-on: ${{ inputs.runsOn }}

    env:
      # these are to run against staging
      CLOUDTRUTH_SERVER_URL: https://api.staging.cloudtruth.io
      CLOUDTRUTH_API_KEY: ${{ secrets.CT_STAGING_CI_ADMIN_API_KEY }}
      
    steps:
      - uses: actions/checkout@v3
        with:
          repository: cloudtruth/cloudtruth-cli
          ref: ${{ inputs.ref }}

      - uses: actions/download-artifact@v3
        with:
          name: ${{github.repository_id}}-${{github.run_id}}-${{inputs.runsOn}}
          path: target

      # upload-artifact does not preserve permissions
      - shell: bash
        run: find target -type f -exec chmod +x {} +

      - shell: bash
        run: make test_prerequisites

      - name: Setup test variables
        shell: bash
        run: |
          cat integration-tests/staging.env >> $GITHUB_ENV

      - name: E2E Test
        shell: bash
        working-directory: integration-tests
        run: python3 live_test.py --job-id "$JOB_ID" ${{ inputs.testRunnerOptions }}

  cleanup:
    name: Cleanup
    needs: test
    if: always()
    runs-on: ${{ inputs.runsOn }}
    steps:

      - uses: actions/checkout@v3
        with:
          repository: cloudtruth/cloudtruth-cli
          ref: ${{ inputs.ref }}

      - uses: actions/download-artifact@v3
        with:
          name: ${{github.repository_id}}-${{github.run_id}}-${{inputs.runsOn}}
          path: target

      - shell: bash
        working-directory: integration-tests
        run: python3 cleanup.py --confirm "$JOB_ID"
