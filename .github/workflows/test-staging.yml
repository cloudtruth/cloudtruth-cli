name: E2E Staging
on:
  workflow_call:
    inputs:
      artifactId:
        description: An artifact ID containing the CLI executable to test. Either artifactId or releaseVersion should be provided
        type: string
      releaseVersion:
        description: A release tag to download with the install script. Either artifactId or releaseVersion should be provided
        type: string
      ref:
        description: the git ref to checkout from cloudtruth-cli (defaults to current ref)
        type: string
      testRunnerOptions:
        description: string of command-line options to pass to the test runner
        type: string
      runsOn:
        description: The runner to run the workflow on
        type: string
        default: ubuntu-latest
    secrets:
      CT_STAGING_CI_ADMIN_API_KEY:
        description: "Staging API Key"
        required: true

env:
  CI: true
  # ID to append to test data to avoid name collisions
  JOB_ID: ${{github.repository_id}}-${{github.run_id}}-${{github.run_attempt}}-${{inputs.runsOn}}
  RUST_BACKTRACE: 1

jobs:
  test:
    name: CLI E2E Test (Staging)
    runs-on: ${{ inputs.runsOn }}

    env:
      # these are to run against staging
      CLOUDTRUTH_SERVER_URL: https://api.staging.cloudtruth.io
      CLOUDTRUTH_API_KEY: ${{ secrets.CT_STAGING_CI_ADMIN_API_KEY }}
      
    steps:
      - shell: bash
        if: | 
          inputs.artifactId == '' && inputs.releaseVersion == '' ||
          inputs.artifactId != '' && inputs.releaseVersion != ''
        run: | 
          echo "Workflow input error: exactly one of 'artifactId' or 'releaseVersion' must be provided"
          exit 1

      - uses: actions/checkout@v3
        with:
          repository: cloudtruth/cloudtruth-cli
          ref: ${{ inputs.ref }}

      - uses: actions/download-artifact@v3
        if: inputs.artifactId
        with:
          name: ${{ inputs.artifactId }}
          path: target

      # upload-artifact does not preserve permissions
      - shell: bash
        if: inputs.artifactId
        run: find target -type f -name 'cloudtruth*' -exec chmod +x {} +

      - shell: bash
        if: inputs.releaseVersion && !contains(runner.os, 'Windows')
        run: sudo ./install.sh --version '${{ inputs.releaseVersion }}'

      - shell: pwsh
        if: inputs.releaseVersion && contains(runner.os, 'Windows')
        run: |
          $ctExe = .\install.ps1 -Version '${{ inputs.releaseVersion }}'
          mv $ctExe .\integration-tests\

      - shell: bash
        run: make test_prerequisites

      - name: Setup test variables
        shell: bash
        run: |
          cat integration-tests/staging.env >> $GITHUB_ENV

      - name: E2E Test
        shell: bash
        working-directory: integration-tests
        run: python3 live_test.py --job-id "$JOB_ID" ${{ inputs.testRunnerOptions }}

      - shell: bash
        if: always()
        working-directory: integration-tests
        run: python3 cleanup.py --confirm "$JOB_ID"
