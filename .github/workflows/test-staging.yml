name: Test Staging
on:
  workflow_call:
    inputs:
      artifactId:
        description: An artifact ID containing the CLI executable to test. Either artifactId or releaseVersion should be provided
        type: string
      releaseVersion:
        description: A release tag to download with the install script. Either artifactId or releaseVersion should be provided
        type: string
      testRunnerOptions:
        description: string of command-line options to pass to the test runner
        type: string
      runsOn:
        description: The runner to run the workflow on
        type: string
        default: ubuntu-latest
      serverUrl:
        description: The CloudTruth server URL to use for testing
        type: string
        default: https://api.staging.cloudtruth.io
    ### NOTE: nextest does not yet implement JSON output. see https://github.com/nextest-rs/nextest/issues/20
    # outputs:
    #   testOutputJson:
    #     description: the JSON output of cargo-nextest
    #     value: ${{ jobs.cargo-test.outputs.testReportJson }}
    secrets:
      CLOUDTRUTH_API_KEY:
        description: "Staging API Key"
        required: true

env:
  CI: true
  RELEASE_VERSION: ${{ inputs.releaseVersion }}
  # ID to append to test data to avoid name collisions
  JOB_ID: ${{github.repository_id}}-${{github.run_id}}-${{github.run_attempt}}-${{inputs.runsOn}}
  CLOUDTRUTH_SERVER_URL: ${{ inputs.serverUrl }}
  CLOUDTRUTH_API_KEY: ${{ secrets.CLOUDTRUTH_API_KEY }}
  TEST_ARCHIVE_FILE: integration-test-${{inputs.runsOn}}.tar.zst
  # NEXTEST_OUTPUT_JSON_FILE: nextest-output.json

jobs:
  cargo-test:
    name: CLI Test (staging)
    runs-on: ${{ inputs.runsOn }}
    steps:
      - shell: bash
        if: |
          inputs.artifactId == '' && inputs.releaseVersion == '' ||
          inputs.artifactId != '' && inputs.releaseVersion != ''
        run: |
          echo "Workflow input error: exactly one of 'artifactId' or 'releaseVersion' must be provided"
          exit 1

      # it's likely safe to assume that current/latest ref is close enough
      # to staging release, but we may need to bump a "staging" tag to track
      # the staging release accurately
      - uses: actions/checkout@v3
        with:
          repository: cloudtruth/cloudtruth-cli

      - run: sh cicd/scripts/install-rust.sh

      - uses: taiki-e/install-action@cargo-nextest

      - uses: actions/download-artifact@v3
        if: inputs.artifactId
        with:
          name: ${{ inputs.artifactId }}

      # fetch pre-built integration test archive
      - uses: dsaltares/fetch-gh-release-asset@1.1.1
        if: inputs.releaseVersion
        with:
          repo: cloudtruth/cloudtruth-cli
          version: tags/${{ inputs.releaseVersion }}
          file: ${{ env.TEST_ARCHIVE_FILE }}

      - name: Setup test variables
        shell: bash
        run: |
          cat cicd/staging.env >> $GITHUB_ENV

      # run from pre-built archive
      - name: E2E Test (from pre-release assets)
        if: inputs.releaseVersion
        shell: bash
        run: |
          cargo nextest run \
           --profile ci \
           --archive-file "$TEST_ARCHIVE_FILE" \
           ${{ inputs.testRunnerOptions }} \
           --workspace-remap "${GITHUB_WORKSPACE}" \
          #  --message-format json\
          #  > ${NEXTEST_OUTPUT_JSON_FILE}

      # build and run
      - name: E2E Test (from workflow artifacts)
        if: inputs.artifactId
        shell: bash
        run: |
         cargo nextest run \
          --profile ci \
          --archive-file \
          ./integration-test-archive.tar.zst \
          ${{ inputs.testRunnerOptions }} \
          --workspace-remap "${GITHUB_WORKSPACE}"\
          #--message-format json \
          #> ${NEXTEST_OUTPUT_JSON_FILE}


