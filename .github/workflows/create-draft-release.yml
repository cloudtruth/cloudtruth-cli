---
name: Create Draft Release
run-name: Create Draft Release (${{ github.ref_name }})

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+-?**'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Create Draft Release
        id: release
        uses: ncipollo/release-action@v1
        with:
          updateOnlyUnreleased: true # prevent modifying any non-draft non-prerelease
          removeArtifacts: true # deletes any existing artifacts when modifying
          draft: true
          # need to set this false initially otherwise GH won't emit a prereleased event at the end 
          prerelease: false 
          tag: ${{ github.ref_name }}
          name: Cloudtruth CLI ${{ github.ref_name }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Cargo and tag version alignment
        env:
          TAG_VERSION: ${{ github.ref_name }}
        run: |
          CARGO_VERSION=$(grep "version = " Cargo.toml | head -n 1 | cut -d'"' -f2)
          echo "CARGO_VERSION=${CARGO_VERSION}"
          echo "TAG_VERSION=${TAG_VERSION}"
          echo "${TAG_VERSION}" | grep "${CARGO_VERSION}"

    outputs:
      releaseId: ${{ steps.release.outputs.id }}
      releaseUploadUrl: ${{ steps.release.outputs.upload_url }}

  build-release:
    name: Build Release
    needs: create-release
    uses: ./.github/workflows/build-release.yml
    with:
      releaseId: ${{ needs.create-release.outputs.releaseId }}
      releaseUploadUrl: ${{ needs.create-release.outputs.releaseUploadUrl }}
      
  test-release:
    name: Test Release
    needs: [create-release, build-release]
    uses: ./.github/workflows/test-release.yml
    with:
      releaseId: ${{ needs.create-release.outputs.releaseId }}
      releaseVersion: ${{ github.ref_name }}
    secrets:
      CLOUDTRUTH_API_KEY: ${{ secrets.CI_ACCT_READONLY_CT_API_KEY}}
