{
    "openapi": "3.0.3",
    "info": {
        "title": "CloudTruth Management API",
        "version": "",
        "description": "CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.",
        "contact": {
            "name": "CloudTruth Support",
            "email": "support@cloudtruth.com"
        }
    },
    "paths": {
        "/api/schema/": {
            "get": {
                "operationId": "api_schema_retrieve",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "yaml"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "af",
                                "ar",
                                "ar-dz",
                                "ast",
                                "az",
                                "be",
                                "bg",
                                "bn",
                                "br",
                                "bs",
                                "ca",
                                "cs",
                                "cy",
                                "da",
                                "de",
                                "dsb",
                                "el",
                                "en",
                                "en-au",
                                "en-gb",
                                "eo",
                                "es",
                                "es-ar",
                                "es-co",
                                "es-mx",
                                "es-ni",
                                "es-ve",
                                "et",
                                "eu",
                                "fa",
                                "fi",
                                "fr",
                                "fy",
                                "ga",
                                "gd",
                                "gl",
                                "he",
                                "hi",
                                "hr",
                                "hsb",
                                "hu",
                                "hy",
                                "ia",
                                "id",
                                "ig",
                                "io",
                                "is",
                                "it",
                                "ja",
                                "ka",
                                "kab",
                                "kk",
                                "km",
                                "kn",
                                "ko",
                                "ky",
                                "lb",
                                "lt",
                                "lv",
                                "mk",
                                "ml",
                                "mn",
                                "mr",
                                "ms",
                                "my",
                                "nb",
                                "ne",
                                "nl",
                                "nn",
                                "os",
                                "pa",
                                "pl",
                                "pt",
                                "pt-br",
                                "ro",
                                "ru",
                                "sk",
                                "sl",
                                "sq",
                                "sr",
                                "sr-latn",
                                "sv",
                                "sw",
                                "ta",
                                "te",
                                "tg",
                                "th",
                                "tk",
                                "tr",
                                "tt",
                                "udm",
                                "uk",
                                "ur",
                                "uz",
                                "vi",
                                "zh-hans",
                                "zh-hant"
                            ]
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/audit/": {
            "get": {
                "operationId": "audit_list",
                "description": "A searchable log of all the actions taken by users and service accounts within the organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "action",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "create",
                                "delete",
                                "expired",
                                "pull",
                                "push",
                                "update"
                            ]
                        },
                        "description": "The action that was taken."
                    },
                    {
                        "in": "query",
                        "name": "earliest",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "environment_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Returns records for the environment, associated tags, and values."
                    },
                    {
                        "in": "query",
                        "name": "latest",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "object_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "object_type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parameter_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Returns records for the parameter and associated values."
                    },
                    {
                        "in": "query",
                        "name": "project_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Returns records for the project, it's parameters, and associated values."
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAuditTrailList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/audit/{id}/": {
            "get": {
                "operationId": "audit_retrieve",
                "description": "Retrieve one record from the audit log.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the audit record."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditTrail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/audit/summary/": {
            "get": {
                "operationId": "audit_summary_retrieve",
                "description": "Summary information about the organization's audit trail.",
                "tags": [
                    "audit"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditTrailSummary"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/backup/snapshot/": {
            "post": {
                "operationId": "backup_snapshot_create",
                "summary": "Get a snapshot of all Projects with parameters",
                "tags": [
                    "backup"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackupDataSnapshot"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/environments/": {
            "get": {
                "operationId": "environments_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "environments"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEnvironmentList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "environments_create",
                "tags": [
                    "environments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Environment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/environments/{environment_pk}/pushes/": {
            "get": {
                "operationId": "environments_pushes_list",
                "description": "The push operations that this environment was involved in.",
                "summary": "List push operations.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "environment_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "environments"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskStepList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/environments/{environment_pk}/tags/": {
            "get": {
                "operationId": "environments_tags_list",
                "description": "Tags allow you to name stable points in time for your configuration.\n\nAny query API that accepts an `as_of` option will also accept a `tag`\noption however they are mutually exclusive.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "environment_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "environments"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTagList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "environments_tags_create",
                "description": "Tags allow you to name stable points in time for your configuration.\n\nAny query API that accepts an `as_of` option will also accept a `tag`\noption however they are mutually exclusive.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "environment_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "environments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/environments/{environment_pk}/tags/{id}/": {
            "get": {
                "operationId": "environments_tags_retrieve",
                "description": "Tags allow you to name stable points in time for your configuration.\n\nAny query API that accepts an `as_of` option will also accept a `tag`\noption however they are mutually exclusive.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "environment_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the tag."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "environments"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "environments_tags_update",
                "description": "Tags allow you to name stable points in time for your configuration.\n\nAny query API that accepts an `as_of` option will also accept a `tag`\noption however they are mutually exclusive.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "environment_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the tag."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "environments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "environments_tags_partial_update",
                "description": "Tags allow you to name stable points in time for your configuration.\n\nAny query API that accepts an `as_of` option will also accept a `tag`\noption however they are mutually exclusive.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "environment_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the tag."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "environments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTagUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTagUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTagUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "environments_tags_destroy",
                "description": "Tags allow you to name stable points in time for your configuration.\n\nAny query API that accepts an `as_of` option will also accept a `tag`\noption however they are mutually exclusive.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "environment_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the tag."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "environments"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/environments/{id}/": {
            "get": {
                "operationId": "environments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this environment ledger.",
                        "required": true
                    }
                ],
                "tags": [
                    "environments"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Environment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "environments_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the environment."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "environments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvironmentUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "environments_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the environment."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "environments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEnvironmentUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEnvironmentUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEnvironmentUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvironmentUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "environments_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the environment."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "environments"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Environment destroyed."
                    },
                    "409": {
                        "description": "The environment has children and cannot be removed."
                    }
                }
            }
        },
        "/api/v1/environments/{id}/copy/": {
            "post": {
                "operationId": "environments_copy_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the environment."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "environments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentCopy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentCopy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentCopy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Environment"
                                }
                            }
                        },
                        "description": "Environment copied"
                    },
                    "400": {
                        "description": "The Environment copy failed."
                    },
                    "403": {
                        "description": "Permission denied."
                    }
                }
            }
        },
        "/api/v1/features/": {
            "get": {
                "operationId": "features_retrieve",
                "description": "Returns a dictionary of features and whether or not they are enabled",
                "tags": [
                    "features"
                ],
                "security": [
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeaturesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/features/aichat/": {
            "get": {
                "operationId": "features_aichat_retrieve",
                "description": "Returns details about enabled features for AI Chat",
                "tags": [
                    "features"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeaturesAiChatResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/grants/": {
            "get": {
                "operationId": "grants_list",
                "description": "Grants allow you to enable access control on Environments and Projects.\n\nGrants are part of the role-based access control feature set, so\nif your subscription does not have support for it, these paths\nwill return a 403 Forbidden error.",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "principal",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Filter by principal (User, Group). Returns direct grant assignments, not indirect (user via group)."
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ADMIN",
                                "CONTRIB",
                                "OWNER",
                                "VIEWER"
                            ]
                        },
                        "description": "Filter by role."
                    },
                    {
                        "in": "query",
                        "name": "scope",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Filter by grant scope (Environment, Project)."
                    }
                ],
                "tags": [
                    "grants"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGrantList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden: see response for further details."
                    }
                }
            },
            "post": {
                "operationId": "grants_create",
                "description": "Grants allow you to enable access control on Environments and Projects.\n\nGrants are part of the role-based access control feature set, so\nif your subscription does not have support for it, these paths\nwill return a 403 Forbidden error.",
                "tags": [
                    "grants"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Grant"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Grant"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Grant"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Grant"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden: see response for further details."
                    }
                }
            }
        },
        "/api/v1/grants/{id}/": {
            "get": {
                "operationId": "grants_retrieve",
                "description": "Grants allow you to enable access control on Environments and Projects.\n\nGrants are part of the role-based access control feature set, so\nif your subscription does not have support for it, these paths\nwill return a 403 Forbidden error.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the grant."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "grants"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Grant"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden: see response for further details."
                    }
                }
            },
            "put": {
                "operationId": "grants_update",
                "description": "Grants allow you to enable access control on Environments and Projects.\n\nGrants are part of the role-based access control feature set, so\nif your subscription does not have support for it, these paths\nwill return a 403 Forbidden error.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the grant."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "grants"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GrantUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GrantUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GrantUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Grant"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden: see response for further details."
                    }
                }
            },
            "patch": {
                "operationId": "grants_partial_update",
                "description": "Grants allow you to enable access control on Environments and Projects.\n\nGrants are part of the role-based access control feature set, so\nif your subscription does not have support for it, these paths\nwill return a 403 Forbidden error.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the grant."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "grants"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGrantUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGrantUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGrantUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Grant"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden: see response for further details."
                    }
                }
            },
            "delete": {
                "operationId": "grants_destroy",
                "description": "Grants allow you to enable access control on Environments and Projects.\n\nGrants are part of the role-based access control feature set, so\nif your subscription does not have support for it, these paths\nwill return a 403 Forbidden error.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the grant."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "grants"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted."
                    },
                    "403": {
                        "description": "Forbidden: see response for further details."
                    }
                }
            }
        },
        "/api/v1/grants/multi/": {
            "delete": {
                "operationId": "grants_multi_destroy",
                "description": "Removes grants matching the query parameters atomically.\n\nUse this technique to disable access control on a scope,\nor remove all grants for a user.",
                "tags": [
                    "grants"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Grant"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden: see response for further details."
                    }
                }
            }
        },
        "/api/v1/groups/": {
            "get": {
                "operationId": "groups_list",
                "description": "Groups allow you to aggregate users for purposes of assigning\ngrants more easily.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Filter by user."
                    }
                ],
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_create",
                "description": "Groups allow you to aggregate users for purposes of assigning\ngrants more easily.",
                "tags": [
                    "groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/groups/{id}/": {
            "get": {
                "operationId": "groups_retrieve",
                "description": "Groups allow you to aggregate users for purposes of assigning\ngrants more easily.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier of a group."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "groups_update",
                "description": "Groups allow you to aggregate users for purposes of assigning\ngrants more easily.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier of a group."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "groups_partial_update",
                "description": "Groups allow you to aggregate users for purposes of assigning\ngrants more easily.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier of a group."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "groups_destroy",
                "description": "Groups allow you to aggregate users for purposes of assigning\ngrants more easily.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier of a group."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "groups"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/groups/{id}/add/": {
            "post": {
                "operationId": "groups_add_create",
                "description": "Add a user to the group.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier of a group."
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "string",
                            "format": "uri",
                            "minLength": 1
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/groups/{id}/remove/": {
            "post": {
                "operationId": "groups_remove_create",
                "description": "Remove a user from the group.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier of a group."
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "string",
                            "format": "uri",
                            "minLength": 1
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/import/": {
            "post": {
                "operationId": "import_create",
                "description": "Import parameters from the provided data.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "mask_secrets",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Mask secrets in the response"
                    },
                    {
                        "in": "query",
                        "name": "preview",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Do not create any objects"
                    }
                ],
                "tags": [
                    "import"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportCreateResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/": {
            "get": {
                "operationId": "integrations_aws_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "aws_account_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "aws_role_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAwsIntegrationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "integrations_aws_create",
                "description": "### Description ###\n\nEstablishes an AWS Integration for your CloudTruth organization.\n\n### Pre-Conditions ###\n\n- An AWS Integration for the account and role cannot already exist.\n### Post-Conditions ###\n\n- You must establish an IAM role and trust relationship based on the Role Name and the External ID.",
                "summary": "Establishes an AWS Integration.",
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsIntegrationCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsIntegrationCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsIntegrationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsIntegration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pulls/": {
            "get": {
                "operationId": "integrations_aws_pulls_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAwsPullList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "integrations_aws_pulls_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPull"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPull"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPull"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pulls/{awspull_pk}/tasks/": {
            "get": {
                "operationId": "integrations_aws_pulls_tasks_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "failure",
                                "queued",
                                "running",
                                "skipped",
                                "success"
                            ]
                        },
                        "description": "The current state of this task."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAwsPullTaskList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pulls/{awspull_pk}/tasks/{awspulltask_pk}/steps/": {
            "get": {
                "operationId": "integrations_aws_pulls_tasks_steps_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspulltask_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fqn",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "operation",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "create",
                                "delete",
                                "read",
                                "update"
                            ]
                        },
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAwsPullTaskStepList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pulls/{awspull_pk}/tasks/{awspulltask_pk}/steps/{id}/": {
            "get": {
                "operationId": "integrations_aws_pulls_tasks_steps_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspulltask_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for a task step."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPullTaskStep"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pulls/{awspull_pk}/tasks/{id}/": {
            "get": {
                "operationId": "integrations_aws_pulls_tasks_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the task."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPullTask"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pulls/{id}/": {
            "get": {
                "operationId": "integrations_aws_pulls_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "integrations_aws_pulls_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPull"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPull"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPull"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "integrations_aws_pulls_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAwsPull"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAwsPull"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAwsPull"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "integrations_aws_pulls_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Cannot destroy innate mapped pull of a data integration."
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pulls/{id}/sync/": {
            "post": {
                "operationId": "integrations_aws_pulls_sync_create",
                "description": "Enqueue a pull synchronization task for mapped external values accessible with this integration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPullSyncActionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPullSyncActionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPullSyncActionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Synchronization task enqueued."
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pushes/": {
            "get": {
                "operationId": "integrations_aws_pushes_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Filter results to pushes that operate on a tag in the given environment."
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Filter results to pushes that operate on the given project."
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Filter results to pushes that operate on the given tag."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAwsPushList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "integrations_aws_pushes_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPush"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPush"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPush"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPush"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pushes/{awspush_pk}/tasks/": {
            "get": {
                "operationId": "integrations_aws_pushes_tasks_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspush_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "failure",
                                "queued",
                                "running",
                                "skipped",
                                "success"
                            ]
                        },
                        "description": "The current state of this task."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAwsPushTaskList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pushes/{awspush_pk}/tasks/{awspushtask_pk}/steps/": {
            "get": {
                "operationId": "integrations_aws_pushes_tasks_steps_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspush_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspushtask_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fqn",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "operation",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "create",
                                "delete",
                                "read",
                                "update"
                            ]
                        },
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAwsPushTaskStepList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pushes/{awspush_pk}/tasks/{awspushtask_pk}/steps/{id}/": {
            "get": {
                "operationId": "integrations_aws_pushes_tasks_steps_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspush_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspushtask_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for a task step."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPushTaskStep"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pushes/{awspush_pk}/tasks/{id}/": {
            "get": {
                "operationId": "integrations_aws_pushes_tasks_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "awspush_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the task."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPushTask"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pushes/{id}/": {
            "get": {
                "operationId": "integrations_aws_pushes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPush"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "integrations_aws_pushes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPushUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPushUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPushUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPushUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "integrations_aws_pushes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAwsPushUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAwsPushUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAwsPushUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsPushUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "integrations_aws_pushes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{awsintegration_pk}/pushes/{id}/sync/": {
            "post": {
                "operationId": "integrations_aws_pushes_sync_create",
                "description": "Enqueue a push synchronization task.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "awsintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPush"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPush"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsPush"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Synchronization task enqueued."
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{id}/": {
            "get": {
                "operationId": "integrations_aws_retrieve",
                "summary": "Get details of an AWS Integration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the integration."
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "refresh_status",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Trigger a refresh of the integration status before returning the details."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsIntegration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "integrations_aws_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the integration."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsIntegration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsIntegration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsIntegration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsIntegration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "integrations_aws_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the integration."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAwsIntegration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAwsIntegration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAwsIntegration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwsIntegration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "integrations_aws_destroy",
                "summary": "Delete an AWS integration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the integration."
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "in_use",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "fail",
                                "leave",
                                "remove"
                            ]
                        },
                        "description": "(Optional) Desired behavior if the integration has in-use values.\n\n- `fail` will return HTTP error 409 if there are any values using the integration.\n- `leave` (default) will leave values in place and future queries may fail; you can control future value query behavior with the `lookup_error` query parameter on those requests.\n- `remove` will remove the all values using the integration when the integration is removed."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Integration removed."
                    },
                    "409": {
                        "description": "The integration is used by one (or more) Value(s) and cannot be removed."
                    }
                }
            }
        },
        "/api/v1/integrations/aws/{id}/scan/": {
            "post": {
                "operationId": "integrations_aws_scan_create",
                "description": "Probe a region and service using a pattern matching string that can be used in pull actions.  This allows the pattern match to be checked for correctness and preview what will match during creation of the string.",
                "summary": "Evaluate a potential pull pattern and understand what it will match.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsIntegrationScan"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsIntegrationScan"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AwsIntegrationScan"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscoveryResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/": {
            "get": {
                "operationId": "integrations_azure_key_vault_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tenant_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vault_name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAzureKeyVaultIntegrationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "integrations_azure_key_vault_create",
                "description": "### Description ###\n\nEstablishes an Azure Key Vault Integration for your CloudTruth organization.\n\n### Pre-Conditions ###\n\n- An OAuth2 request to install the CloudTruth application in your Azure Tenant must acquire your consent.  The resulting JWT access key will contain a `tid` claim that is your Tenant ID.  Use this Tenant ID to set up your integration.\n\n### Post-Conditions ###\n\n- You must then grant the CloudTruth service principal rights to access the key  vault as a Secrets Manager role (read and write access - purge is not required).",
                "summary": "Establishes an Azure Key Vault Integration.",
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultIntegrationCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultIntegrationCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultIntegrationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultIntegration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pulls/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pulls_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAzureKeyVaultPullList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "integrations_azure_key_vault_pulls_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPull"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPull"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPull"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pulls/{akvpull_pk}/tasks/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pulls_tasks_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "failure",
                                "queued",
                                "running",
                                "skipped",
                                "success"
                            ]
                        },
                        "description": "The current state of this task."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAzureKeyVaultPullTaskList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pulls/{akvpull_pk}/tasks/{akvpulltask_pk}/steps/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pulls_tasks_steps_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpulltask_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fqn",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "operation",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "create",
                                "delete",
                                "read",
                                "update"
                            ]
                        },
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAzureKeyVaultPullTaskStepList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pulls/{akvpull_pk}/tasks/{akvpulltask_pk}/steps/{id}/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pulls_tasks_steps_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpulltask_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for a task step."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPullTaskStep"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pulls/{akvpull_pk}/tasks/{id}/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pulls_tasks_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the task."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPullTask"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pulls/{id}/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pulls_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "integrations_azure_key_vault_pulls_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPull"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPull"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPull"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "integrations_azure_key_vault_pulls_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAzureKeyVaultPull"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAzureKeyVaultPull"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAzureKeyVaultPull"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "integrations_azure_key_vault_pulls_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Cannot destroy innate mapped pull of a data integration."
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pulls/{id}/sync/": {
            "post": {
                "operationId": "integrations_azure_key_vault_pulls_sync_create",
                "description": "Enqueue a pull synchronization task for mapped external values accessible with this integration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPullSyncActionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPullSyncActionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPullSyncActionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Synchronization task enqueued."
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pushes/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pushes_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Filter results to pushes that operate on a tag in the given environment."
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Filter results to pushes that operate on the given project."
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Filter results to pushes that operate on the given tag."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAzureKeyVaultPushList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "integrations_azure_key_vault_pushes_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPush"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPush"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPush"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPush"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pushes/{akvpush_pk}/tasks/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pushes_tasks_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpush_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "failure",
                                "queued",
                                "running",
                                "skipped",
                                "success"
                            ]
                        },
                        "description": "The current state of this task."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAzureKeyVaultPushTaskList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pushes/{akvpush_pk}/tasks/{akvpushtask_pk}/steps/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pushes_tasks_steps_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpush_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpushtask_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fqn",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "operation",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "create",
                                "delete",
                                "read",
                                "update"
                            ]
                        },
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAzureKeyVaultPushTaskStepList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pushes/{akvpush_pk}/tasks/{akvpushtask_pk}/steps/{id}/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pushes_tasks_steps_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpush_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpushtask_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for a task step."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPushTaskStep"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pushes/{akvpush_pk}/tasks/{id}/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pushes_tasks_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "akvpush_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the task."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPushTask"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pushes/{id}/": {
            "get": {
                "operationId": "integrations_azure_key_vault_pushes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPush"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "integrations_azure_key_vault_pushes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPushUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPushUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPushUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPushUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "integrations_azure_key_vault_pushes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAzureKeyVaultPushUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAzureKeyVaultPushUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAzureKeyVaultPushUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultPushUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "integrations_azure_key_vault_pushes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{akvintegration_pk}/pushes/{id}/sync/": {
            "post": {
                "operationId": "integrations_azure_key_vault_pushes_sync_create",
                "description": "Enqueue a push synchronization task.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "akvintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPush"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPush"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultPush"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Synchronization task enqueued."
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{id}/": {
            "get": {
                "operationId": "integrations_azure_key_vault_retrieve",
                "summary": "Get details of an Azure Key Vault Integration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the integration."
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "refresh_status",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Trigger a refresh of the integration status before returning the details."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultIntegration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "integrations_azure_key_vault_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the integration."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultIntegration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultIntegration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultIntegration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultIntegration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "integrations_azure_key_vault_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the integration."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAzureKeyVaultIntegration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAzureKeyVaultIntegration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAzureKeyVaultIntegration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AzureKeyVaultIntegration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "integrations_azure_key_vault_destroy",
                "summary": "Delete an Azure Key Vault integration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the integration."
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "in_use",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "fail",
                                "leave",
                                "remove"
                            ]
                        },
                        "description": "(Optional) Desired behavior if the integration has in-use values.\n\n- `fail` will return HTTP error 409 if there are any values using the integration.\n- `leave` (default) will leave values in place and future queries may fail; you can control future value query behavior with the `lookup_error` query parameter on those requests.\n- `remove` will remove the all values using the integration when the integration is removed."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Integration removed."
                    },
                    "409": {
                        "description": "The integration is used by one (or more) Value(s) and cannot be removed."
                    }
                }
            }
        },
        "/api/v1/integrations/azure/key_vault/{id}/scan/": {
            "post": {
                "operationId": "integrations_azure_key_vault_scan_create",
                "description": "Probe a region and service using a pattern matching string that can be used in pull actions.  This allows the pattern match to be checked for correctness and preview what will match during creation of the string.",
                "summary": "Evaluate a potential pull pattern and understand what it will match.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultIntegrationScan"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultIntegrationScan"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AzureKeyVaultIntegrationScan"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscoveryResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/explore/": {
            "get": {
                "operationId": "integrations_explore_list",
                "description": "### Description ###\n\nQueries a third-party integration to retrieve the data specified by the FQN.\n\nYou can start exploring by not specifying an 'fqn', which will return a list of FQNs for the existing third-party integrations. Third-party integrations can be configured via the Integrations section of the web application.\n",
                "summary": "Retrieve third-party integration data for the specified FQN.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fqn",
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "FQN (URL-like) for third-party integration."
                    },
                    {
                        "in": "query",
                        "name": "jmes",
                        "schema": {
                            "type": "string"
                        },
                        "description": "JMES-path qualifier (key within file)"
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page_token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "When paginating, this is the value that came back in the last page's next"
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedIntegrationNodeList"
                                }
                            }
                        },
                        "description": "The content at the FQN."
                    },
                    "400": {
                        "description": "Invalid FQN requested."
                    },
                    "403": {
                        "description": "Unable to contact the third-party integration."
                    },
                    "415": {
                        "description": "Unsupported content type (usually this means it is binary)."
                    },
                    "507": {
                        "description": "Content exceeds internal size limit of 1MB."
                    }
                }
            }
        },
        "/api/v1/integrations/github/": {
            "get": {
                "operationId": "integrations_github_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "gh_organization_slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGitHubIntegrationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "integrations_github_create",
                "description": "### Description ###\n\nEstablishes a GitHub Integration in your CloudTruth organization.\n\n### Pre-Conditions ###\n\n- The user must be an Administrator or Owner of your organization.\n- A GitHub Integration with the `installation_id` cannot \nalready exist in this organization.\n- The user must first install the CloudTruth GitHub Application in \ntheir GitHub organization and obtain the `installation_id` of the \napplication in order to create the integration.\n\n### Initiating the GitHub Application Installation ###\n\n- Go to `https://github.com/apps/GITHUB_APP_NAME/installations/new?state=<bearer_token>`\n- On successful installation the browser will return to \n`https://APP_URL/app_setup/github` (configured in ctops/bin/github*) \nand provide the `installation_id` in the URI.\n- POST to this api to verify and establish the integration.",
                "summary": "Establishes a GitHub Integration.",
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GitHubIntegrationCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GitHubIntegrationCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GitHubIntegrationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GitHubIntegration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/github/{githubintegration_pk}/pulls/": {
            "get": {
                "operationId": "integrations_github_pulls_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "githubintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGitHubPullList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/github/{githubintegration_pk}/pulls/{githubpull_pk}/tasks/": {
            "get": {
                "operationId": "integrations_github_pulls_tasks_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "githubintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "githubpull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "failure",
                                "queued",
                                "running",
                                "skipped",
                                "success"
                            ]
                        },
                        "description": "The current state of this task."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGitHubPullTaskList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/github/{githubintegration_pk}/pulls/{githubpull_pk}/tasks/{githubpulltask_pk}/steps/": {
            "get": {
                "operationId": "integrations_github_pulls_tasks_steps_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fqn",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "githubintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "githubpull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "githubpulltask_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "operation",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "create",
                                "delete",
                                "read",
                                "update"
                            ]
                        },
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_id__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "venue_name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGitHubPullTaskStepList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/github/{githubintegration_pk}/pulls/{githubpull_pk}/tasks/{githubpulltask_pk}/steps/{id}/": {
            "get": {
                "operationId": "integrations_github_pulls_tasks_steps_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "githubintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "githubpull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "githubpulltask_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for a task step."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GitHubPullTaskStep"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/github/{githubintegration_pk}/pulls/{githubpull_pk}/tasks/{id}/": {
            "get": {
                "operationId": "integrations_github_pulls_tasks_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "githubintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "githubpull_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the task."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GitHubPullTask"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/github/{githubintegration_pk}/pulls/{id}/": {
            "get": {
                "operationId": "integrations_github_pulls_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "githubintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GitHubPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "integrations_github_pulls_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "githubintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GitHubPull"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GitHubPull"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GitHubPull"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GitHubPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "integrations_github_pulls_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "githubintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGitHubPull"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGitHubPull"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGitHubPull"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GitHubPull"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/integrations/github/{githubintegration_pk}/pulls/{id}/sync/": {
            "post": {
                "operationId": "integrations_github_pulls_sync_create",
                "description": "Enqueue a pull synchronization task for mapped external values accessible with this integration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "githubintegration_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the action."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GitHubPull"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GitHubPull"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GitHubPull"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Synchronization task enqueued."
                    }
                }
            }
        },
        "/api/v1/integrations/github/{id}/": {
            "get": {
                "operationId": "integrations_github_retrieve",
                "summary": "Get details of a GitHub Integration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the integration."
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "refresh_status",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Refresh the integration status before returning the details."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GitHubIntegration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "integrations_github_destroy",
                "summary": "Delete a GitHub integration.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier for the integration."
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "in_use",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "fail",
                                "leave",
                                "remove"
                            ]
                        },
                        "description": "(Optional) Desired behavior if the integration has in-use values.\n\n- `fail` will return HTTP error 409 if there are any values using the integration.\n- `leave` (default) will leave values in place and future queries may fail; you can control future value query behavior with the `lookup_error` query parameter on those requests.\n- `remove` will remove the all values using the integration when the integration is removed."
                    }
                ],
                "tags": [
                    "integrations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Integration removed."
                    },
                    "409": {
                        "description": "The integration is used by one (or more) Value(s) and cannot be removed."
                    }
                }
            }
        },
        "/api/v1/invitations/": {
            "get": {
                "operationId": "invitations_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ADMIN",
                                "CONTRIB",
                                "OWNER",
                                "VIEWER"
                            ]
                        },
                        "description": "The role that the user will have in the organization, should the user accept."
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accepted",
                                "bounced",
                                "pending",
                                "sent"
                            ]
                        },
                        "description": "The current state of the invitation."
                    }
                ],
                "tags": [
                    "invitations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedInvitationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "invitations_create",
                "description": "Extend an invitation for someone else to join your organization.",
                "summary": "Create an invitation.",
                "tags": [
                    "invitations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvitationCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InvitationCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InvitationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "description": "Permission denied.  Is the invitation role more permissive than your own?"
                    },
                    "404": {
                        "description": "Bad Request.  Is there already an invitation for that email?"
                    }
                }
            }
        },
        "/api/v1/invitations/{id}/": {
            "get": {
                "operationId": "invitations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier of an invitation."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "invitations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "invitations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier of an invitation."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "invitations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invitation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Invitation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Invitation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "invitations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier of an invitation."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "invitations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvitation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvitation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvitation"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "invitations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique identifier of an invitation."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "invitations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/invitations/{id}/accept/": {
            "post": {
                "operationId": "invitations_accept_create",
                "description": "Accept an invitation to join an organization.\n\nThe email address used to log in and accept the invitation must match\nthe email address specified by the inviting user when creating the invitation.\n\nOn success the client receives the invitation record as it was updated.\nThe client should then regenerate the JWT with the organization scope and\nproceed to the default landing page.",
                "summary": "Accept an invitation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The invitation ID.",
                        "required": true
                    }
                ],
                "tags": [
                    "invitations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        },
                        "description": "The invitation was accepted.  The client should obtain an organization scope token and proceed to the landing page."
                    },
                    "403": {
                        "description": "Permission denied.  The accepting user's email may not match the invitation?"
                    },
                    "404": {
                        "description": "Bad Request.  The invitation does not exist or has already been accepted?"
                    }
                }
            }
        },
        "/api/v1/invitations/{id}/resend/": {
            "post": {
                "operationId": "invitations_resend_create",
                "description": "Re-send an invitation to the recipient.",
                "summary": "Resend an invitation.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The invitation ID.",
                        "required": true
                    }
                ],
                "tags": [
                    "invitations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invitation"
                                }
                            }
                        },
                        "description": "The invitation state was reset to `pending`, which causes it to get sent again.  The most recent state is returned.  Clients should check the state."
                    },
                    "404": {
                        "description": "Bad Request.  Was the invitation already accepted?"
                    }
                }
            }
        },
        "/api/v1/memberships/": {
            "get": {
                "operationId": "memberships_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ADMIN",
                                "CONTRIB",
                                "OWNER",
                                "VIEWER"
                            ]
                        },
                        "description": "The role that the user has in the organization."
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The unique identifier of a user."
                    }
                ],
                "tags": [
                    "memberships"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMembershipList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "memberships_create",
                "tags": [
                    "memberships"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MembershipCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MembershipCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MembershipCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/memberships/{id}/": {
            "get": {
                "operationId": "memberships_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the membership."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "memberships"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "memberships_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the membership."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "memberships"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Membership"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Membership"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Membership"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "memberships_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the membership."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "memberships"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMembership"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMembership"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMembership"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membership"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "memberships_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the membership."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "memberships"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/organizations/": {
            "get": {
                "operationId": "organizations_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrganizationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "organizations_create",
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/organizations/{id}/": {
            "get": {
                "operationId": "organizations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "description": "A unique identifier for the organization."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "organizations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "description": "A unique identifier for the organization."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "organizations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "description": "A unique identifier for the organization."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganization"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "organizations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "description": "A unique identifier for the organization."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/projects/": {
            "get": {
                "operationId": "projects_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProjectList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_create",
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{id}/": {
            "get": {
                "operationId": "projects_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this project ledger.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the project."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the project."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the project."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Project destroyed."
                    },
                    "409": {
                        "description": "The project has dependents and cannot be removed."
                    },
                    "403": {
                        "description": "Permission denied."
                    }
                }
            }
        },
        "/api/v1/projects/{id}/copy/": {
            "post": {
                "operationId": "projects_copy_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the project."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCopy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCopy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCopy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": "Project copied"
                    },
                    "400": {
                        "description": "The Project copy failed."
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameter-export/": {
            "get": {
                "operationId": "projects_parameter_export_list",
                "description": "Exports all parameters in this project in the requested format.\n\nParameter names and values will be coerced to the proper format (e.g. for a\ndotenv export, my_parameter will be capitalized to MY_PARAMETER and its value\nwill be in a quoted string).  Note that capitalization is the only name coercion\nthat will be performed on parameter names, names that are invalid for a given\nformat will be omitted.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "query",
                        "name": "contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Only include parameters with names that contain the provided string."
                    },
                    {
                        "in": "query",
                        "name": "endswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Only include parameters with names that end with the provided string."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name or id of the environment to use to retrieve parameter values."
                    },
                    {
                        "in": "query",
                        "name": "explicit_export",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Explicitly marks parameters with export, e.g. `export FOO=bar`."
                    },
                    {
                        "in": "query",
                        "name": "mask_secrets",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Masks all secrets in the template with `*****`."
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "output",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Format to output: One of 'docker', 'dotenv', 'shell'."
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Only include parameters with names that start with the provided string."
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterExport"
                                }
                            }
                        },
                        "description": ""
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateLookupError"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/": {
            "get": {
                "operationId": "projects_parameters_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "difference",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a list of comma-separated environment names or ids (uuid) to compare values. Only returns a parameter if there is a difference. Cannot be used with `environment` or `values`. If used with `mask_secrets` then no secret parameters will be included in the result."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name or id (uuid) of the environment(s) to get parameter values for. Cannot be used with `values`."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If `true`, runs template evaluation on this parameter's values.  If `false`, returns the value's template.\nHas no effect on values that are not interpolated."
                    },
                    {
                        "in": "query",
                        "name": "immediate_parameters",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "If true, filter by current project parameters only. Otherwise, include both of the inherited and current project parameters."
                    },
                    {
                        "in": "query",
                        "name": "mask_secrets",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "If true, replaces all secrets with `*****`."
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "secret",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    },
                    {
                        "in": "query",
                        "name": "values",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If false, values are not returned: the `values` array will have no entries. This speeds up retrieval if value content is not needed. Cannot be used with `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedParameterList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_parameters_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Parameter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/{parameter_pk}/pushes/": {
            "get": {
                "operationId": "projects_parameters_pushes_list",
                "description": "The push operations that this parameter was involved in.",
                "summary": "List push operations.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskStepList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/{parameter_pk}/rules/": {
            "get": {
                "operationId": "projects_parameters_rules_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "max",
                                "max_len",
                                "min",
                                "min_len",
                                "regex"
                            ]
                        }
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedParameterRuleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_parameters_rules_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterRuleCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterRuleCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterRuleCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterRule"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/{parameter_pk}/rules/{id}/": {
            "get": {
                "operationId": "projects_parameters_rules_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter rule.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterRule"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_parameters_rules_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter rule.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterRuleUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterRuleUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterRuleUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterRuleUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_parameters_rules_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter rule.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterRuleUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterRuleUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterRuleUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterRuleUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_parameters_rules_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter rule.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/{parameter_pk}/values/": {
            "get": {
                "operationId": "projects_parameters_values_list",
                "description": "\n        Retrieve previously set values of a parameter in one or all environments.\n        To see all the _effective_ values for a parameter across every environment,\n        use the Parameters API (see the `values` field).\n    ",
                "summary": "Retrieve values.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "When fetching a single value, if that value is dynamic and evaluate is true, uses this environment for template evaluation.  If none is specified, uses the value's environment.  Note that the value must be active in the specified environment.\nNo effect on values that are not dynamic."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If `true`, runs template evaluation on this parameter.  If `false`, returns the value's template.\nNo effect on values that are not interpolated."
                    },
                    {
                        "in": "query",
                        "name": "exclude",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma-separated list of field names to exclude from the response."
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma-separated list of field names to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "mask_secrets",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Mask secret values in responses with `*****`."
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedValueList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_parameters_values_create",
                "description": "Set the value of a parameter in an environment.",
                "summary": "Set a value.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "When fetching a single value, if that value is dynamic and evaluate is true, uses this environment for template evaluation.  If none is specified, uses the value's environment.  Note that the value must be active in the specified environment.\nNo effect on values that are not dynamic."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If `true`, runs template evaluation on this parameter.  If `false`, returns the value's template.\nNo effect on values that are not interpolated."
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValueCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ValueCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ValueCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Value"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/{parameter_pk}/values/{id}/": {
            "get": {
                "operationId": "projects_parameters_values_retrieve",
                "description": "Retrieve the value of a parameter in an environment.",
                "summary": "Retrieve a value.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "When fetching a single value, if that value is dynamic and evaluate is true, uses this environment for template evaluation.  If none is specified, uses the value's environment.  Note that the value must be active in the specified environment.\nNo effect on values that are not dynamic."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If `true`, runs template evaluation on this parameter.  If `false`, returns the value's template.\nNo effect on values that are not interpolated."
                    },
                    {
                        "in": "query",
                        "name": "exclude",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma-separated list of field names to exclude from the response."
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this value ledger.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma-separated list of field names to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "mask_secrets",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Mask secret values in responses with `*****`."
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Value"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_parameters_values_update",
                "description": "Update the value of a parameter in an environment.",
                "summary": "Update a value.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "When fetching a single value, if that value is dynamic and evaluate is true, uses this environment for template evaluation.  If none is specified, uses the value's environment.  Note that the value must be active in the specified environment.\nNo effect on values that are not dynamic."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If `true`, runs template evaluation on this parameter.  If `false`, returns the value's template.\nNo effect on values that are not interpolated."
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the value."
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValueUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ValueUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ValueUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValueUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_parameters_values_partial_update",
                "description": "Update the value of a parameter in an environment.",
                "summary": "Update a value.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "When fetching a single value, if that value is dynamic and evaluate is true, uses this environment for template evaluation.  If none is specified, uses the value's environment.  Note that the value must be active in the specified environment.\nNo effect on values that are not dynamic."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If `true`, runs template evaluation on this parameter.  If `false`, returns the value's template.\nNo effect on values that are not interpolated."
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the value."
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedValueUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedValueUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedValueUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValueUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_parameters_values_destroy",
                "description": "Destroy the value of a parameter in an environment.",
                "summary": "Destroy a value.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "When fetching a single value, if that value is dynamic and evaluate is true, uses this environment for template evaluation.  If none is specified, uses the value's environment.  Note that the value must be active in the specified environment.\nNo effect on values that are not dynamic."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If `true`, runs template evaluation on this parameter.  If `false`, returns the value's template.\nNo effect on values that are not interpolated."
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the value."
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parameter_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter id.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The project id.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/{id}/": {
            "get": {
                "operationId": "projects_parameters_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name or id (uuid) of the environment(s) to get parameter values for. Cannot be used with `values`."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If `true`, runs template evaluation on this parameter's values.  If `false`, returns the value's template.\nHas no effect on values that are not interpolated."
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter ledger.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "immediate_parameters",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "If true, filter by current project parameters only. Otherwise, include both of the inherited and current project parameters."
                    },
                    {
                        "in": "query",
                        "name": "mask_secrets",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "If true, replaces all secrets with `*****`."
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    },
                    {
                        "in": "query",
                        "name": "values",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If false, values are not returned: the `values` array will have no entries. This speeds up retrieval if value content is not needed. Cannot be used with `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Parameter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_parameters_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter."
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Parameter"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "While checking pre-conditions, an external value was encountered that could not be resolved."
                    },
                    "404": {
                        "description": "The given project id could not be found, or while checking pre-conditions, an external value was encountered that could not be resolved."
                    },
                    "415": {
                        "description": "While checking pre-conditions, an external value was encountered that has an invalid content type."
                    },
                    "422": {
                        "description": "A pre-condition to modifying the `secret` setting of the parameter failed, for example setting `secret: false` and having an external value that resolves to a value that is a secret.  In this case it would be unsafe to allow the `secret` setting to change."
                    },
                    "507": {
                        "description": "While checking pre-conditions, an external value was encountered that was too large to process."
                    }
                }
            },
            "patch": {
                "operationId": "projects_parameters_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter."
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Parameter"
                                }
                            }
                        },
                        "description": ""
                    },
                    "400": {
                        "description": "While checking pre-conditions, an external value was encountered that could not be resolved."
                    },
                    "404": {
                        "description": "The given project id could not be found, or while checking pre-conditions, an external value was encountered that could not be resolved."
                    },
                    "415": {
                        "description": "While checking pre-conditions, an external value was encountered that has an invalid content type."
                    },
                    "422": {
                        "description": "A pre-condition to modifying the `secret` setting of the parameter failed, for example setting `secret: false` and having an external value that resolves to a value that is a secret.  In this case it would be unsafe to allow the `secret` setting to change."
                    },
                    "507": {
                        "description": "While checking pre-conditions, an external value was encountered that was too large to process."
                    }
                }
            },
            "delete": {
                "operationId": "projects_parameters_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter."
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/{id}/copy/": {
            "post": {
                "operationId": "projects_parameters_copy_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter."
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The project that the parameter is within."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterCopy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterCopy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterCopy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Parameter"
                                }
                            }
                        },
                        "description": "Parameter copied"
                    },
                    "400": {
                        "description": "The parameter copy failed."
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/{id}/timeline/": {
            "get": {
                "operationId": "projects_parameters_timeline_retrieve",
                "description": "Summary information about how a parameter has changed over time.\n\nThe time range of historical information available depends on your subscription.\nAny changes to the parameter itself, including rules and values, is included.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter ledger.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterTimeline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/duality/": {
            "get": {
                "operationId": "projects_parameters_duality_list",
                "description": "Retrieve parameters at dual timepoints for comparison.\n\nResults are aligned by parameter name.  This means if a parameter is\ncreated, then deleted, then created again with the same name the two\nrecords with different parameter IDs will show up in the same result\nentry.\n\nIf t1 is not specified then it will point to a time in the past where\nnothing existed.  If t2 is not specified then it is assumed to be \"now\".",
                "parameters": [
                    {
                        "in": "query",
                        "name": "difference",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Compare the values at `t1` and `t2` and if they are the same, omit the parameter from the result."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name or id (uuid) of the environment(s) to get parameter values for. Cannot be used with `values`."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If `true`, runs template evaluation on this parameter's values.  If `false`, returns the value's template.\nHas no effect on values that are not interpolated."
                    },
                    {
                        "in": "query",
                        "name": "immediate_parameters",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "If true, filter by current project parameters only. Otherwise, include both of the inherited and current project parameters."
                    },
                    {
                        "in": "query",
                        "name": "mask_secrets",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "If true, replaces all secrets with `*****`."
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "secret",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "t1_as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `t1_tag`."
                    },
                    {
                        "in": "query",
                        "name": "t1_tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `t1_as_of`. Requires `environment`."
                    },
                    {
                        "in": "query",
                        "name": "t2_as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `t2_tag`."
                    },
                    {
                        "in": "query",
                        "name": "t2_tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `t2_as_of`. Requires `environment`."
                    },
                    {
                        "in": "query",
                        "name": "values",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If false, values are not returned: the `values` array will have no entries. This speeds up retrieval if value content is not needed. Cannot be used with `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedParameterDualityList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/parameters/timelines/": {
            "get": {
                "operationId": "projects_parameters_timelines_retrieve",
                "description": "Information about how the parameters of a project have changed over time.\n\nThe time range of historical information available depends on your subscription.\nAny changes to the project's parameters, including rules and values, is included.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterTimeline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/template-preview/": {
            "post": {
                "operationId": "projects_template_preview_create",
                "description": "Endpoint for previewing a template.  Post the template content in the request body.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name or id of the environment to use to instantiate this template. If not specified then the default environment is used."
                    },
                    {
                        "in": "query",
                        "name": "mask_secrets",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Masks all secrets in the template with `*****`."
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    },
                    {
                        "in": "query",
                        "name": "template",
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the template parameter being previewed.  If not specified, this is assumed to be a not-yet-created parameter."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplatePreviewCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplatePreviewCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplatePreviewCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplatePreview"
                                }
                            }
                        },
                        "description": ""
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateLookupError"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/templates/": {
            "get": {
                "operationId": "projects_templates_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name or id of the environment to use to evaluate this template. If not specified then the original content is returned in the body."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "If `true`, evaluates the template's body.  If `false`, returns the unevaluated template body.\n"
                    },
                    {
                        "in": "query",
                        "name": "mask_secrets",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Masks all secrets in the template with `*****`."
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTemplateList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateLookupError"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_templates_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        },
                        "description": ""
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateLookupError"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/templates/{id}/": {
            "get": {
                "operationId": "projects_templates_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name or id of the environment to use to evaluate this template. If not specified then the original content is returned in the body."
                    },
                    {
                        "in": "query",
                        "name": "evaluate",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "If `true`, evaluates the template's body.  If `false`, returns the unevaluated template body.\n"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter ledger.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "mask_secrets",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Masks all secrets in the template with `*****`."
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        },
                        "description": ""
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateLookupError"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_templates_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter."
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        },
                        "description": ""
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateLookupError"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_templates_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter."
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTemplateUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTemplateUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTemplateUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        },
                        "description": ""
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateLookupError"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_templates_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter."
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Template destroyed."
                    },
                    "409": {
                        "description": "The template is referenced by another template or value and cannot be removed."
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/templates/{id}/timeline/": {
            "get": {
                "operationId": "projects_templates_timeline_retrieve",
                "description": "Information about how a template has changed over time.\n\nThe time range of historical information available depends on your subscription.\nAny changes to the template itself is included.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name or id of the environment to use to evaluate this template. If not specified then the original content is returned in the body."
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter ledger.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateTimeline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/projects/{project_pk}/templates/timelines/": {
            "get": {
                "operationId": "projects_templates_timelines_retrieve",
                "description": "Information about how the templates of a project have changed over time.\n\nThe time range of historical information available depends on your subscription.\nAny changes to the project's templates is included.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "as_of",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Specify a point in time to retrieve configuration from. Cannot be specified with `tag`."
                    },
                    {
                        "in": "query",
                        "name": "environment",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name or id of the environment to use to evaluate this template. If not specified then the original content is returned in the body."
                    },
                    {
                        "in": "path",
                        "name": "project_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specify a tag to retrieve configuration from. Cannot be specified with `as_of`. Requires `environment`."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemplateTimeline"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/serviceaccounts/": {
            "get": {
                "operationId": "serviceaccounts_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "serviceaccounts"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedServiceAccountList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "serviceaccounts_create",
                "description": "\n            Creates a new ServiceAccount.  A ServiceAccount is a user record intended\n            for machine use (such as a build system).  It does not have a username/password\n            but is instead accessed using an API key.\n\n            On creation, the API key will be returned.  This key will only be shown once,\n            is not stored on any CloudTruth system, and should be treated as a secret.  Should\n            the key be lost, you will need to delete and recreate the ServiceAccount in order\n            to generate a new API key.\n            ",
                "summary": "Create a ServiceAccount user.",
                "tags": [
                    "serviceaccounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceAccountCreateResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/serviceaccounts/{id}/": {
            "get": {
                "operationId": "serviceaccounts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this service account.",
                        "required": true
                    }
                ],
                "tags": [
                    "serviceaccounts"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "serviceaccounts_update",
                "description": "\n            Updates a ServiceAccount.  A ServiceAccount is a user record intended\n            for machine use (such as a build system).  It does not have a username/password\n            but is instead accessed using an API key.\n            ",
                "summary": "Update a ServiceAccount user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this service account.",
                        "required": true
                    }
                ],
                "tags": [
                    "serviceaccounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountUpdateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountUpdateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountUpdateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceAccountUpdateRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "serviceaccounts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this service account.",
                        "required": true
                    }
                ],
                "tags": [
                    "serviceaccounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedServiceAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedServiceAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedServiceAccount"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "serviceaccounts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this service account.",
                        "required": true
                    }
                ],
                "tags": [
                    "serviceaccounts"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/serviceaccounts/{id}/rekey/": {
            "post": {
                "operationId": "serviceaccounts_rekey_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this service account.",
                        "required": true
                    }
                ],
                "tags": [
                    "serviceaccounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountRekeyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountRekeyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceAccountRekeyRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceAccountRekeyRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/types/": {
            "get": {
                "operationId": "types_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "types"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedParameterTypeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "types_create",
                "tags": [
                    "types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/types/{parametertype_pk}/rules/": {
            "get": {
                "operationId": "types_rules_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "parametertype_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter type id.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "max",
                                "max_len",
                                "min",
                                "min_len",
                                "regex"
                            ]
                        }
                    }
                ],
                "tags": [
                    "types"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedParameterTypeRuleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "types_rules_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "parametertype_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter type id.",
                        "required": true
                    }
                ],
                "tags": [
                    "types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeRuleCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeRuleCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeRuleCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterTypeRule"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/types/{parametertype_pk}/rules/{id}/": {
            "get": {
                "operationId": "types_rules_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter type rule.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parametertype_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter type id.",
                        "required": true
                    }
                ],
                "tags": [
                    "types"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterTypeRule"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "types_rules_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter type rule.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parametertype_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter type id.",
                        "required": true
                    }
                ],
                "tags": [
                    "types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeRuleUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeRuleUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeRuleUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterTypeRuleUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "types_rules_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter type rule.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parametertype_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter type id.",
                        "required": true
                    }
                ],
                "tags": [
                    "types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterTypeRuleUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterTypeRuleUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterTypeRuleUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterTypeRuleUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "types_rules_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this parameter type rule.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "parametertype_pk",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The parameter type id.",
                        "required": true
                    }
                ],
                "tags": [
                    "types"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/types/{id}/": {
            "get": {
                "operationId": "types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter type."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "types"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "types_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter type."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ParameterTypeUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterTypeUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "types_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter type."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterTypeUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterTypeUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedParameterTypeUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParameterTypeUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "types_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "A unique identifier for the parameter type."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "types"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/users/": {
            "get": {
                "operationId": "users_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/users/{id}/": {
            "get": {
                "operationId": "users_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "description": "The unique identifier of a user."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "users_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "description": "The unique identifier of a user."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "users_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "description": "The unique identifier of a user."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateUser"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "users_destroy",
                "description": "### Description ###\n\nDelete the specified user.  This removes all access the User may have to any Organization.\n\n### Pre-Conditions ###\n\n- The user cannot be the only owner of any Organization.\n- The bearer token must belong to the user being deleted.\n- All of the memberships related to the User will be deleted, so all the membership deletion pre-conditions must also be met.\n",
                "summary": "Delete the specified user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "description": "The unique identifier of a user."
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted. The client should behave as if the user logged out."
                    },
                    "400": {
                        "description": "Bad Request\n\n- Is the user the only owner of any organization?\n- Were all required fields provided?"
                    },
                    "403": {
                        "description": "Forbidden\n\n- Did the Bearer token belong to the User being deleted?"
                    }
                }
            }
        },
        "/api/v1/users/current/": {
            "get": {
                "operationId": "users_current_retrieve",
                "description": "Get user information about the current user.",
                "summary": "Current user information",
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "User information"
                    }
                }
            }
        },
        "/api/v1/utils/generate_password/": {
            "post": {
                "operationId": "utils_generate_password_create",
                "description": "Endpoint for accessing utility functions",
                "summary": "Get a randomly generated password using AWS Secrets Manager, with fallback to /dev/urandom.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "length",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The length of the password to generate.  Minimum of 8, maximum of 4095.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "require_hardware_generation",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Default behavior is to fallback to /dev/urandom if we fail to get a random password from AWS Secrets Manager.  If set to 'True', we will not fallback to local password generation using /dev/urandom.  Default: False"
                    },
                    {
                        "in": "query",
                        "name": "require_lowercase",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "The password must include lowercase letters [a-z]. Default: True."
                    },
                    {
                        "in": "query",
                        "name": "require_numbers",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "The password must include numbers [0-9].  Default: True."
                    },
                    {
                        "in": "query",
                        "name": "require_spaces",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "The password must include spaces [ ].  Default: False."
                    },
                    {
                        "in": "query",
                        "name": "require_symbols",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "The password must include symbols [!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~].  Default: False."
                    },
                    {
                        "in": "query",
                        "name": "require_uppercase",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "description": "The password must include uppercase letters [A-Z].  Default: True."
                    }
                ],
                "tags": [
                    "utils"
                ],
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GeneratedPasswordResponse"
                                },
                                "examples": {
                                    "GenerateAPassword": {
                                        "value": {
                                            "value": "S*f4wg8lR$7gfwefhuL>UIuyg4efb"
                                        },
                                        "summary": "Generate a password",
                                        "description": "Successfully generated random password."
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AuditTrail": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the audit record."
                    },
                    "action": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The action that was taken."
                    },
                    "object_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The id of the object associated with the action."
                    },
                    "object_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the object associated with the action, if applicable."
                    },
                    "object_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ObjectTypeEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The type of object associated with the action."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The timestamp of the activity that was audited."
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true,
                        "description": "Details of the user associated with this change."
                    }
                },
                "required": [
                    "action",
                    "id",
                    "object_id",
                    "object_name",
                    "object_type",
                    "timestamp",
                    "url",
                    "user"
                ]
            },
            "AuditTrailSummary": {
                "type": "object",
                "properties": {
                    "earliest": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true,
                        "description": "The earliest audit record timestamp available."
                    },
                    "max_days": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The maximum number of days the system will save auditing records, based on your subscription."
                    },
                    "max_records": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The maximum number of auditing records the system will save based on your subscription."
                    },
                    "total": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total number of audit records available."
                    }
                },
                "required": [
                    "earliest",
                    "max_days",
                    "max_records",
                    "total"
                ]
            },
            "AwsIntegration": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier for the integration."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description for the integration."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The status of the integration connection with the third-party provider as of the `status_last_checked_at` field.  The status is updated automatically by the server when the integration is modified."
                    },
                    "status_detail": {
                        "type": "string",
                        "readOnly": true,
                        "description": "If an error occurs, more details will be available in this field."
                    },
                    "status_last_checked_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The last time the status was evaluated."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "fqn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of integration."
                    },
                    "writable": {
                        "type": "boolean",
                        "description": "Allow actions to write to the integration."
                    },
                    "aws_account_id": {
                        "type": "string",
                        "description": "The AWS Account ID.",
                        "pattern": "^[0-9]+$",
                        "maxLength": 12,
                        "minLength": 12
                    },
                    "aws_enabled_regions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsRegionEnum"
                        },
                        "description": "The AWS regions to integrate with."
                    },
                    "aws_enabled_services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsServiceEnum"
                        },
                        "description": "The AWS services to integrate with."
                    },
                    "aws_external_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "This is a shared secret between the AWS Administrator who set up your IAM trust relationship and your CloudTruth AWS Integration.  CloudTruth will generate a random value for you to give to your AWS Administrator in order to create the necessary IAM role for proper access."
                    },
                    "aws_kms_key_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "If present, this is the KMS Key Id that is used to push values.  This key must be accessible in the AWS account (it cannot be an ARN to a key in another AWS account). ",
                        "pattern": "^[a-zA-Z0-9:/_\\-]+$",
                        "maxLength": 256
                    },
                    "aws_role_name": {
                        "type": "string",
                        "description": "The role that CloudTruth will assume when interacting with your AWS Account through this integration.  The role is configured by your AWS Account Administrator.  If your AWS Administrator provided you with a value use it, otherwise make your own role name and give it to your AWS Administrator.",
                        "pattern": "^[\\w+=,.@\\-]+$",
                        "maxLength": 64,
                        "minLength": 2
                    },
                    "resource_tags": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "A list of tags to be set on all integration resources."
                    }
                },
                "required": [
                    "aws_account_id",
                    "aws_enabled_regions",
                    "aws_enabled_services",
                    "aws_external_id",
                    "aws_role_name",
                    "created_at",
                    "fqn",
                    "id",
                    "modified_at",
                    "name",
                    "status",
                    "status_detail",
                    "status_last_checked_at",
                    "type",
                    "url"
                ]
            },
            "AwsIntegrationCreate": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "An optional description for the integration."
                    },
                    "writable": {
                        "type": "boolean",
                        "description": "Allow actions to write to the integration."
                    },
                    "aws_account_id": {
                        "type": "string",
                        "description": "The AWS Account ID.",
                        "pattern": "^[0-9]+$",
                        "maxLength": 12,
                        "minLength": 12
                    },
                    "aws_enabled_regions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsRegionEnum"
                        },
                        "description": "The AWS regions to integrate with."
                    },
                    "aws_enabled_services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsServiceEnum"
                        },
                        "description": "The AWS services to integrate with."
                    },
                    "aws_external_id": {
                        "type": "string",
                        "description": "This is a shared secret between the AWS Administrator who set up your IAM trust relationship and your CloudTruth AWS Integration.  CloudTruth will generate a random value for you to give to your AWS Administrator in order to create the necessary IAM role for proper access.",
                        "minLength": 2,
                        "pattern": "^[\\w+=,.@:/\\-]*$",
                        "maxLength": 1224
                    },
                    "aws_kms_key_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "If present, this is the KMS Key Id that is used to push values.  This key must be accessible in the AWS account (it cannot be an ARN to a key in another AWS account). ",
                        "pattern": "^[a-zA-Z0-9:/_\\-]+$",
                        "maxLength": 256
                    },
                    "aws_role_name": {
                        "type": "string",
                        "description": "The role that CloudTruth will assume when interacting with your AWS Account through this integration.  The role is configured by your AWS Account Administrator.  If your AWS Administrator provided you with a value use it, otherwise make your own role name and give it to your AWS Administrator.",
                        "pattern": "^[\\w+=,.@\\-]+$",
                        "maxLength": 64,
                        "minLength": 2
                    },
                    "resource_tags": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "A list of tags to be set on all integration resources."
                    }
                },
                "required": [
                    "aws_account_id",
                    "aws_enabled_regions",
                    "aws_enabled_services",
                    "aws_role_name"
                ]
            },
            "AwsIntegrationScan": {
                "type": "object",
                "properties": {
                    "region": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsRegionEnum"
                            }
                        ],
                        "description": "The AWS region to use.  This region must be enabled in the integration."
                    },
                    "service": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsServiceEnum"
                            }
                        ],
                        "description": "The AWS service to use.  This service must be enabled in the integration."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a pattern matching string that contains either mustache or regular expression syntax (with named capture groups) that locate the environment, project, and parameter name of the content you are looking for.\n\nIf you are using mustache pattern matching, use:\n\n  - ``{{ environment }}`` to identify the environment name\n  - ``{{ parameter }}`` to identify the parameter name\n  - ``{{ project }}`` to identify the project name\n\nIf you are using a regular expression, use Python syntax with named capture groups that locate the `environment`, `project`, and `parameter`.",
                        "maxLength": 1024
                    }
                },
                "required": [
                    "region",
                    "resource",
                    "service"
                ]
            },
            "AwsPull": {
                "type": "object",
                "description": "Pull actions can be configured to get configuration and secrets from\nintegrations on demand.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for the action."
                    },
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "latest_task": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsPullTask"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent task run for this action."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "create_environments": {
                        "type": "boolean",
                        "description": "Allow the pull to create environments.  Any automatically created environments will be children of the `default` environment.  If an environment needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "create_projects": {
                        "type": "boolean",
                        "description": "Allow the pull to create projects.  If a project needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "mapped_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValueCreate"
                        },
                        "readOnly": true,
                        "description": "Values being managed by a mapped pull."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The pull mode used.\n\nA pattern pull uses a pattern-matching resource string with mustache-style markers to identify the project, parameter, and environment names, or with a Python regular expression that uses named capture groups that define the same three concepts.\n\nA mapped pull uses a specific resource and JMESpath expression to deliver a value to a specific project, parameter, and environment.  This leverages external value linkages made in the value editor, and there is one mapped pull per integration provided by the system so that you can trigger external value pull synchronizations."
                    },
                    "region": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsRegionEnum"
                            }
                        ],
                        "description": "The AWS region to use.  This region must be enabled in the integration."
                    },
                    "service": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsServiceEnum"
                            }
                        ],
                        "description": "The AWS service to use.  This service must be enabled in the integration."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a pattern matching string that contains either mustache or regular expression syntax (with named capture groups) that locate the environment, project, and parameter name of the content you are looking for.\n\nIf you are using mustache pattern matching, use:\n\n  - ``{{ environment }}`` to identify the environment name\n  - ``{{ parameter }}`` to identify the parameter name\n  - ``{{ project }}`` to identify the project name\n\nIf you are using a regular expression, use Python syntax with named capture groups that locate the `environment`, `project`, and `parameter`.",
                        "maxLength": 1024
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "latest_task",
                    "mapped_values",
                    "mode",
                    "modified_at",
                    "name",
                    "region",
                    "resource",
                    "service",
                    "url"
                ]
            },
            "AwsPullSyncActionRequest": {
                "type": "object",
                "properties": {
                    "dry_run": {
                        "type": "boolean",
                        "writeOnly": true,
                        "description": "Allows you to set the dry_run flag on the pull action before triggering a sync."
                    }
                }
            },
            "AwsPullTask": {
                "type": "object",
                "description": "Pull task for an AWS integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier for the task."
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true,
                        "description": "The reason why this task was triggered.",
                        "maxLength": 256
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "Indicates task steps were only simulated, not actually performed."
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StateEnum"
                            }
                        ],
                        "description": "The current state of this task."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an error occurs early during processing, before attempting to process values, this code may be helpful in determining the problem.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an error occurs early during processing, before attempting to process values, this detail may be helpful in determining the problem."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "url"
                ]
            },
            "AwsPullTaskStep": {
                "type": "object",
                "description": "Pull task step for an AWS integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for a task step."
                    },
                    "operation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OperationEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Indicates if the operation was successful."
                    },
                    "success_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional details about the successful operation, if any."
                    },
                    "fqn": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fully-qualified name (FQN) this of the value that was changed.",
                        "maxLength": 1024
                    },
                    "environment": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The environment affected by this step."
                    },
                    "environment_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The environment id involved in the operation."
                    },
                    "environment_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The environment name involved in the operation.",
                        "maxLength": 256
                    },
                    "project": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The project affected by this step."
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The project id involved in the operation."
                    },
                    "project_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The project name involved in the operation.",
                        "maxLength": 256
                    },
                    "parameter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The parameter affected by this step."
                    },
                    "parameter_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The parameter id involved in the operation."
                    },
                    "parameter_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The parameter name involved in the operation.",
                        "maxLength": 256
                    },
                    "venue_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The integration-native id for the resource.",
                        "maxLength": 2048
                    },
                    "venue_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the item or resource as known by the integration.",
                        "maxLength": 1024
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true,
                        "description": "The summary of this step (what it was trying to do)."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "An error code, if not successful.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Details on the error that occurred during processing."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "environment",
                    "id",
                    "modified_at",
                    "parameter",
                    "project",
                    "success",
                    "url"
                ]
            },
            "AwsPush": {
                "type": "object",
                "description": "Push actions can be configured to send configuration and secrets to\nintegrations when tags are updated.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for the action."
                    },
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "latest_task": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsPushTask"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent task run for this action."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "coerce_parameters": {
                        "type": "boolean",
                        "description": "This setting allows parameters (non-secrets) to be pushed to a destination that only supports storing secrets.  This may increase your overall cost from the cloud provider as some cloud providers charge a premium for secrets-only storage."
                    },
                    "include_parameters": {
                        "type": "boolean",
                        "description": "Include parameters (non-secrets) in the values being pushed.  This setting requires the destination to support parameters or for the `coerce_parameters` flag to be enabled, otherwise the push will fail."
                    },
                    "include_secrets": {
                        "type": "boolean",
                        "description": "Include secrets in the values being pushed.  This setting requires the destination to support secrets, otherwise the push will fail."
                    },
                    "include_templates": {
                        "type": "boolean",
                        "description": "Include templates in the values being pushed."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "force": {
                        "type": "boolean",
                        "description": "Normally, push will check to see if it originated the values in the destination before making changes to them.  Forcing a push disables the ownership check."
                    },
                    "local": {
                        "type": "boolean",
                        "description": "Normally, push will process all parameters including those that flow in from project dependencies.  Declaring a push as `local` will cause it to only process the parameters defined in the selected projects."
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Projects that are included in the push."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Tags are used to select parameters by environment from the projects included in the push.  You cannot have two tags from the same environment in the same push."
                    },
                    "region": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsRegionEnum"
                            }
                        ],
                        "description": "The AWS region this push targets.  This region must be enabled in the integration."
                    },
                    "service": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsServiceEnum"
                            }
                        ],
                        "description": "The AWS service this push targets.  This service must be enabled in the integration."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a path through the integration to the location where values will be pushed.\n\nThe following mustache-style substitutions can be used in the string:\n\n  - ``{{ environment }}`` to insert the environment name\n  - ``{{ parameter }}`` to insert the parameter name\n  - ``{{ project }}`` to insert the project name\n  - ``{{ push }}`` to insert the push name\n  - ``{{ tag }}`` to insert the tag name\n\nWe recommend that you use project, environment, and parameter at a minimum to disambiguate your pushed resource identifiers.\n\nIf you include multiple projects in the push, the `project` substitution is required.  If you include multiple tags from different environments in the push, the `environment` substitution is required.  If you include multiple tags from the same environment in the push, the `tag` substitution is required.  In all cases, the `parameter` substitution is always required.",
                        "maxLength": 1024
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "latest_task",
                    "modified_at",
                    "name",
                    "projects",
                    "region",
                    "resource",
                    "service",
                    "tags",
                    "url"
                ]
            },
            "AwsPushTask": {
                "type": "object",
                "description": "Push task for an AWS integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier for the task."
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true,
                        "description": "The reason why this task was triggered.",
                        "maxLength": 256
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "Indicates task steps were only simulated, not actually performed."
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StateEnum"
                            }
                        ],
                        "description": "The current state of this task."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an error occurs early during processing, before attempting to process values, this code may be helpful in determining the problem.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an error occurs early during processing, before attempting to process values, this detail may be helpful in determining the problem."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "url"
                ]
            },
            "AwsPushTaskStep": {
                "type": "object",
                "description": "Push task step for an AWS integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for a task step."
                    },
                    "operation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OperationEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Indicates if the operation was successful."
                    },
                    "success_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional details about the successful operation, if any."
                    },
                    "fqn": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fully-qualified name (FQN) this of the value that was changed.",
                        "maxLength": 1024
                    },
                    "environment": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The environment affected by this step."
                    },
                    "environment_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The environment id involved in the operation."
                    },
                    "environment_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The environment name involved in the operation.",
                        "maxLength": 256
                    },
                    "project": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The project affected by this step."
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The project id involved in the operation."
                    },
                    "project_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The project name involved in the operation.",
                        "maxLength": 256
                    },
                    "parameter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The parameter affected by this step."
                    },
                    "parameter_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The parameter id involved in the operation."
                    },
                    "parameter_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The parameter name involved in the operation.",
                        "maxLength": 256
                    },
                    "venue_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The integration-native id for the resource.",
                        "maxLength": 2048
                    },
                    "venue_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the item or resource as known by the integration.",
                        "maxLength": 1024
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true,
                        "description": "The summary of this step (what it was trying to do)."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "An error code, if not successful.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Details on the error that occurred during processing."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "environment",
                    "id",
                    "modified_at",
                    "parameter",
                    "project",
                    "success",
                    "url"
                ]
            },
            "AwsPushUpdate": {
                "type": "object",
                "description": "Update a push.  The `region` and `service` cannot be changed on an existing push.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Projects that are included in the push."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Tags are used to select parameters by environment from the projects included in the push.  You cannot have two tags from the same environment in the same push."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a path through the integration to the location where values will be pushed.\n\nThe following mustache-style substitutions can be used in the string:\n\n  - ``{{ environment }}`` to insert the environment name\n  - ``{{ parameter }}`` to insert the parameter name\n  - ``{{ project }}`` to insert the project name\n  - ``{{ push }}`` to insert the push name\n  - ``{{ tag }}`` to insert the tag name\n\nWe recommend that you use project, environment, and parameter at a minimum to disambiguate your pushed resource identifiers.\n\nIf you include multiple projects in the push, the `project` substitution is required.  If you include multiple tags from different environments in the push, the `environment` substitution is required.  If you include multiple tags from the same environment in the push, the `tag` substitution is required.  In all cases, the `parameter` substitution is always required.",
                        "maxLength": 1024
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "force": {
                        "type": "boolean",
                        "description": "Normally, push will check to see if it originated the values in the destination before making changes to them.  Forcing a push disables the ownership check."
                    },
                    "local": {
                        "type": "boolean",
                        "description": "Normally, push will process all parameters including those that flow in from project dependencies.  Declaring a push as `local` will cause it to only process the parameters defined in the selected projects."
                    },
                    "coerce_parameters": {
                        "type": "boolean",
                        "description": "This setting allows parameters (non-secrets) to be pushed to a destination that only supports storing secrets.  This may increase your overall cost from the cloud provider as some cloud providers charge a premium for secrets-only storage."
                    },
                    "include_parameters": {
                        "type": "boolean",
                        "description": "Include parameters (non-secrets) in the values being pushed.  This setting requires the destination to support parameters or for the `coerce_parameters` flag to be enabled, otherwise the push will fail."
                    },
                    "include_secrets": {
                        "type": "boolean",
                        "description": "Include secrets in the values being pushed.  This setting requires the destination to support secrets, otherwise the push will fail."
                    },
                    "include_templates": {
                        "type": "boolean",
                        "description": "Include templates in the values being pushed."
                    }
                },
                "required": [
                    "name",
                    "projects",
                    "resource",
                    "tags"
                ]
            },
            "AwsRegionEnum": {
                "enum": [
                    "af-south-1",
                    "ap-east-1",
                    "ap-northeast-1",
                    "ap-northeast-2",
                    "ap-northeast-3",
                    "ap-south-1",
                    "ap-southeast-1",
                    "ap-southeast-2",
                    "ca-central-1",
                    "cn-north-1",
                    "cn-northwest-1",
                    "eu-central-1",
                    "eu-north-1",
                    "eu-south-1",
                    "eu-west-1",
                    "eu-west-2",
                    "eu-west-3",
                    "me-south-1",
                    "sa-east-1",
                    "us-east-1",
                    "us-east-2",
                    "us-west-1",
                    "us-west-2"
                ],
                "type": "string"
            },
            "AwsServiceEnum": {
                "enum": [
                    "s3",
                    "secretsmanager",
                    "ssm"
                ],
                "type": "string"
            },
            "AzureKeyVaultIntegration": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier for the integration."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description for the integration."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The status of the integration connection with the third-party provider as of the `status_last_checked_at` field.  The status is updated automatically by the server when the integration is modified."
                    },
                    "status_detail": {
                        "type": "string",
                        "readOnly": true,
                        "description": "If an error occurs, more details will be available in this field."
                    },
                    "status_last_checked_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The last time the status was evaluated."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "fqn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of integration."
                    },
                    "writable": {
                        "type": "boolean",
                        "description": "Allow actions to write to the integration."
                    },
                    "resource_tags": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "A list of tags to be set on all integration resources."
                    },
                    "vault_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Azure Key Vault name."
                    },
                    "tenant_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The Azure Tenant ID."
                    }
                },
                "required": [
                    "created_at",
                    "fqn",
                    "id",
                    "modified_at",
                    "name",
                    "status",
                    "status_detail",
                    "status_last_checked_at",
                    "tenant_id",
                    "type",
                    "url",
                    "vault_name"
                ]
            },
            "AzureKeyVaultIntegrationCreate": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "An optional description for the integration."
                    },
                    "writable": {
                        "type": "boolean",
                        "description": "Allow actions to write to the integration."
                    },
                    "resource_tags": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "A list of tags to be set on all integration resources."
                    },
                    "vault_name": {
                        "type": "string",
                        "description": "The Azure Key Vault name.",
                        "maxLength": 24
                    },
                    "tenant_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The Azure Tenant ID."
                    }
                },
                "required": [
                    "tenant_id",
                    "vault_name"
                ]
            },
            "AzureKeyVaultIntegrationScan": {
                "type": "object",
                "properties": {
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a pattern matching string that contains either mustache or regular expression syntax (with named capture groups) that locate the environment, project, and parameter name of the content you are looking for.\n\nIf you are using mustache pattern matching, use:\n\n  - ``{{ environment }}`` to identify the environment name\n  - ``{{ parameter }}`` to identify the parameter name\n  - ``{{ project }}`` to identify the project name\n\nIf you are using a regular expression, use Python syntax with named capture groups that locate the `environment`, `project`, and `parameter`.",
                        "maxLength": 1024
                    }
                },
                "required": [
                    "resource"
                ]
            },
            "AzureKeyVaultPull": {
                "type": "object",
                "description": "Pull actions can be configured to get configuration and secrets from\nintegrations on demand.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for the action."
                    },
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "latest_task": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AzureKeyVaultPullTask"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent task run for this action."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "create_environments": {
                        "type": "boolean",
                        "description": "Allow the pull to create environments.  Any automatically created environments will be children of the `default` environment.  If an environment needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "create_projects": {
                        "type": "boolean",
                        "description": "Allow the pull to create projects.  If a project needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "mapped_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValueCreate"
                        },
                        "readOnly": true,
                        "description": "Values being managed by a mapped pull."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The pull mode used.\n\nA pattern pull uses a pattern-matching resource string with mustache-style markers to identify the project, parameter, and environment names, or with a Python regular expression that uses named capture groups that define the same three concepts.\n\nA mapped pull uses a specific resource and JMESpath expression to deliver a value to a specific project, parameter, and environment.  This leverages external value linkages made in the value editor, and there is one mapped pull per integration provided by the system so that you can trigger external value pull synchronizations."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a pattern matching string that contains either mustache or regular expression syntax (with named capture groups) that locate the environment, project, and parameter name of the content you are looking for.\n\nIf you are using mustache pattern matching, use:\n\n  - ``{{ environment }}`` to identify the environment name\n  - ``{{ parameter }}`` to identify the parameter name\n  - ``{{ project }}`` to identify the project name\n\nIf you are using a regular expression, use Python syntax with named capture groups that locate the `environment`, `project`, and `parameter`.",
                        "maxLength": 1024
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "latest_task",
                    "mapped_values",
                    "mode",
                    "modified_at",
                    "name",
                    "resource",
                    "url"
                ]
            },
            "AzureKeyVaultPullSyncActionRequest": {
                "type": "object",
                "properties": {
                    "dry_run": {
                        "type": "boolean",
                        "writeOnly": true,
                        "description": "Allows you to set the dry_run flag on the pull action before triggering a sync."
                    }
                }
            },
            "AzureKeyVaultPullTask": {
                "type": "object",
                "description": "Pull task for an Azure Key Vault integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier for the task."
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true,
                        "description": "The reason why this task was triggered.",
                        "maxLength": 256
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "Indicates task steps were only simulated, not actually performed."
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StateEnum"
                            }
                        ],
                        "description": "The current state of this task."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an error occurs early during processing, before attempting to process values, this code may be helpful in determining the problem.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an error occurs early during processing, before attempting to process values, this detail may be helpful in determining the problem."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "url"
                ]
            },
            "AzureKeyVaultPullTaskStep": {
                "type": "object",
                "description": "Pull task step for an Azure Key Vault integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for a task step."
                    },
                    "operation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OperationEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Indicates if the operation was successful."
                    },
                    "success_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional details about the successful operation, if any."
                    },
                    "fqn": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fully-qualified name (FQN) this of the value that was changed.",
                        "maxLength": 1024
                    },
                    "environment": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The environment affected by this step."
                    },
                    "environment_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The environment id involved in the operation."
                    },
                    "environment_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The environment name involved in the operation.",
                        "maxLength": 256
                    },
                    "project": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The project affected by this step."
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The project id involved in the operation."
                    },
                    "project_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The project name involved in the operation.",
                        "maxLength": 256
                    },
                    "parameter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The parameter affected by this step."
                    },
                    "parameter_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The parameter id involved in the operation."
                    },
                    "parameter_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The parameter name involved in the operation.",
                        "maxLength": 256
                    },
                    "venue_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The integration-native id for the resource.",
                        "maxLength": 2048
                    },
                    "venue_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the item or resource as known by the integration.",
                        "maxLength": 1024
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true,
                        "description": "The summary of this step (what it was trying to do)."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "An error code, if not successful.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Details on the error that occurred during processing."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "environment",
                    "id",
                    "modified_at",
                    "parameter",
                    "project",
                    "success",
                    "url"
                ]
            },
            "AzureKeyVaultPush": {
                "type": "object",
                "description": "Push actions can be configured to send configuration and secrets to\nintegrations when tags are updated.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for the action."
                    },
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "latest_task": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AzureKeyVaultPushTask"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent task run for this action."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "coerce_parameters": {
                        "type": "boolean",
                        "description": "This setting allows parameters (non-secrets) to be pushed to a destination that only supports storing secrets.  This may increase your overall cost from the cloud provider as some cloud providers charge a premium for secrets-only storage."
                    },
                    "include_parameters": {
                        "type": "boolean",
                        "description": "Include parameters (non-secrets) in the values being pushed.  This setting requires the destination to support parameters or for the `coerce_parameters` flag to be enabled, otherwise the push will fail."
                    },
                    "include_secrets": {
                        "type": "boolean",
                        "description": "Include secrets in the values being pushed.  This setting requires the destination to support secrets, otherwise the push will fail."
                    },
                    "include_templates": {
                        "type": "boolean",
                        "description": "Include templates in the values being pushed."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "force": {
                        "type": "boolean",
                        "description": "Normally, push will check to see if it originated the values in the destination before making changes to them.  Forcing a push disables the ownership check."
                    },
                    "local": {
                        "type": "boolean",
                        "description": "Normally, push will process all parameters including those that flow in from project dependencies.  Declaring a push as `local` will cause it to only process the parameters defined in the selected projects."
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Projects that are included in the push."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Tags are used to select parameters by environment from the projects included in the push.  You cannot have two tags from the same environment in the same push."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a path through the integration to the location where values will be pushed.\n\nThe following mustache-style substitutions can be used in the string:\n\n  - ``{{ environment }}`` to insert the environment name\n  - ``{{ parameter }}`` to insert the parameter name\n  - ``{{ project }}`` to insert the project name\n  - ``{{ push }}`` to insert the push name\n  - ``{{ tag }}`` to insert the tag name\n\nWe recommend that you use project, environment, and parameter at a minimum to disambiguate your pushed resource identifiers.\n\nIf you include multiple projects in the push, the `project` substitution is required.  If you include multiple tags from different environments in the push, the `environment` substitution is required.  If you include multiple tags from the same environment in the push, the `tag` substitution is required.  In all cases, the `parameter` substitution is always required.",
                        "maxLength": 1024
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "latest_task",
                    "modified_at",
                    "name",
                    "projects",
                    "resource",
                    "tags",
                    "url"
                ]
            },
            "AzureKeyVaultPushTask": {
                "type": "object",
                "description": "Push task for an Azure Key Vault integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier for the task."
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true,
                        "description": "The reason why this task was triggered.",
                        "maxLength": 256
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "Indicates task steps were only simulated, not actually performed."
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StateEnum"
                            }
                        ],
                        "description": "The current state of this task."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an error occurs early during processing, before attempting to process values, this code may be helpful in determining the problem.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an error occurs early during processing, before attempting to process values, this detail may be helpful in determining the problem."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "url"
                ]
            },
            "AzureKeyVaultPushTaskStep": {
                "type": "object",
                "description": "Push task step for an Azure Key Vault integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for a task step."
                    },
                    "operation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OperationEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Indicates if the operation was successful."
                    },
                    "success_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional details about the successful operation, if any."
                    },
                    "fqn": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fully-qualified name (FQN) this of the value that was changed.",
                        "maxLength": 1024
                    },
                    "environment": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The environment affected by this step."
                    },
                    "environment_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The environment id involved in the operation."
                    },
                    "environment_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The environment name involved in the operation.",
                        "maxLength": 256
                    },
                    "project": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The project affected by this step."
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The project id involved in the operation."
                    },
                    "project_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The project name involved in the operation.",
                        "maxLength": 256
                    },
                    "parameter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The parameter affected by this step."
                    },
                    "parameter_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The parameter id involved in the operation."
                    },
                    "parameter_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The parameter name involved in the operation.",
                        "maxLength": 256
                    },
                    "venue_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The integration-native id for the resource.",
                        "maxLength": 2048
                    },
                    "venue_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the item or resource as known by the integration.",
                        "maxLength": 1024
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true,
                        "description": "The summary of this step (what it was trying to do)."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "An error code, if not successful.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Details on the error that occurred during processing."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "environment",
                    "id",
                    "modified_at",
                    "parameter",
                    "project",
                    "success",
                    "url"
                ]
            },
            "AzureKeyVaultPushUpdate": {
                "type": "object",
                "description": "Update a push.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Projects that are included in the push."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Tags are used to select parameters by environment from the projects included in the push.  You cannot have two tags from the same environment in the same push."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a path through the integration to the location where values will be pushed.\n\nThe following mustache-style substitutions can be used in the string:\n\n  - ``{{ environment }}`` to insert the environment name\n  - ``{{ parameter }}`` to insert the parameter name\n  - ``{{ project }}`` to insert the project name\n  - ``{{ push }}`` to insert the push name\n  - ``{{ tag }}`` to insert the tag name\n\nWe recommend that you use project, environment, and parameter at a minimum to disambiguate your pushed resource identifiers.\n\nIf you include multiple projects in the push, the `project` substitution is required.  If you include multiple tags from different environments in the push, the `environment` substitution is required.  If you include multiple tags from the same environment in the push, the `tag` substitution is required.  In all cases, the `parameter` substitution is always required.",
                        "maxLength": 1024
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "force": {
                        "type": "boolean",
                        "description": "Normally, push will check to see if it originated the values in the destination before making changes to them.  Forcing a push disables the ownership check."
                    },
                    "local": {
                        "type": "boolean",
                        "description": "Normally, push will process all parameters including those that flow in from project dependencies.  Declaring a push as `local` will cause it to only process the parameters defined in the selected projects."
                    },
                    "coerce_parameters": {
                        "type": "boolean",
                        "description": "This setting allows parameters (non-secrets) to be pushed to a destination that only supports storing secrets.  This may increase your overall cost from the cloud provider as some cloud providers charge a premium for secrets-only storage."
                    },
                    "include_parameters": {
                        "type": "boolean",
                        "description": "Include parameters (non-secrets) in the values being pushed.  This setting requires the destination to support parameters or for the `coerce_parameters` flag to be enabled, otherwise the push will fail."
                    },
                    "include_secrets": {
                        "type": "boolean",
                        "description": "Include secrets in the values being pushed.  This setting requires the destination to support secrets, otherwise the push will fail."
                    }
                },
                "required": [
                    "name",
                    "projects",
                    "resource",
                    "tags"
                ]
            },
            "BackupDataSnapshot": {
                "type": "object",
                "description": "Environment, parameter-type, and project (including parameters and values) data at a point in time.",
                "properties": {
                    "environments": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BackupEnvironment"
                        }
                    },
                    "types": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BackupParameterType"
                        }
                    },
                    "projects": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BackupProject"
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "environments",
                    "projects",
                    "timestamp",
                    "types"
                ]
            },
            "BackupEnvironment": {
                "type": "object",
                "description": "Basic environment data at a point in time.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "parent": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "BackupExternalReference": {
                "type": "object",
                "description": "External reference data at a point in time.",
                "properties": {
                    "fqn": {
                        "type": "string"
                    },
                    "jmes_path": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "fqn"
                ]
            },
            "BackupParameter": {
                "type": "object",
                "description": "Parameter, rule, and value data at a point in time.",
                "properties": {
                    "rules": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BackupParameterRule"
                        }
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/BackupParameterValue"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "param_type": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "param_type",
                    "project",
                    "rules",
                    "secret",
                    "values"
                ]
            },
            "BackupParameterRule": {
                "type": "object",
                "description": "Rule that is applied to a parameter or parameter-type at a point in time.",
                "properties": {
                    "rule_type": {
                        "type": "string"
                    },
                    "constraint": {
                        "type": "string"
                    }
                },
                "required": [
                    "constraint",
                    "rule_type"
                ]
            },
            "BackupParameterType": {
                "type": "object",
                "description": "Parameter type (and rule) data at a point in time.",
                "properties": {
                    "rules": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BackupParameterRule"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "parent": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "parent",
                    "rules"
                ]
            },
            "BackupParameterValue": {
                "type": "object",
                "description": "Parameter value data at a point in time.",
                "properties": {
                    "external": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/BackupExternalReference"
                            }
                        ],
                        "nullable": true
                    },
                    "environment": {
                        "type": "string"
                    },
                    "evaluated": {
                        "type": "boolean"
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "raw": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "environment",
                    "evaluated",
                    "external"
                ]
            },
            "BackupProject": {
                "type": "object",
                "description": "Environment, parameter-type, and project (including parameters and values) data at a point in time.",
                "properties": {
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BackupParameter"
                        }
                    },
                    "templates": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BackupTemplate"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "parent": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "parameters",
                    "templates"
                ]
            },
            "BackupTemplate": {
                "type": "object",
                "description": "Template data at a given point in time.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "description",
                    "name",
                    "text"
                ]
            },
            "DiscoveredContent": {
                "type": "object",
                "properties": {
                    "venue_id": {
                        "type": "string"
                    },
                    "venue_name": {
                        "type": "string"
                    },
                    "environment_name": {
                        "type": "string"
                    },
                    "project_name": {
                        "type": "string"
                    },
                    "parameter_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "environment_name",
                    "parameter_name",
                    "project_name",
                    "venue_id",
                    "venue_name"
                ]
            },
            "DiscoveryResult": {
                "type": "object",
                "properties": {
                    "matched": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/DiscoveredContent"
                            }
                        }
                    },
                    "skipped": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "matched",
                    "skipped"
                ]
            },
            "Environment": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The URL for the environment."
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ledger_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The environment name."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the environment.  You may find it helpful to document how this environment is used to assist others when they need to maintain software that uses this content."
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Environments can inherit from a single parent environment which provides values for parameters when specific environments do not have a value set.  Every organization has one default environment that cannot be removed."
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "This is the opposite of `parent`, see that field for more details."
                    },
                    "access_controlled": {
                        "type": "boolean",
                        "description": "Indicates if access control is being enforced through grants."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "description": "Your role in the environment, if the environment is access-controlled."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "children",
                    "created_at",
                    "id",
                    "ledger_id",
                    "modified_at",
                    "name",
                    "parent",
                    "role",
                    "url"
                ]
            },
            "EnvironmentCopy": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The environment name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the environment.  You may find it helpful to document how this environment is used to assist others when they need to maintain software that uses this content."
                    },
                    "child_environment_names": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The name to use for the copied child Environment."
                        },
                        "nullable": true,
                        "description": "When copying child Environments, this indicates what name to use for each Environment.  If no name is provided for a given child Environment, a \"-1\" will be appended to its name.  Note that this name mapping can be used for Environments of any level of depth in the parent-child hierarchy."
                    },
                    "recursive": {
                        "type": "boolean",
                        "description": "If true, copy child environments recursively.  If false, only copy the specified project."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "EnvironmentCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The environment name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the environment.  You may find it helpful to document how this environment is used to assist others when they need to maintain software that uses this content."
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Environments can inherit from a single parent environment which provides values for parameters when specific environments do not have a value set.  Every organization has one default environment that cannot be removed."
                    },
                    "copy_rbac": {
                        "type": "boolean",
                        "writeOnly": true,
                        "default": false,
                        "description": "If parent has RBAC enabled and this field is True, RBAC will be enabled and grants from the parent are copied to this environment.  If parent has RBAC enabled and this field is False, RBAC will be enabled but only the minimal necessary grants will be assigned to the newly created environment.   Not used when RBAC is not enabled for the parent."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "EnvironmentUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The environment name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the environment.  You may find it helpful to document how this environment is used to assist others when they need to maintain software that uses this content."
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Environments can inherit from a single parent environment which provides values for parameters when specific environments do not have a value set.  Every organization has one default environment that cannot be removed."
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "This is the opposite of `parent`, see that field for more details."
                    },
                    "access_controlled": {
                        "type": "boolean",
                        "description": "Indicates if access control is being enforced through grants."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "description": "Your role in the environment, if the environment is access-controlled."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "children",
                    "created_at",
                    "id",
                    "modified_at",
                    "name",
                    "role"
                ]
            },
            "FeaturesAiChatResponse": {
                "type": "object",
                "properties": {
                    "chatgpt": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "required": [
                    "chatgpt"
                ]
            },
            "FeaturesResponse": {
                "type": "object",
                "properties": {
                    "self_hosted": {
                        "type": "boolean"
                    },
                    "aws_integration": {
                        "type": "boolean"
                    },
                    "azure_integration": {
                        "type": "boolean"
                    },
                    "github_integration": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "aws_integration",
                    "azure_integration",
                    "github_integration",
                    "self_hosted"
                ]
            },
            "GeneratedPasswordResponse": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "The generated password value"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "GitHubIntegration": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier for the integration."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description for the integration."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The status of the integration connection with the third-party provider as of the `status_last_checked_at` field.  The status is updated automatically by the server when the integration is modified."
                    },
                    "status_detail": {
                        "type": "string",
                        "readOnly": true,
                        "description": "If an error occurs, more details will be available in this field."
                    },
                    "status_last_checked_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The last time the status was evaluated."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "fqn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of integration."
                    },
                    "writable": {
                        "type": "boolean",
                        "description": "Allow actions to write to the integration."
                    },
                    "gh_installation_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "gh_organization_slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "fqn",
                    "gh_installation_id",
                    "gh_organization_slug",
                    "id",
                    "modified_at",
                    "name",
                    "status",
                    "status_detail",
                    "status_last_checked_at",
                    "type",
                    "url"
                ]
            },
            "GitHubIntegrationCreate": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "An optional description for the integration."
                    },
                    "writable": {
                        "type": "boolean",
                        "description": "Allow actions to write to the integration."
                    },
                    "gh_installation_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    }
                },
                "required": [
                    "gh_installation_id"
                ]
            },
            "GitHubPull": {
                "type": "object",
                "description": "Pull actions can be configured to get configuration and secrets from\nintegrations on demand.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for the action."
                    },
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "latest_task": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GitHubPullTask"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent task run for this action."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "create_environments": {
                        "type": "boolean",
                        "description": "Allow the pull to create environments.  Any automatically created environments will be children of the `default` environment.  If an environment needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "create_projects": {
                        "type": "boolean",
                        "description": "Allow the pull to create projects.  If a project needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "mapped_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValueCreate"
                        },
                        "readOnly": true,
                        "description": "Values being managed by a mapped pull."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The pull mode used.\n\nA pattern pull uses a pattern-matching resource string with mustache-style markers to identify the project, parameter, and environment names, or with a Python regular expression that uses named capture groups that define the same three concepts.\n\nA mapped pull uses a specific resource and JMESpath expression to deliver a value to a specific project, parameter, and environment.  This leverages external value linkages made in the value editor, and there is one mapped pull per integration provided by the system so that you can trigger external value pull synchronizations."
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "latest_task",
                    "mapped_values",
                    "mode",
                    "modified_at",
                    "name",
                    "url"
                ]
            },
            "GitHubPullTask": {
                "type": "object",
                "description": "Pull task for a GitHub integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier for the task."
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true,
                        "description": "The reason why this task was triggered.",
                        "maxLength": 256
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "Indicates task steps were only simulated, not actually performed."
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StateEnum"
                            }
                        ],
                        "description": "The current state of this task."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an error occurs early during processing, before attempting to process values, this code may be helpful in determining the problem.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "If an error occurs early during processing, before attempting to process values, this detail may be helpful in determining the problem."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "url"
                ]
            },
            "GitHubPullTaskStep": {
                "type": "object",
                "description": "Pull task step for a GitHub integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for a task step."
                    },
                    "operation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OperationEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Indicates if the operation was successful."
                    },
                    "success_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional details about the successful operation, if any."
                    },
                    "fqn": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fully-qualified name (FQN) this of the value that was changed.",
                        "maxLength": 1024
                    },
                    "environment": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The environment affected by this step."
                    },
                    "environment_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The environment id involved in the operation."
                    },
                    "environment_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The environment name involved in the operation.",
                        "maxLength": 256
                    },
                    "project": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The project affected by this step."
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The project id involved in the operation."
                    },
                    "project_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The project name involved in the operation.",
                        "maxLength": 256
                    },
                    "parameter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The parameter affected by this step."
                    },
                    "parameter_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The parameter id involved in the operation."
                    },
                    "parameter_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The parameter name involved in the operation.",
                        "maxLength": 256
                    },
                    "venue_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The integration-native id for the resource.",
                        "maxLength": 2048
                    },
                    "venue_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the item or resource as known by the integration.",
                        "maxLength": 1024
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true,
                        "description": "The summary of this step (what it was trying to do)."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "An error code, if not successful.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Details on the error that occurred during processing."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "environment",
                    "id",
                    "modified_at",
                    "parameter",
                    "project",
                    "success",
                    "url"
                ]
            },
            "Grant": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the grant."
                    },
                    "principal": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URI of a principal for the grant; this must reference a user or group."
                    },
                    "scope": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URI of a scope for the grant; this must reference a project or environment."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "The role that the principal has in the given scope."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "principal",
                    "role",
                    "scope",
                    "url"
                ]
            },
            "GrantUpdate": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the grant."
                    },
                    "principal": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URI of a principal for the grant; this must reference a user or group."
                    },
                    "scope": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URI of a scope for the grant; this must reference a project or environment."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "The role that the principal has in the given scope."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "principal",
                    "role",
                    "scope",
                    "url"
                ]
            },
            "Group": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier of a group."
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name.",
                        "maxLength": 150
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the group.  You may find it helpful to document how this group is used to assist others when they need to maintain this organization."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "name",
                    "url",
                    "users"
                ]
            },
            "HistoryModelEnum": {
                "enum": [
                    "Parameter",
                    "ParameterRule",
                    "Value"
                ],
                "type": "string"
            },
            "HistoryTypeEnum": {
                "enum": [
                    "create",
                    "update",
                    "delete",
                    "nothing"
                ],
                "type": "string"
            },
            "ImportCreateRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Project name or identifier"
                    },
                    "environment": {
                        "type": "string",
                        "nullable": true,
                        "description": "Environment name or identifier"
                    },
                    "body": {
                        "type": "string",
                        "description": "Text to turn into variables"
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Parameter names that should be secrets"
                    },
                    "ignore": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Parameter names to be ignored"
                    },
                    "add_project": {
                        "type": "boolean",
                        "default": true,
                        "description": "Create the project (if it does not exist)"
                    },
                    "add_environment": {
                        "type": "boolean",
                        "default": true,
                        "description": "Create the environment (if it does not exist)"
                    },
                    "add_parameters": {
                        "type": "boolean",
                        "default": true,
                        "description": "Create the parameters (if they do not exist)"
                    },
                    "add_overrides": {
                        "type": "boolean",
                        "default": true,
                        "description": "Create the environment value override (if they do not exist)"
                    },
                    "inherit_on_same": {
                        "type": "boolean",
                        "default": true,
                        "description": "Skip adding a parameter override if it is the same"
                    }
                },
                "required": [
                    "body",
                    "ignore",
                    "project",
                    "secrets"
                ]
            },
            "ImportCreateResponse": {
                "type": "object",
                "properties": {
                    "parameter": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportParameter"
                        },
                        "description": "Project parameter values after import"
                    }
                },
                "required": [
                    "parameter"
                ]
            },
            "ImportParameter": {
                "type": "object",
                "description": "Describes an imported parameter.",
                "properties": {
                    "project_name": {
                        "type": "string",
                        "description": "Project name"
                    },
                    "project_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Project identifier"
                    },
                    "environment_name": {
                        "type": "string",
                        "description": "Environment where parameter is defined"
                    },
                    "environment_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Environment identifier where value is set"
                    },
                    "parameter_name": {
                        "type": "string",
                        "description": "Parameter name"
                    },
                    "parameter_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Parameter identifier"
                    },
                    "secret": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to treat the parameter as a secret"
                    },
                    "value": {
                        "type": "string",
                        "description": "Parameter value in the specified environment"
                    },
                    "value_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Parameter value identifier in the environment"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date and time the parameter value was created"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Date and time the parameter value was updated"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action taken on environment value for parameter"
                    }
                },
                "required": [
                    "action",
                    "created_at",
                    "environment_name",
                    "modified_at",
                    "parameter_name",
                    "project_name",
                    "value"
                ]
            },
            "IntegrationNode": {
                "type": "object",
                "description": "Describes the content available at a given location.",
                "properties": {
                    "fqn": {
                        "type": "string"
                    },
                    "node_type": {
                        "$ref": "#/components/schemas/NodeTypeEnum"
                    },
                    "secret": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "jmespath": {
                        "type": "string",
                        "nullable": true
                    },
                    "content_type": {
                        "type": "string",
                        "nullable": true
                    },
                    "content_data": {
                        "type": "string",
                        "nullable": true
                    },
                    "content_size": {
                        "type": "integer",
                        "nullable": true
                    },
                    "content_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "venue_id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "fqn",
                    "node_type"
                ]
            },
            "Invitation": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier of an invitation."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user to be invited.",
                        "maxLength": 254
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "The role that the user will have in the organization, should the user accept."
                    },
                    "inviter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The user that created the invitation."
                    },
                    "inviter_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the user that created the invitation."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the invitation."
                    },
                    "state_detail": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Additional details about the state of the invitation."
                    },
                    "membership": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The resulting membership, should the user accept."
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The organization that the user will become a member of, should the user accept."
                    }
                },
                "required": [
                    "email",
                    "id",
                    "inviter",
                    "inviter_name",
                    "membership",
                    "organization",
                    "role",
                    "state",
                    "state_detail",
                    "url"
                ]
            },
            "InvitationCreate": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user to be invited.",
                        "maxLength": 254
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "The role that the user will have in the organization, should the user accept."
                    }
                },
                "required": [
                    "email",
                    "role"
                ]
            },
            "Membership": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the membership."
                    },
                    "user": {
                        "type": "string",
                        "format": "uri",
                        "description": "The user of the membership."
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri",
                        "description": "The organization that the user is a member of."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "The role that the user has in the organization."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "organization",
                    "role",
                    "url",
                    "user"
                ]
            },
            "MembershipCreate": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "format": "uri",
                        "description": "The user of the membership."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "The role that the user has in the organization."
                    }
                },
                "required": [
                    "role",
                    "user"
                ]
            },
            "ModeEnum": {
                "enum": [
                    "mapped",
                    "pattern"
                ],
                "type": "string"
            },
            "NodeTypeEnum": {
                "enum": [
                    "directory",
                    "file",
                    "value"
                ],
                "type": "string"
            },
            "ObjectTypeEnum": {
                "enum": [
                    "AwsIntegration",
                    "Environment",
                    "GitHubIntegration",
                    "Grant",
                    "Invitation",
                    "Membership",
                    "Organization",
                    "Parameter",
                    "ParameterRule",
                    "ParameterType",
                    "ParameterTypeRule",
                    "Project",
                    "Pull",
                    "Push",
                    "ServiceAccount",
                    "Tag",
                    "Task",
                    "Template",
                    "Value"
                ],
                "type": "string"
            },
            "OperationEnum": {
                "enum": [
                    "create",
                    "read",
                    "update",
                    "delete"
                ],
                "type": "string"
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique identifier for the organization."
                    },
                    "name": {
                        "type": "string",
                        "description": "The organization name.",
                        "maxLength": 256
                    },
                    "project_name_pattern": {
                        "type": "string",
                        "description": "A regular expression project names must match",
                        "maxLength": 255
                    },
                    "maintenance": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "If set, we are performing maintenance on this organization and have disabled making changes"
                    },
                    "mfa_enabled": {
                        "type": "boolean",
                        "description": "Multi-factor authentication for the organization"
                    },
                    "version": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VersionEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The current version of this Organization"
                    },
                    "notification_config": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "current": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates if this Organization is the one currently targeted by the Bearer token used by the client to authorize."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "Your role in the organization."
                    },
                    "subscription_expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true
                    },
                    "subscription_features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "subscription_id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "subscription_plan_id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "subscription_plan_name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "current",
                    "id",
                    "maintenance",
                    "modified_at",
                    "name",
                    "role",
                    "subscription_expires_at",
                    "subscription_features",
                    "subscription_id",
                    "subscription_plan_id",
                    "subscription_plan_name",
                    "url",
                    "version"
                ]
            },
            "OrganizationCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The organization name.",
                        "maxLength": 256
                    },
                    "mfa_enabled": {
                        "type": "boolean",
                        "description": "Multi-factor authentication for the organization"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "PaginatedAuditTrailList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditTrail"
                        }
                    }
                }
            },
            "PaginatedAwsIntegrationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsIntegration"
                        }
                    }
                }
            },
            "PaginatedAwsPullList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsPull"
                        }
                    }
                }
            },
            "PaginatedAwsPullTaskList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsPullTask"
                        }
                    }
                }
            },
            "PaginatedAwsPullTaskStepList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsPullTaskStep"
                        }
                    }
                }
            },
            "PaginatedAwsPushList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsPush"
                        }
                    }
                }
            },
            "PaginatedAwsPushTaskList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsPushTask"
                        }
                    }
                }
            },
            "PaginatedAwsPushTaskStepList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsPushTaskStep"
                        }
                    }
                }
            },
            "PaginatedAzureKeyVaultIntegrationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureKeyVaultIntegration"
                        }
                    }
                }
            },
            "PaginatedAzureKeyVaultPullList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureKeyVaultPull"
                        }
                    }
                }
            },
            "PaginatedAzureKeyVaultPullTaskList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureKeyVaultPullTask"
                        }
                    }
                }
            },
            "PaginatedAzureKeyVaultPullTaskStepList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureKeyVaultPullTaskStep"
                        }
                    }
                }
            },
            "PaginatedAzureKeyVaultPushList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureKeyVaultPush"
                        }
                    }
                }
            },
            "PaginatedAzureKeyVaultPushTaskList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureKeyVaultPushTask"
                        }
                    }
                }
            },
            "PaginatedAzureKeyVaultPushTaskStepList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AzureKeyVaultPushTaskStep"
                        }
                    }
                }
            },
            "PaginatedEnvironmentList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Environment"
                        }
                    }
                }
            },
            "PaginatedGitHubIntegrationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GitHubIntegration"
                        }
                    }
                }
            },
            "PaginatedGitHubPullList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GitHubPull"
                        }
                    }
                }
            },
            "PaginatedGitHubPullTaskList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GitHubPullTask"
                        }
                    }
                }
            },
            "PaginatedGitHubPullTaskStepList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GitHubPullTaskStep"
                        }
                    }
                }
            },
            "PaginatedGrantList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Grant"
                        }
                    }
                }
            },
            "PaginatedGroupList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Group"
                        }
                    }
                }
            },
            "PaginatedIntegrationNodeList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IntegrationNode"
                        }
                    }
                }
            },
            "PaginatedInvitationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invitation"
                        }
                    }
                }
            },
            "PaginatedMembershipList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Membership"
                        }
                    }
                }
            },
            "PaginatedOrganizationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Organization"
                        }
                    }
                }
            },
            "PaginatedParameterDualityList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterDuality"
                        }
                    }
                }
            },
            "PaginatedParameterList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Parameter"
                        }
                    }
                }
            },
            "PaginatedParameterRuleList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterRule"
                        }
                    }
                }
            },
            "PaginatedParameterTypeList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterType"
                        }
                    }
                }
            },
            "PaginatedParameterTypeRuleList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterTypeRule"
                        }
                    }
                }
            },
            "PaginatedProjectList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project"
                        }
                    }
                }
            },
            "PaginatedServiceAccountList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceAccount"
                        }
                    }
                }
            },
            "PaginatedTagList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    }
                }
            },
            "PaginatedTaskStepList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskStep"
                        }
                    }
                }
            },
            "PaginatedTemplateList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Template"
                        }
                    }
                }
            },
            "PaginatedUserList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                }
            },
            "PaginatedValueList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Value"
                        }
                    }
                }
            },
            "Parameter": {
                "type": "object",
                "description": "A single parameter inside of a project.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The parameter url."
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ledger_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The parameter name."
                    },
                    "description": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "description": "\n        The type of this Parameter.  If not provided, this will default to\n        a string for Parameters that are not overrides or to the overridden\n        Parameter's type for Parameters that are overrides.\n        "
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterRule"
                        },
                        "readOnly": true,
                        "description": "Rules applied to this parameter."
                    },
                    "project": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The project url."
                    },
                    "project_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The project name that the parameter is within."
                    },
                    "referencing_templates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "Templates that reference this Parameter.  This field is not valid for history requests."
                    },
                    "referencing_values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "Dynamic values that reference this Parameter.  This field is not valid for history requests."
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Value"
                                }
                            ],
                            "nullable": true
                        },
                        "readOnly": true,
                        "description": "\n            This dictionary has keys that correspond to environment urls, and values\n            that correspond to the effective value for this parameter in that environment.\n            Each parameter has an effective value in every environment based on\n            project dependencies and environment inheritance.\n\n            The effective value is found by looking (within the keyed environment) up\n            the project dependencies by parameter name.  If a value is not found, the\n            parent environment is consulted with the same logic to locate a value.  It\n            is possible for there to be a `null` value record for an environment, which\n            means there is no value set; it is also possible for there to be a value record\n            with a `value` of `null`, which means the value was explicitly set to `null`.\n\n            If the value's parameter does not match the enclosing parameter (holding the\n            values array) then that value is flowing in through project dependencies.\n            Clients must recognize this in case the user asks to modify the value; in this\n            case the client must POST a new Value to the current parameter to override the\n            value coming in from the project dependency.\n\n            If the Value.environment matches the key, then it is an explicit value set for\n            that environment.  If they differ, the value was obtained from a parent\n            environment (directly or indirectly).  If the value is None then no value has\n            ever been set in any environment for this parameter within all the project\n            dependencies.\n        "
                    },
                    "values_flat": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Value"
                        },
                        "readOnly": true,
                        "description": "\n        Identical to values, except the dictionary is flattened to a list.\n        Note that in this case, the environment in the Value is the environment\n        asked for, not the environment where it was obtained.\n        "
                    },
                    "overrides": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "If this parameter's project depends on another project which provides a parameter of the same name, this parameter overrides the one provided by the dependee.  You can use this field to determine if there will be side-effects the user should know about when deleting a parameter.  Deleting a parameter that overrides another one due to an identical name will uncover the one from the dependee project."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "expires": {
                        "type": "string",
                        "nullable": true
                    },
                    "expiration_action": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true
                    },
                    "expired_status": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "readOnly": true,
                        "description": "If this parameter expires, the status of the last attempt to handle its expiration"
                    }
                },
                "required": [
                    "created_at",
                    "expired_status",
                    "id",
                    "ledger_id",
                    "modified_at",
                    "name",
                    "overrides",
                    "project",
                    "project_name",
                    "referencing_templates",
                    "referencing_values",
                    "rules",
                    "secret",
                    "url",
                    "values",
                    "values_flat"
                ]
            },
            "ParameterCopy": {
                "type": "object",
                "description": "A single parameter inside of a project.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The parameter name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the parameter.  You may find it helpful to document how this parameter is used to assist others when they need to maintain software that uses this content."
                    },
                    "project": {
                        "type": "string",
                        "format": "uri",
                        "description": "The project url."
                    }
                },
                "required": [
                    "name",
                    "project"
                ]
            },
            "ParameterCreate": {
                "type": "object",
                "description": "A single parameter inside of a project.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The parameter name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the parameter.  You may find it helpful to document how this parameter is used to assist others when they need to maintain software that uses this content."
                    },
                    "secret": {
                        "type": "boolean",
                        "description": "Indicates if this content is secret or not.  External values are inspected on-demand to ensure they align with the parameter's secret setting and if they do not, those external values are not allowed to be used."
                    },
                    "type": {
                        "type": "string",
                        "description": "\n        The type of this Parameter.  If not provided, this will default to\n        a string for Parameters that are not overrides or to the overridden\n        Parameter's type for Parameters that are overrides.\n        "
                    },
                    "expires": {
                        "type": "string",
                        "nullable": true
                    },
                    "expiration_action": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ParameterDuality": {
                "type": "object",
                "description": "Details about a parameter at two timepoints.\n\nIf t1 or t2 is null then the parameter did not exist at that\ntimepoint.",
                "properties": {
                    "t1": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Parameter"
                            }
                        ],
                        "nullable": true
                    },
                    "t2": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Parameter"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "t1",
                    "t2"
                ]
            },
            "ParameterExport": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The exported parameter body."
                    },
                    "has_secret": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "If True, the exported parameters include one or more secrets."
                    }
                },
                "required": [
                    "body",
                    "has_secret"
                ]
            },
            "ParameterRule": {
                "type": "object",
                "description": "A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\nof primary key relationships.  Specifically:\n\n* A 'url' field is included instead of the 'id' field.\n* Relationships to other instances are hyperlinks, instead of primary keys.\n\nNOTE: this only works with DRF 3.1.0 and above.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The URL for the parameter rule."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "parameter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The parameter this rule is for."
                    },
                    "type": {
                        "$ref": "#/components/schemas/ParameterRuleTypeEnum"
                    },
                    "constraint": {
                        "type": "string",
                        "maxLength": 1024
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "constraint",
                    "created_at",
                    "id",
                    "modified_at",
                    "parameter",
                    "type",
                    "url"
                ]
            },
            "ParameterRuleCreate": {
                "type": "object",
                "description": "A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\nof primary key relationships.  Specifically:\n\n* A 'url' field is included instead of the 'id' field.\n* Relationships to other instances are hyperlinks, instead of primary keys.\n\nNOTE: this only works with DRF 3.1.0 and above.",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ParameterRuleTypeEnum"
                    },
                    "constraint": {
                        "type": "string",
                        "maxLength": 1024
                    }
                },
                "required": [
                    "constraint",
                    "type"
                ]
            },
            "ParameterRuleTypeEnum": {
                "enum": [
                    "min",
                    "max",
                    "min_len",
                    "max_len",
                    "regex"
                ],
                "type": "string"
            },
            "ParameterRuleUpdate": {
                "type": "object",
                "description": "A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\nof primary key relationships.  Specifically:\n\n* A 'url' field is included instead of the 'id' field.\n* Relationships to other instances are hyperlinks, instead of primary keys.\n\nNOTE: this only works with DRF 3.1.0 and above.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "parameter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The parameter this rule is for."
                    },
                    "type": {
                        "$ref": "#/components/schemas/ParameterRuleTypeEnum"
                    },
                    "constraint": {
                        "type": "string",
                        "maxLength": 1024
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "constraint",
                    "created_at",
                    "id",
                    "modified_at",
                    "parameter",
                    "type"
                ]
            },
            "ParameterTimeline": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The number of records in this response."
                    },
                    "next_as_of": {
                        "type": "string",
                        "format": "date-time",
                        "description": "If present, additional history can be retrieved using this timestamp in the next call for the as_of query parameter value."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterTimelineEntry"
                        }
                    }
                },
                "required": [
                    "count",
                    "results"
                ]
            },
            "ParameterTimelineEntry": {
                "type": "object",
                "description": "Details about a single change.",
                "properties": {
                    "history_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HistoryTypeEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "history_environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterTimelineEntryEnvironment"
                        },
                        "readOnly": true,
                        "description": "The affected environment(s)."
                    },
                    "history_model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HistoryModelEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The component of the parameter that changed."
                    },
                    "history_parameter": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ParameterTimelineEntryParameter"
                            }
                        ],
                        "readOnly": true,
                        "description": "The affected parameter."
                    }
                },
                "required": [
                    "history_environments",
                    "history_model",
                    "history_parameter",
                    "history_type",
                    "modified_at"
                ]
            },
            "ParameterTimelineEntryEnvironment": {
                "type": "object",
                "properties": {
                    "environment_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A unique identifier for the environment.",
                        "readOnly": true,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The environment name."
                    },
                    "override": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates if the value change was direct or if it flowed into the environment. If `true` then the value was actually set directly into this environment. If `false` then the environment has no value set directly so it inherited the value from its parent."
                    }
                },
                "required": [
                    "environment_id",
                    "name",
                    "override"
                ]
            },
            "ParameterTimelineEntryParameter": {
                "type": "object",
                "properties": {
                    "parameter_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A unique identifier for the parameter.",
                        "nullable": true,
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The parameter name."
                    }
                },
                "required": [
                    "name",
                    "parameter_id"
                ]
            },
            "ParameterType": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The URL for the parameter type."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the parameter type."
                    },
                    "name": {
                        "type": "string",
                        "description": "The parameter type name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the parameter type, provide documentation on how to use this type here."
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterTypeRule"
                        },
                        "readOnly": true,
                        "description": "Rules applied to this parameter."
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The URL for this parameter type's parent"
                    },
                    "parent_name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Name of the parent ParameterType (if any)."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "name",
                    "parent",
                    "parent_name",
                    "rules",
                    "url"
                ]
            },
            "ParameterTypeCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The parameter type name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the parameter type, provide documentation on how to use this type here."
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL for this parameter type's parent"
                    }
                },
                "required": [
                    "name",
                    "parent"
                ]
            },
            "ParameterTypeRule": {
                "type": "object",
                "description": "A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\nof primary key relationships.  Specifically:\n\n* A 'url' field is included instead of the 'id' field.\n* Relationships to other instances are hyperlinks, instead of primary keys.\n\nNOTE: this only works with DRF 3.1.0 and above.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The URL for the project."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "parameter_type": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The type this rule is for."
                    },
                    "type": {
                        "$ref": "#/components/schemas/ParameterRuleTypeEnum"
                    },
                    "constraint": {
                        "type": "string",
                        "maxLength": 1024
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "constraint",
                    "created_at",
                    "id",
                    "modified_at",
                    "parameter_type",
                    "type",
                    "url"
                ]
            },
            "ParameterTypeRuleCreate": {
                "type": "object",
                "description": "A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\nof primary key relationships.  Specifically:\n\n* A 'url' field is included instead of the 'id' field.\n* Relationships to other instances are hyperlinks, instead of primary keys.\n\nNOTE: this only works with DRF 3.1.0 and above.",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ParameterRuleTypeEnum"
                    },
                    "constraint": {
                        "type": "string",
                        "maxLength": 1024
                    }
                },
                "required": [
                    "constraint",
                    "type"
                ]
            },
            "ParameterTypeRuleUpdate": {
                "type": "object",
                "description": "A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\nof primary key relationships.  Specifically:\n\n* A 'url' field is included instead of the 'id' field.\n* Relationships to other instances are hyperlinks, instead of primary keys.\n\nNOTE: this only works with DRF 3.1.0 and above.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "parameter_type": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The type this rule is for."
                    },
                    "type": {
                        "$ref": "#/components/schemas/ParameterRuleTypeEnum"
                    },
                    "constraint": {
                        "type": "string",
                        "maxLength": 1024
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "constraint",
                    "created_at",
                    "id",
                    "modified_at",
                    "parameter_type",
                    "type"
                ]
            },
            "ParameterTypeUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the parameter type."
                    },
                    "name": {
                        "type": "string",
                        "description": "The parameter type name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the parameter type, provide documentation on how to use this type here."
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL for this parameter type's parent"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterTypeRule"
                        },
                        "readOnly": true,
                        "description": "Rules applied to this parameter."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "name",
                    "parent",
                    "rules"
                ]
            },
            "ParameterUpdate": {
                "type": "object",
                "description": "A single parameter inside of a project.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The parameter name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the parameter.  You may find it helpful to document how this parameter is used to assist others when they need to maintain software that uses this content."
                    },
                    "secret": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates if this content is secret or not.  External values are inspected on-demand to ensure they align with the parameter's secret setting and if they do not, those external values are not allowed to be used."
                    },
                    "type": {
                        "type": "string",
                        "description": "\n        The type of this Parameter.  If not provided, this will default to\n        a string for Parameters that are not overrides or to the overridden\n        Parameter's type for Parameters that are overrides.\n        "
                    },
                    "project": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The project url."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "expires": {
                        "type": "string",
                        "nullable": true
                    },
                    "expiration_action": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true
                    },
                    "expired_status": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "readOnly": true,
                        "description": "If this parameter expires, the status of the last attempt to handle its expiration"
                    }
                },
                "required": [
                    "created_at",
                    "expired_status",
                    "id",
                    "modified_at",
                    "name",
                    "project",
                    "secret"
                ]
            },
            "PatchedAwsIntegration": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier for the integration."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description for the integration."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The status of the integration connection with the third-party provider as of the `status_last_checked_at` field.  The status is updated automatically by the server when the integration is modified."
                    },
                    "status_detail": {
                        "type": "string",
                        "readOnly": true,
                        "description": "If an error occurs, more details will be available in this field."
                    },
                    "status_last_checked_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The last time the status was evaluated."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "fqn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of integration."
                    },
                    "writable": {
                        "type": "boolean",
                        "description": "Allow actions to write to the integration."
                    },
                    "aws_account_id": {
                        "type": "string",
                        "description": "The AWS Account ID.",
                        "pattern": "^[0-9]+$",
                        "maxLength": 12,
                        "minLength": 12
                    },
                    "aws_enabled_regions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsRegionEnum"
                        },
                        "description": "The AWS regions to integrate with."
                    },
                    "aws_enabled_services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsServiceEnum"
                        },
                        "description": "The AWS services to integrate with."
                    },
                    "aws_external_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "This is a shared secret between the AWS Administrator who set up your IAM trust relationship and your CloudTruth AWS Integration.  CloudTruth will generate a random value for you to give to your AWS Administrator in order to create the necessary IAM role for proper access."
                    },
                    "aws_kms_key_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "If present, this is the KMS Key Id that is used to push values.  This key must be accessible in the AWS account (it cannot be an ARN to a key in another AWS account). ",
                        "pattern": "^[a-zA-Z0-9:/_\\-]+$",
                        "maxLength": 256
                    },
                    "aws_role_name": {
                        "type": "string",
                        "description": "The role that CloudTruth will assume when interacting with your AWS Account through this integration.  The role is configured by your AWS Account Administrator.  If your AWS Administrator provided you with a value use it, otherwise make your own role name and give it to your AWS Administrator.",
                        "pattern": "^[\\w+=,.@\\-]+$",
                        "maxLength": 64,
                        "minLength": 2
                    },
                    "resource_tags": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "A list of tags to be set on all integration resources."
                    }
                }
            },
            "PatchedAwsPull": {
                "type": "object",
                "description": "Pull actions can be configured to get configuration and secrets from\nintegrations on demand.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for the action."
                    },
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "latest_task": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsPullTask"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent task run for this action."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "create_environments": {
                        "type": "boolean",
                        "description": "Allow the pull to create environments.  Any automatically created environments will be children of the `default` environment.  If an environment needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "create_projects": {
                        "type": "boolean",
                        "description": "Allow the pull to create projects.  If a project needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "mapped_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValueCreate"
                        },
                        "readOnly": true,
                        "description": "Values being managed by a mapped pull."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The pull mode used.\n\nA pattern pull uses a pattern-matching resource string with mustache-style markers to identify the project, parameter, and environment names, or with a Python regular expression that uses named capture groups that define the same three concepts.\n\nA mapped pull uses a specific resource and JMESpath expression to deliver a value to a specific project, parameter, and environment.  This leverages external value linkages made in the value editor, and there is one mapped pull per integration provided by the system so that you can trigger external value pull synchronizations."
                    },
                    "region": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsRegionEnum"
                            }
                        ],
                        "description": "The AWS region to use.  This region must be enabled in the integration."
                    },
                    "service": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsServiceEnum"
                            }
                        ],
                        "description": "The AWS service to use.  This service must be enabled in the integration."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a pattern matching string that contains either mustache or regular expression syntax (with named capture groups) that locate the environment, project, and parameter name of the content you are looking for.\n\nIf you are using mustache pattern matching, use:\n\n  - ``{{ environment }}`` to identify the environment name\n  - ``{{ parameter }}`` to identify the parameter name\n  - ``{{ project }}`` to identify the project name\n\nIf you are using a regular expression, use Python syntax with named capture groups that locate the `environment`, `project`, and `parameter`.",
                        "maxLength": 1024
                    }
                }
            },
            "PatchedAwsPushUpdate": {
                "type": "object",
                "description": "Update a push.  The `region` and `service` cannot be changed on an existing push.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Projects that are included in the push."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Tags are used to select parameters by environment from the projects included in the push.  You cannot have two tags from the same environment in the same push."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a path through the integration to the location where values will be pushed.\n\nThe following mustache-style substitutions can be used in the string:\n\n  - ``{{ environment }}`` to insert the environment name\n  - ``{{ parameter }}`` to insert the parameter name\n  - ``{{ project }}`` to insert the project name\n  - ``{{ push }}`` to insert the push name\n  - ``{{ tag }}`` to insert the tag name\n\nWe recommend that you use project, environment, and parameter at a minimum to disambiguate your pushed resource identifiers.\n\nIf you include multiple projects in the push, the `project` substitution is required.  If you include multiple tags from different environments in the push, the `environment` substitution is required.  If you include multiple tags from the same environment in the push, the `tag` substitution is required.  In all cases, the `parameter` substitution is always required.",
                        "maxLength": 1024
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "force": {
                        "type": "boolean",
                        "description": "Normally, push will check to see if it originated the values in the destination before making changes to them.  Forcing a push disables the ownership check."
                    },
                    "local": {
                        "type": "boolean",
                        "description": "Normally, push will process all parameters including those that flow in from project dependencies.  Declaring a push as `local` will cause it to only process the parameters defined in the selected projects."
                    },
                    "coerce_parameters": {
                        "type": "boolean",
                        "description": "This setting allows parameters (non-secrets) to be pushed to a destination that only supports storing secrets.  This may increase your overall cost from the cloud provider as some cloud providers charge a premium for secrets-only storage."
                    },
                    "include_parameters": {
                        "type": "boolean",
                        "description": "Include parameters (non-secrets) in the values being pushed.  This setting requires the destination to support parameters or for the `coerce_parameters` flag to be enabled, otherwise the push will fail."
                    },
                    "include_secrets": {
                        "type": "boolean",
                        "description": "Include secrets in the values being pushed.  This setting requires the destination to support secrets, otherwise the push will fail."
                    },
                    "include_templates": {
                        "type": "boolean",
                        "description": "Include templates in the values being pushed."
                    }
                }
            },
            "PatchedAzureKeyVaultIntegration": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier for the integration."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description for the integration."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The status of the integration connection with the third-party provider as of the `status_last_checked_at` field.  The status is updated automatically by the server when the integration is modified."
                    },
                    "status_detail": {
                        "type": "string",
                        "readOnly": true,
                        "description": "If an error occurs, more details will be available in this field."
                    },
                    "status_last_checked_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The last time the status was evaluated."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "fqn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of integration."
                    },
                    "writable": {
                        "type": "boolean",
                        "description": "Allow actions to write to the integration."
                    },
                    "resource_tags": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "A list of tags to be set on all integration resources."
                    },
                    "vault_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Azure Key Vault name."
                    },
                    "tenant_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The Azure Tenant ID."
                    }
                }
            },
            "PatchedAzureKeyVaultPull": {
                "type": "object",
                "description": "Pull actions can be configured to get configuration and secrets from\nintegrations on demand.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for the action."
                    },
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "latest_task": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AzureKeyVaultPullTask"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent task run for this action."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "create_environments": {
                        "type": "boolean",
                        "description": "Allow the pull to create environments.  Any automatically created environments will be children of the `default` environment.  If an environment needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "create_projects": {
                        "type": "boolean",
                        "description": "Allow the pull to create projects.  If a project needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "mapped_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValueCreate"
                        },
                        "readOnly": true,
                        "description": "Values being managed by a mapped pull."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The pull mode used.\n\nA pattern pull uses a pattern-matching resource string with mustache-style markers to identify the project, parameter, and environment names, or with a Python regular expression that uses named capture groups that define the same three concepts.\n\nA mapped pull uses a specific resource and JMESpath expression to deliver a value to a specific project, parameter, and environment.  This leverages external value linkages made in the value editor, and there is one mapped pull per integration provided by the system so that you can trigger external value pull synchronizations."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a pattern matching string that contains either mustache or regular expression syntax (with named capture groups) that locate the environment, project, and parameter name of the content you are looking for.\n\nIf you are using mustache pattern matching, use:\n\n  - ``{{ environment }}`` to identify the environment name\n  - ``{{ parameter }}`` to identify the parameter name\n  - ``{{ project }}`` to identify the project name\n\nIf you are using a regular expression, use Python syntax with named capture groups that locate the `environment`, `project`, and `parameter`.",
                        "maxLength": 1024
                    }
                }
            },
            "PatchedAzureKeyVaultPushUpdate": {
                "type": "object",
                "description": "Update a push.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Projects that are included in the push."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Tags are used to select parameters by environment from the projects included in the push.  You cannot have two tags from the same environment in the same push."
                    },
                    "resource": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines a path through the integration to the location where values will be pushed.\n\nThe following mustache-style substitutions can be used in the string:\n\n  - ``{{ environment }}`` to insert the environment name\n  - ``{{ parameter }}`` to insert the parameter name\n  - ``{{ project }}`` to insert the project name\n  - ``{{ push }}`` to insert the push name\n  - ``{{ tag }}`` to insert the tag name\n\nWe recommend that you use project, environment, and parameter at a minimum to disambiguate your pushed resource identifiers.\n\nIf you include multiple projects in the push, the `project` substitution is required.  If you include multiple tags from different environments in the push, the `environment` substitution is required.  If you include multiple tags from the same environment in the push, the `tag` substitution is required.  In all cases, the `parameter` substitution is always required.",
                        "maxLength": 1024
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "force": {
                        "type": "boolean",
                        "description": "Normally, push will check to see if it originated the values in the destination before making changes to them.  Forcing a push disables the ownership check."
                    },
                    "local": {
                        "type": "boolean",
                        "description": "Normally, push will process all parameters including those that flow in from project dependencies.  Declaring a push as `local` will cause it to only process the parameters defined in the selected projects."
                    },
                    "coerce_parameters": {
                        "type": "boolean",
                        "description": "This setting allows parameters (non-secrets) to be pushed to a destination that only supports storing secrets.  This may increase your overall cost from the cloud provider as some cloud providers charge a premium for secrets-only storage."
                    },
                    "include_parameters": {
                        "type": "boolean",
                        "description": "Include parameters (non-secrets) in the values being pushed.  This setting requires the destination to support parameters or for the `coerce_parameters` flag to be enabled, otherwise the push will fail."
                    },
                    "include_secrets": {
                        "type": "boolean",
                        "description": "Include secrets in the values being pushed.  This setting requires the destination to support secrets, otherwise the push will fail."
                    }
                }
            },
            "PatchedEnvironmentUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The environment name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the environment.  You may find it helpful to document how this environment is used to assist others when they need to maintain software that uses this content."
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Environments can inherit from a single parent environment which provides values for parameters when specific environments do not have a value set.  Every organization has one default environment that cannot be removed."
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "This is the opposite of `parent`, see that field for more details."
                    },
                    "access_controlled": {
                        "type": "boolean",
                        "description": "Indicates if access control is being enforced through grants."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "description": "Your role in the environment, if the environment is access-controlled."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedGitHubPull": {
                "type": "object",
                "description": "Pull actions can be configured to get configuration and secrets from\nintegrations on demand.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for the action."
                    },
                    "name": {
                        "type": "string",
                        "description": "The action name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "The optional description for the action."
                    },
                    "latest_task": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GitHubPullTask"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent task run for this action."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "create_environments": {
                        "type": "boolean",
                        "description": "Allow the pull to create environments.  Any automatically created environments will be children of the `default` environment.  If an environment needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "create_projects": {
                        "type": "boolean",
                        "description": "Allow the pull to create projects.  If a project needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "description": "When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed."
                    },
                    "mapped_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValueCreate"
                        },
                        "readOnly": true,
                        "description": "Values being managed by a mapped pull."
                    },
                    "mode": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The pull mode used.\n\nA pattern pull uses a pattern-matching resource string with mustache-style markers to identify the project, parameter, and environment names, or with a Python regular expression that uses named capture groups that define the same three concepts.\n\nA mapped pull uses a specific resource and JMESpath expression to deliver a value to a specific project, parameter, and environment.  This leverages external value linkages made in the value editor, and there is one mapped pull per integration provided by the system so that you can trigger external value pull synchronizations."
                    }
                }
            },
            "PatchedGrantUpdate": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the grant."
                    },
                    "principal": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URI of a principal for the grant; this must reference a user or group."
                    },
                    "scope": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URI of a scope for the grant; this must reference a project or environment."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "The role that the principal has in the given scope."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedGroup": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier of a group."
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name.",
                        "maxLength": 150
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the group.  You may find it helpful to document how this group is used to assist others when they need to maintain this organization."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedInvitation": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "The unique identifier of an invitation."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user to be invited.",
                        "maxLength": 254
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "The role that the user will have in the organization, should the user accept."
                    },
                    "inviter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The user that created the invitation."
                    },
                    "inviter_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the user that created the invitation."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the invitation."
                    },
                    "state_detail": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Additional details about the state of the invitation."
                    },
                    "membership": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The resulting membership, should the user accept."
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The organization that the user will become a member of, should the user accept."
                    }
                }
            },
            "PatchedMembership": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the membership."
                    },
                    "user": {
                        "type": "string",
                        "format": "uri",
                        "description": "The user of the membership."
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri",
                        "description": "The organization that the user is a member of."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "The role that the user has in the organization."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedOrganization": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique identifier for the organization."
                    },
                    "name": {
                        "type": "string",
                        "description": "The organization name.",
                        "maxLength": 256
                    },
                    "project_name_pattern": {
                        "type": "string",
                        "description": "A regular expression project names must match",
                        "maxLength": 255
                    },
                    "maintenance": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "If set, we are performing maintenance on this organization and have disabled making changes"
                    },
                    "mfa_enabled": {
                        "type": "boolean",
                        "description": "Multi-factor authentication for the organization"
                    },
                    "version": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VersionEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "The current version of this Organization"
                    },
                    "notification_config": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "current": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates if this Organization is the one currently targeted by the Bearer token used by the client to authorize."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "readOnly": true,
                        "description": "Your role in the organization."
                    },
                    "subscription_expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true
                    },
                    "subscription_features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "subscription_id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "subscription_plan_id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "subscription_plan_name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedParameterRuleUpdate": {
                "type": "object",
                "description": "A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\nof primary key relationships.  Specifically:\n\n* A 'url' field is included instead of the 'id' field.\n* Relationships to other instances are hyperlinks, instead of primary keys.\n\nNOTE: this only works with DRF 3.1.0 and above.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "parameter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The parameter this rule is for."
                    },
                    "type": {
                        "$ref": "#/components/schemas/ParameterRuleTypeEnum"
                    },
                    "constraint": {
                        "type": "string",
                        "maxLength": 1024
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedParameterTypeRuleUpdate": {
                "type": "object",
                "description": "A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\nof primary key relationships.  Specifically:\n\n* A 'url' field is included instead of the 'id' field.\n* Relationships to other instances are hyperlinks, instead of primary keys.\n\nNOTE: this only works with DRF 3.1.0 and above.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "parameter_type": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The type this rule is for."
                    },
                    "type": {
                        "$ref": "#/components/schemas/ParameterRuleTypeEnum"
                    },
                    "constraint": {
                        "type": "string",
                        "maxLength": 1024
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedParameterTypeUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the parameter type."
                    },
                    "name": {
                        "type": "string",
                        "description": "The parameter type name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the parameter type, provide documentation on how to use this type here."
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL for this parameter type's parent"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterTypeRule"
                        },
                        "readOnly": true,
                        "description": "Rules applied to this parameter."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedParameterUpdate": {
                "type": "object",
                "description": "A single parameter inside of a project.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The parameter name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the parameter.  You may find it helpful to document how this parameter is used to assist others when they need to maintain software that uses this content."
                    },
                    "secret": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates if this content is secret or not.  External values are inspected on-demand to ensure they align with the parameter's secret setting and if they do not, those external values are not allowed to be used."
                    },
                    "type": {
                        "type": "string",
                        "description": "\n        The type of this Parameter.  If not provided, this will default to\n        a string for Parameters that are not overrides or to the overridden\n        Parameter's type for Parameters that are overrides.\n        "
                    },
                    "project": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The project url."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "expires": {
                        "type": "string",
                        "nullable": true
                    },
                    "expiration_action": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true
                    },
                    "expired_status": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "readOnly": true,
                        "description": "If this parameter expires, the status of the last attempt to handle its expiration"
                    }
                }
            },
            "PatchedProjectUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The project name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the project.  You may find it helpful to document how this project is used to assist others when they need to maintain software that uses this content."
                    },
                    "parameter_name_pattern": {
                        "type": "string",
                        "description": "A regular expression parameter names must match",
                        "maxLength": 256
                    },
                    "depends_on": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Project dependencies allow projects to be used for shared configuration, for example a database used by many applications needs to advertise its port number.\n\nProjects can depend on another project which will add the parameters from the parent project into the current project.  All of the parameter names between the two projects must be unique.  When retrieving values or rendering templates, all of the parameters from the parent project will also be available in the current project."
                    },
                    "access_controlled": {
                        "type": "boolean",
                        "description": "Indicates if access control is being enforced through grants."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "description": "Your role in the project, if the project is access-controlled."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedServiceAccount": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owner": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description of the process or system using the service account."
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceAccountAPIKey"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "last_used_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent date and time the service account was used.  It will be null if the service account has not been used."
                    }
                }
            },
            "PatchedTagUpdate": {
                "type": "object",
                "description": "Details for updating a tag.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the tag."
                    },
                    "name": {
                        "type": "string",
                        "description": "The tag name. Tag names may contain alphanumeric, hyphen, underscore, or period characters. Tag names are case sensitive. The name cannot be modified.",
                        "pattern": "^[\\w.-]+$",
                        "maxLength": 64
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the tag.  You may find it helpful to document how this tag is used to assist others when they need to maintain software that uses this content."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The point in time this tag represents.  If explicitly set to `null` then the current time will be used."
                    },
                    "immutable": {
                        "type": "boolean",
                        "description": "If True, this tag cannot be modified once it is created."
                    }
                }
            },
            "PatchedTemplateUpdate": {
                "type": "object",
                "description": "A parameter template in a given project, optionally instantiated against an environment.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The template name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "('A description of the template.  You may find it helpful to document how this template is used to assist others when they need to maintain software that uses this content.',)"
                    },
                    "evaluated": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "If true, the `body` field has undergone evaluation."
                    },
                    "body": {
                        "type": "string",
                        "description": "The content of the template.  Use mustache-style templating delimiters of `{{` and `}}` to reference parameter values by name for substitution into the template result."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedUpdateUser": {
                "type": "object",
                "properties": {
                    "chatgpt_threads": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "description": "The threads this user is participating in with ChatGPT."
                    }
                }
            },
            "PatchedValueUpdate": {
                "type": "object",
                "description": "Unlike other UpdateSerializers, we do not inherit from the CreateSerializer here\nbecause `environment` is not a required field for updates.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "external": {
                        "type": "boolean",
                        "description": "An external parameter leverages a CloudTruth integration to retrieve content on-demand from an external source.  When this is `false` the value is stored by CloudTruth and considered to be _internal_.  When this is `true`, the `external_fqn` field must be set."
                    },
                    "external_fqn": {
                        "type": "string",
                        "description": "The FQN, or Fully-Qualified Name, is the path through the integration to get to the desired content.  This must be present and reference a valid integration when the value is `external`.",
                        "maxLength": 1024
                    },
                    "external_filter": {
                        "type": "string",
                        "description": "If the value is `external`, the content returned by the integration can be reduced by applying a JMESpath expression.  This is valid as long as the content is structured and of a supported format.  JMESpath expressions are supported on `json`, `yaml`, and `dotenv` content.",
                        "maxLength": 1024
                    },
                    "internal_value": {
                        "type": "string",
                        "nullable": true,
                        "description": "This is the content to use when resolving the Value for an internal non-secret, or when storing a secret.  This field cannot be specified when creating or updating an `external` value.",
                        "maxLength": 65536
                    },
                    "interpolated": {
                        "type": "boolean",
                        "description": "If `true`, apply template substitution rules to this value.  If `false`, this value is a literal value.  Note: secrets cannot be interpolated."
                    },
                    "secret": {
                        "type": "boolean",
                        "nullable": true,
                        "readOnly": true,
                        "description": "Indicates the value content is a secret.  Normally this is `true` when the parameter is a secret. It is possible for a parameter to be a secret with a external value that is not a secret.  It is not possible to convert a parameter from a secret to a non-secret if any of the values are external and a secret.  Clients can check this condition by leveraging this field.  It is also possible for a parameter to not be a secret but for this value to be dynamic and reference a Parameter that is a secret.  In this case, we indicate the value is a secret."
                    },
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "description": "This is the actual content of the Value for the given parameter in the given environment.\n\nIf you request secret masking, no secret content will be included in the result and instead a series of asterisks will be used instead for the value.\n\nClients applying this value to a shell environment should set `<parameter_name>=<value>` even if `value` is the empty string.  If `value` is `null`, the client should unset that shell environment variable."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "Project": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The URL for the project."
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ledger_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The project name."
                    },
                    "parameter_name_pattern": {
                        "type": "string",
                        "description": "A regular expression parameter names must match",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the project.  You may find it helpful to document how this project is used to assist others when they need to maintain software that uses this content."
                    },
                    "dependents": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "This is the opposite of `depends_on`, see that field for more details."
                    },
                    "depends_on": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Project dependencies allow projects to be used for shared configuration, for example a database used by many applications needs to advertise its port number.\n\nProjects can depend on another project which will add the parameters from the parent project into the current project.  All of the parameter names between the two projects must be unique.  When retrieving values or rendering templates, all of the parameters from the parent project will also be available in the current project."
                    },
                    "access_controlled": {
                        "type": "boolean",
                        "description": "Indicates if access control is being enforced through grants."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "description": "Your role in the project, if the project is access-controlled."
                    },
                    "pushes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "Deprecated. Blank."
                    },
                    "push_urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "Deprecated. Blank."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "dependents",
                    "depends_on",
                    "id",
                    "ledger_id",
                    "modified_at",
                    "name",
                    "push_urls",
                    "pushes",
                    "role",
                    "url"
                ]
            },
            "ProjectCopy": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The project name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the project.  You may find it helpful to document how this project is used to assist others when they need to maintain software that uses this content."
                    },
                    "child_project_names": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The name to use for the copied child Project."
                        },
                        "nullable": true,
                        "description": "When copying child Project, this indicates what name to use for each Project.  If no name is provided for a given child Project, a \"-1\" will be appended to its name.  Note that this name mapping can be used for Projects of any level of depth in the parent-child hierarchy."
                    },
                    "recursive": {
                        "type": "boolean",
                        "description": "If true, copy child projects recursively.  If false, only copy the specified project."
                    },
                    "depends_on": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Project dependencies allow projects to be used for shared configuration, for example a database used by many applications needs to advertise its port number.\n\nProjects can depend on another project which will add the parameters from the parent project into the current project.  All of the parameter names between the two projects must be unique.  When retrieving values or rendering templates, all of the parameters from the parent project will also be available in the current project."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ProjectCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The project name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the project.  You may find it helpful to document how this project is used to assist others when they need to maintain software that uses this content."
                    },
                    "parameter_name_pattern": {
                        "type": "string",
                        "description": "A regular expression parameter names must match",
                        "maxLength": 256
                    },
                    "depends_on": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Project dependencies allow projects to be used for shared configuration, for example a database used by many applications needs to advertise its port number.\n\nProjects can depend on another project which will add the parameters from the parent project into the current project.  All of the parameter names between the two projects must be unique.  When retrieving values or rendering templates, all of the parameters from the parent project will also be available in the current project."
                    },
                    "copy_rbac": {
                        "type": "boolean",
                        "writeOnly": true,
                        "default": false,
                        "description": "If depends_on is set and has RBAC enabled and this field is True, RBAC will be enabled and grants from the dependency are copied to this project.  If depends_on is set and has RBAC enabled and this field is False, RBAC will be enabled but only the minimal necessary grants will be assigned to the newly created project.   Not used when depends_on is not set or RBAC is not enabled for the dependency."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ProjectUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The project name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the project.  You may find it helpful to document how this project is used to assist others when they need to maintain software that uses this content."
                    },
                    "parameter_name_pattern": {
                        "type": "string",
                        "description": "A regular expression parameter names must match",
                        "maxLength": 256
                    },
                    "depends_on": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Project dependencies allow projects to be used for shared configuration, for example a database used by many applications needs to advertise its port number.\n\nProjects can depend on another project which will add the parameters from the parent project into the current project.  All of the parameter names between the two projects must be unique.  When retrieving values or rendering templates, all of the parameters from the parent project will also be available in the current project."
                    },
                    "access_controlled": {
                        "type": "boolean",
                        "description": "Indicates if access control is being enforced through grants."
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "description": "Your role in the project, if the project is access-controlled."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "name",
                    "role"
                ]
            },
            "RoleEnum": {
                "enum": [
                    "OWNER",
                    "ADMIN",
                    "CONTRIB",
                    "VIEWER"
                ],
                "type": "string"
            },
            "ServiceAccount": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owner": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description of the process or system using the service account."
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceAccountAPIKey"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "last_used_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent date and time the service account was used.  It will be null if the service account has not been used."
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "keys",
                    "last_used_at",
                    "modified_at",
                    "url",
                    "user"
                ]
            },
            "ServiceAccountAPIKey": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A free-form name for the API key. Need not be unique. 50 characters max.",
                        "maxLength": 50
                    },
                    "prefix": {
                        "type": "string",
                        "readOnly": true
                    },
                    "revoked": {
                        "type": "boolean",
                        "description": "If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)"
                    },
                    "has_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Expires",
                        "description": "Once API key expires, clients cannot use it anymore."
                    }
                },
                "required": [
                    "created",
                    "has_expired",
                    "prefix"
                ]
            },
            "ServiceAccountCreateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the process or system using the service account.",
                        "maxLength": 128
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description of the process or system using the service account."
                    },
                    "role": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "The role for the service acount"
                    },
                    "owner": {
                        "type": "string",
                        "description": "The owner of the service account.",
                        "maxLength": 128
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ServiceAccountCreateResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owner": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description of the process or system using the service account."
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceAccountAPIKey"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "last_used_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent date and time the service account was used.  It will be null if the service account has not been used."
                    },
                    "apikey": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The API Key to use as a Bearer token for the service account."
                    }
                },
                "required": [
                    "apikey",
                    "created_at",
                    "id",
                    "keys",
                    "last_used_at",
                    "modified_at",
                    "url",
                    "user"
                ]
            },
            "ServiceAccountRekeyRequest": {
                "type": "object",
                "properties": {
                    "expire_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date and time the previous API key will expire."
                    }
                }
            },
            "ServiceAccountUpdateRequest": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "An optional description of the process or system using the service account."
                    },
                    "role": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The role for the service acount"
                    },
                    "owner": {
                        "type": "string",
                        "description": "The owner of the service account.",
                        "maxLength": 128
                    }
                },
                "required": [
                    "role"
                ]
            },
            "StateEnum": {
                "enum": [
                    "queued",
                    "running",
                    "skipped",
                    "success",
                    "failure"
                ],
                "type": "string"
            },
            "StatusEnum": {
                "enum": [
                    "unknown",
                    "pending",
                    "checking",
                    "connected",
                    "errored",
                    "missing"
                ],
                "type": "string"
            },
            "Tag": {
                "type": "object",
                "description": "The details of a tag.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The URL for the tag."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the tag."
                    },
                    "name": {
                        "type": "string",
                        "description": "The tag name. Tag names may contain alphanumeric, hyphen, underscore, or period characters. Tag names are case sensitive. The name cannot be modified.",
                        "pattern": "^[\\w.-]+$",
                        "maxLength": 64
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the tag.  You may find it helpful to document how this tag is used to assist others when they need to maintain software that uses this content."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The point in time this tag represents."
                    },
                    "immutable": {
                        "type": "boolean",
                        "description": "If True, this tag cannot be modified once it is created."
                    },
                    "pushes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwsPush"
                        },
                        "readOnly": true,
                        "description": "Deprecated. Use `push_urls` instead."
                    },
                    "push_urls": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Push actions associated with the tag."
                    },
                    "usage": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TagReadUsage"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name",
                    "push_urls",
                    "pushes",
                    "timestamp",
                    "url",
                    "usage"
                ]
            },
            "TagCreate": {
                "type": "object",
                "description": "Details for creating a tag.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The tag name. Tag names may contain alphanumeric, hyphen, underscore, or period characters. Tag names are case sensitive. The name cannot be modified.",
                        "pattern": "^[\\w.-]+$",
                        "maxLength": 64
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the tag.  You may find it helpful to document how this tag is used to assist others when they need to maintain software that uses this content."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The point in time this tag represents. If not specified then the current time will be used."
                    },
                    "immutable": {
                        "type": "boolean",
                        "description": "If True, this tag cannot be modified once it is created."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TagReadUsage": {
                "type": "object",
                "description": "The read usage details of a tag.",
                "properties": {
                    "last_read": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The last time a configuration was retrieved with this tag."
                    },
                    "last_read_by": {
                        "type": "string",
                        "description": "The last user (id) to use this tag to read configuration.",
                        "maxLength": 256
                    },
                    "total_reads": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "The number of times the tag has been used to read configuration."
                    }
                },
                "required": [
                    "last_read",
                    "total_reads"
                ]
            },
            "TagUpdate": {
                "type": "object",
                "description": "Details for updating a tag.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A unique identifier for the tag."
                    },
                    "name": {
                        "type": "string",
                        "description": "The tag name. Tag names may contain alphanumeric, hyphen, underscore, or period characters. Tag names are case sensitive. The name cannot be modified.",
                        "pattern": "^[\\w.-]+$",
                        "maxLength": 64
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the tag.  You may find it helpful to document how this tag is used to assist others when they need to maintain software that uses this content."
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The point in time this tag represents.  If explicitly set to `null` then the current time will be used."
                    },
                    "immutable": {
                        "type": "boolean",
                        "description": "If True, this tag cannot be modified once it is created."
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "TaskStep": {
                "type": "object",
                "description": "Each task detail documents the synchronization of a single\nvalue through an integration.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Unique identifier for a task step."
                    },
                    "operation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OperationEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The operation performed, if any.\n\nWhen the operation is an update, there may be additional details in the success_detail field to describe the change.\n\nWhen the project is filled in but the environment and parameterare not, the operation is on the project.  When the environmentis filled in but the project and parameter are not, the operationis on the environment.  When the project and parameter are filledin but the environment is not, the operation is on the parameter.When all three are filled in, the operation is on the value ofthe parameter of the project in the specified environment."
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Indicates if the operation was successful."
                    },
                    "success_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional details about the successful operation, if any."
                    },
                    "fqn": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fully-qualified name (FQN) this of the value that was changed.",
                        "maxLength": 1024
                    },
                    "environment": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The environment affected by this step."
                    },
                    "environment_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The environment id involved in the operation."
                    },
                    "environment_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The environment name involved in the operation.",
                        "maxLength": 256
                    },
                    "project": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The project affected by this step."
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The project id involved in the operation."
                    },
                    "project_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The project name involved in the operation.",
                        "maxLength": 256
                    },
                    "parameter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The parameter affected by this step."
                    },
                    "parameter_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The parameter id involved in the operation."
                    },
                    "parameter_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The parameter name involved in the operation.",
                        "maxLength": 256
                    },
                    "venue_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The integration-native id for the resource.",
                        "maxLength": 2048
                    },
                    "venue_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the item or resource as known by the integration.",
                        "maxLength": 1024
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true,
                        "description": "The summary of this step (what it was trying to do)."
                    },
                    "error_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "An error code, if not successful.",
                        "maxLength": 256
                    },
                    "error_detail": {
                        "type": "string",
                        "nullable": true,
                        "description": "Details on the error that occurred during processing."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "environment",
                    "id",
                    "modified_at",
                    "parameter",
                    "project",
                    "success",
                    "url"
                ]
            },
            "Template": {
                "type": "object",
                "description": "A parameter template in a given project, optionally instantiated against an environment.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The templates this value references, if interpolated."
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ledger_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The template name."
                    },
                    "description": {
                        "type": "string",
                        "description": "('A description of the template.  You may find it helpful to document how this template is used to assist others when they need to maintain software that uses this content.',)"
                    },
                    "evaluated": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "If true, the `body` field has undergone evaluation."
                    },
                    "body": {
                        "type": "string",
                        "description": "The content of the template.  Use mustache-style templating delimiters of `{{` and `}}` to reference parameter values by name for substitution into the template result."
                    },
                    "referenced_projects": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "Projects (other than this template's project) that this template references.  This field is not valid for history requests."
                    },
                    "referenced_parameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "Parameters that this template references.  This field is not valid for history requests."
                    },
                    "referenced_templates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "Other templates that this template references.  This field is not valid for history requests."
                    },
                    "referencing_templates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "Other templates that reference this template.  This field is not valid for history requests."
                    },
                    "referencing_values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "The dynamic values that reference this template.  This field is not valid for history requests."
                    },
                    "has_secret": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false,
                        "description": "If True, this template contains secrets."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "evaluated",
                    "has_secret",
                    "id",
                    "ledger_id",
                    "modified_at",
                    "name",
                    "referenced_parameters",
                    "referenced_projects",
                    "referenced_templates",
                    "referencing_templates",
                    "referencing_values",
                    "url"
                ]
            },
            "TemplateCreate": {
                "type": "object",
                "description": "A parameter template in a given project, optionally instantiated against an environment.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The template name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "('A description of the template.  You may find it helpful to document how this template is used to assist others when they need to maintain software that uses this content.',)"
                    },
                    "body": {
                        "type": "string",
                        "description": "The content of the template.  Use mustache-style templating delimiters of `{{` and `}}` to reference parameter values by name for substitution into the template result."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TemplateLookupError": {
                "type": "object",
                "description": "Indicates errors occurred while retrieving values to substitute into the template.",
                "properties": {
                    "detail": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateLookupErrorEntry"
                        }
                    }
                },
                "required": [
                    "detail"
                ]
            },
            "TemplateLookupErrorEntry": {
                "type": "object",
                "properties": {
                    "parameter_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The parameter id."
                    },
                    "parameter_name": {
                        "type": "string",
                        "description": "The parameter name."
                    },
                    "error_code": {
                        "type": "string",
                        "description": "The error code."
                    },
                    "error_detail": {
                        "type": "string",
                        "description": "Details about the error."
                    }
                },
                "required": [
                    "error_code",
                    "error_detail",
                    "parameter_id",
                    "parameter_name"
                ]
            },
            "TemplatePreview": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "The template body to instantiate on request, instantiated on response."
                    },
                    "has_secret": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "If True, the instantiated template contains secrets."
                    }
                },
                "required": [
                    "body",
                    "has_secret"
                ]
            },
            "TemplatePreviewCreateRequest": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "The template body to instantiate on request, instantiated on response."
                    }
                },
                "required": [
                    "body"
                ]
            },
            "TemplateTimeline": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "The number of records in this response."
                    },
                    "next_as_of": {
                        "type": "string",
                        "format": "date-time",
                        "description": "If present, additional history can be retrieved using this timestamp in the next call for the as_of query parameter value."
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateTimelineEntry"
                        }
                    }
                },
                "required": [
                    "count",
                    "results"
                ]
            },
            "TemplateTimelineEntry": {
                "type": "object",
                "description": "Details about a single change.",
                "properties": {
                    "history_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HistoryTypeEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "modified_by": {
                        "type": "string"
                    },
                    "history_template": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TemplateTimelineEntryTemplate"
                            }
                        ],
                        "readOnly": true,
                        "description": "The template record as it was when archived for history."
                    }
                },
                "required": [
                    "history_template",
                    "history_type",
                    "modified_at"
                ]
            },
            "TemplateTimelineEntryTemplate": {
                "type": "object",
                "description": "Helper methods for all views or serializers that expose template concepts.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ledger_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The parameter name."
                    },
                    "description": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string",
                        "description": "The content of the template.  Use mustache-style templating delimiters of `{{` and `}}` to reference parameter values by name for substitution into the template result."
                    }
                },
                "required": [
                    "id",
                    "ledger_id",
                    "name"
                ]
            },
            "TemplateUpdate": {
                "type": "object",
                "description": "A parameter template in a given project, optionally instantiated against an environment.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The template name.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "('A description of the template.  You may find it helpful to document how this template is used to assist others when they need to maintain software that uses this content.',)"
                    },
                    "evaluated": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "If true, the `body` field has undergone evaluation."
                    },
                    "body": {
                        "type": "string",
                        "description": "The content of the template.  Use mustache-style templating delimiters of `{{` and `}}` to reference parameter values by name for substitution into the template result."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "evaluated",
                    "id",
                    "modified_at",
                    "name"
                ]
            },
            "UpdateUser": {
                "type": "object",
                "properties": {
                    "chatgpt_threads": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "description": "The threads this user is participating in with ChatGPT."
                    }
                },
                "required": [
                    "chatgpt_threads"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "description": "The unique identifier of a user.",
                        "maxLength": 256
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of user record.",
                        "maxLength": 12
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "organization_name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "description": "The user's organization name."
                    },
                    "membership_id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "description": "Membership identifier for user."
                    },
                    "chatgpt_threads": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "description": "The threads this user is participating in with ChatGPT."
                    },
                    "role": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "description": "The user's role in the current organization (defined by the request authorization header)."
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "picture_url": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "chatgpt_threads",
                    "created_at",
                    "email",
                    "id",
                    "membership_id",
                    "modified_at",
                    "name",
                    "organization_name",
                    "picture_url",
                    "role",
                    "url"
                ]
            },
            "Value": {
                "type": "object",
                "description": "A value for a parameter in a given environment.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The value url."
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ledger_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "active_environment": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The active environment this Value is viewed under"
                    },
                    "active_environment_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The active environment id this Value is viewed under"
                    },
                    "active_environment_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the environment that this environment is viewed under"
                    },
                    "environment": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The environment this value is set in."
                    },
                    "environment_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The environment id for this value."
                    },
                    "environment_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The environment name for this value.  This is a convenience to avoid another query against the server to resolve the environment url into a name."
                    },
                    "parameter": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The parameter this value is for."
                    },
                    "parameter_id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The parameter id for this value."
                    },
                    "external": {
                        "type": "boolean"
                    },
                    "external_fqn": {
                        "type": "string"
                    },
                    "external_filter": {
                        "type": "string",
                        "nullable": true
                    },
                    "external_error": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "description": "This field is deprecated and unused."
                    },
                    "external_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TaskStep"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true,
                        "description": "The most recent mapped pull status for an external value."
                    },
                    "internal_value": {
                        "type": "string",
                        "nullable": true
                    },
                    "interpolated": {
                        "type": "boolean"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "description": "This is the actual content of the Value for the given parameter in the given environment.\n\nIf you request secret masking, no secret content will be included in the result and instead a series of asterisks will be used instead for the value.\n\nClients applying this value to a shell environment should set `<parameter_name>=<value>` even if `value` is the empty string.  If `value` is `null`, the client should unset that shell environment variable."
                    },
                    "evaluated": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "If true, the `value` field has undergone template evaluation."
                    },
                    "secret": {
                        "type": "boolean",
                        "nullable": true,
                        "readOnly": true,
                        "description": "Indicates the value content is a secret.  Normally this is `true` when the parameter is a secret. It is possible for a parameter to be a secret with a external value that is not a secret.  It is not possible to convert a parameter from a secret to a non-secret if any of the values are external and a secret.  Clients can check this condition by leveraging this field.  It is also possible for a parameter to not be a secret but for this value to be dynamic and reference a Parameter that is a secret.  In this case, we indicate the value is a secret."
                    },
                    "referenced_projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "The projects this value references, if dynamic.  This field is not valid for history requests."
                    },
                    "referenced_parameters": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "The parameters this value references, if dynamic.  this field is not valid for history requests."
                    },
                    "referenced_templates": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "The templates this value references, if dynamic.  This field is not valid for history requests."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "required": [
                    "active_environment",
                    "active_environment_id",
                    "active_environment_name",
                    "created_at",
                    "environment",
                    "environment_id",
                    "environment_name",
                    "evaluated",
                    "expires_at",
                    "external_error",
                    "external_status",
                    "id",
                    "ledger_id",
                    "modified_at",
                    "parameter",
                    "parameter_id",
                    "referenced_parameters",
                    "referenced_projects",
                    "referenced_templates",
                    "secret",
                    "url",
                    "value"
                ]
            },
            "ValueCreate": {
                "type": "object",
                "description": "A value for a parameter in a given environment.",
                "properties": {
                    "environment": {
                        "type": "string",
                        "format": "uri",
                        "description": "The environment this value is set in."
                    },
                    "external": {
                        "type": "boolean",
                        "description": "An external parameter leverages a CloudTruth integration to retrieve content on-demand from an external source.  When this is `false` the value is stored by CloudTruth and considered to be _internal_.  When this is `true`, the `external_fqn` field must be set."
                    },
                    "external_fqn": {
                        "type": "string",
                        "description": "The FQN, or Fully-Qualified Name, is the path through the integration to get to the desired content.  This must be present and reference a valid integration when the value is `external`.",
                        "maxLength": 1024
                    },
                    "external_filter": {
                        "type": "string",
                        "description": "If the value is `external`, the content returned by the integration can be reduced by applying a JMESpath expression.  This is valid as long as the content is structured and of a supported format.  JMESpath expressions are supported on `json`, `yaml`, and `dotenv` content.",
                        "maxLength": 1024
                    },
                    "internal_value": {
                        "type": "string",
                        "nullable": true,
                        "description": "This is the content to use when resolving the Value for an internal non-secret, or when storing a secret.  This field cannot be specified when creating or updating an `external` value.",
                        "maxLength": 65536
                    },
                    "interpolated": {
                        "type": "boolean",
                        "description": "If `true`, apply template substitution rules to this value.  If `false`, this value is a literal value.  Note: secrets cannot be interpolated."
                    }
                },
                "required": [
                    "environment"
                ]
            },
            "ValueUpdate": {
                "type": "object",
                "description": "Unlike other UpdateSerializers, we do not inherit from the CreateSerializer here\nbecause `environment` is not a required field for updates.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "external": {
                        "type": "boolean",
                        "description": "An external parameter leverages a CloudTruth integration to retrieve content on-demand from an external source.  When this is `false` the value is stored by CloudTruth and considered to be _internal_.  When this is `true`, the `external_fqn` field must be set."
                    },
                    "external_fqn": {
                        "type": "string",
                        "description": "The FQN, or Fully-Qualified Name, is the path through the integration to get to the desired content.  This must be present and reference a valid integration when the value is `external`.",
                        "maxLength": 1024
                    },
                    "external_filter": {
                        "type": "string",
                        "description": "If the value is `external`, the content returned by the integration can be reduced by applying a JMESpath expression.  This is valid as long as the content is structured and of a supported format.  JMESpath expressions are supported on `json`, `yaml`, and `dotenv` content.",
                        "maxLength": 1024
                    },
                    "internal_value": {
                        "type": "string",
                        "nullable": true,
                        "description": "This is the content to use when resolving the Value for an internal non-secret, or when storing a secret.  This field cannot be specified when creating or updating an `external` value.",
                        "maxLength": 65536
                    },
                    "interpolated": {
                        "type": "boolean",
                        "description": "If `true`, apply template substitution rules to this value.  If `false`, this value is a literal value.  Note: secrets cannot be interpolated."
                    },
                    "secret": {
                        "type": "boolean",
                        "nullable": true,
                        "readOnly": true,
                        "description": "Indicates the value content is a secret.  Normally this is `true` when the parameter is a secret. It is possible for a parameter to be a secret with a external value that is not a secret.  It is not possible to convert a parameter from a secret to a non-secret if any of the values are external and a secret.  Clients can check this condition by leveraging this field.  It is also possible for a parameter to not be a secret but for this value to be dynamic and reference a Parameter that is a secret.  In this case, we indicate the value is a secret."
                    },
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "description": "This is the actual content of the Value for the given parameter in the given environment.\n\nIf you request secret masking, no secret content will be included in the result and instead a series of asterisks will be used instead for the value.\n\nClients applying this value to a shell environment should set `<parameter_name>=<value>` even if `value` is the empty string.  If `value` is `null`, the client should unset that shell environment variable."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "modified_at",
                    "secret",
                    "value"
                ]
            },
            "VersionEnum": {
                "enum": [
                    1,
                    2,
                    3,
                    4
                ],
                "type": "integer"
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "description": "\nUse your CloudTruth API Key to authenticate to the API.  You can get\nan API Key by creating a Service Account.  During setup of the Service\nAccount you will generate a long-lived API key intended for use by automation\nand API clients.  Access through the service account will be audited separately\nfrom any other user.\n\nIf you are just trying to use the API in a normal workflow, this is likely the\nauthentication mechanism you want to use.\n\nTo use the API Key, place your API Key in the Authorization header as 'Api-Key APIKEY', where\nAPIKEY is your CloudTruth API Key.  For example:\n\n    Authorization: Api-Key fskur.ghlsiudhrg84so938r5u\n        "
            },
            "JWTAuth": {
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "description": "\nUse your JWT to authenticate to the API.  This is how the CloudTruth\nWeb UI authenticates to the backend.  It requires a user to have already logged in\nand gotten a JWT from the login process.  This is usually done by an Auth0 authentication\nflow from one of the Auth0 javascript libraries.  Alternatively, you can pull the\nJWT from your browser if you have a logged in session with the CloudTruth UI.\n\nThis authentication mechanism is intended for deeper integrations into the CloudTruth\nsystem, where you want to handle the user logins directly in your application.  For\nnormal API use, you likely want the Api-Key authentication header and not this one.\n\nTo use the JWT, place your JWT in the Authorization header as 'Bearer JWT', where\nJWT is your JWT.  For example:\n\n    Authorization: Bearer eyJhbGciOiJIkuydfy.eyJzdWIiOiIxMjM....\n        "
            },
            "tokenAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "externalDocs": {
        "url": "https://docs.cloudtruth.com/"
    }
}