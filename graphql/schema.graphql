type AwsIntegration implements IntegrationNode & IntegrationTree & Node {
  accountId: String!
  accountName: String!
  accountState: IntegrationStateEnum!
  ancestors: [IntegrationTree!]!
  createdAt: ISO8601DateTime!
  enabledServices: [AwsIntegrationEnum!]!
  entries: [IntegrationNode!]!
  externalId: String!
  fqn: String!
  id: ID!
  name: String!
  organization: Organization!
  parent: IntegrationTree
  roleName: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for AwsIntegration.
"""
type AwsIntegrationConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [AwsIntegrationEdge!]!

  """
  A list of nodes.
  """
  nodes: [AwsIntegration!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type AwsIntegrationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AwsIntegration
}

enum AwsIntegrationEnum {
  S3
  SSM
}

"""
Autogenerated input type of CreateAwsIntegration
"""
input CreateAwsIntegrationInput {
  accountId: String!
  accountName: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enabledServices: [AwsIntegrationEnum!]
  roleName: String!
}

"""
Autogenerated return type of CreateAwsIntegration
"""
type CreateAwsIntegrationPayload {
  awsIntegration: AwsIntegration

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of CreateEnvironment
"""
input CreateEnvironmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  name: String!
  parentId: ID!
}

"""
Autogenerated return type of CreateEnvironment
"""
type CreateEnvironmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  environment: Environment
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of CreateParameter
"""
input CreateParameterInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  keyName: String!
  value: String
}

"""
Autogenerated return type of CreateParameter
"""
type CreateParameterPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  parameter: Parameter
  viewer: Viewer!
}

"""
Autogenerated input type of CreatePersonalAccessToken
"""
input CreatePersonalAccessTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  writeAccess: Boolean!
}

"""
Autogenerated return type of CreatePersonalAccessToken
"""
type CreatePersonalAccessTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  personalAccessToken: PersonalAccessToken
  tokenValue: String
  viewer: Viewer!
}

"""
Autogenerated input type of CreateTemplate
"""
input CreateTemplateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  name: String!
}

"""
Autogenerated return type of CreateTemplate
"""
type CreateTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  template: Template
  viewer: Viewer!
}

"""
Autogenerated input type of DeleteAllPersonalAccessTokens
"""
input DeleteAllPersonalAccessTokensInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DeleteAllPersonalAccessTokens
"""
type DeleteAllPersonalAccessTokensPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of DeleteAwsIntegration
"""
input DeleteAwsIntegrationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteAwsIntegration
"""
type DeleteAwsIntegrationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedAwsIntegrationId: ID
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of DeleteEnvironment
"""
input DeleteEnvironmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteEnvironment
"""
type DeleteEnvironmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedEnvironmentId: ID
  errors: [UserError!]!
}

"""
Autogenerated input type of DeleteParameter
"""
input DeleteParameterInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteParameter
"""
type DeleteParameterPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedParameterId: ID
  errors: [UserError!]!
}

"""
Autogenerated input type of DeletePersonalAccessToken
"""
input DeletePersonalAccessTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeletePersonalAccessToken
"""
type DeletePersonalAccessTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedPersonalAccessTokenId: ID
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of DeleteTemplate
"""
input DeleteTemplateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteTemplate
"""
type DeleteTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedTemplateId: ID
  errors: [UserError!]!
}

type Environment implements Node {
  ancestors: [Environment!]!
  children(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EnvironmentConnection!
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  name: String!
  organization: Organization!
  parameterValue(parameterId: ID!): ParameterValue!
  parent: Environment
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Environment.
"""
type EnvironmentConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [EnvironmentEdge!]!

  """
  A list of nodes.
  """
  nodes: [Environment!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type EnvironmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Environment
}

type EnvironmentValue {
  environment: Environment!
  inheritedFrom: Environment
  integrationFile: IntegrationFile
  jmesPath: String
  parameterValue: String
  type: EnvironmentValueTypeEnum!
}

enum EnvironmentValueTypeEnum {
  DYNAMIC
  STATIC
}

"""
Autogenerated input type of FakeUserData
"""
input FakeUserDataInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of FakeUserData
"""
type FakeUserDataPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  viewer: Viewer!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

input IdComparisonExp {
  _eq: ID
  _neq: ID
}

type IntegrationFile implements IntegrationNode & Node {
  ancestors: [IntegrationTree!]!
  body: String!
  fqn: String!
  id: ID!
  json: String
  mimeType: String!
  name: String!
  parent: IntegrationTree
}

type IntegrationFileTree implements IntegrationNode & IntegrationTree & Node {
  ancestors: [IntegrationTree!]!
  entries: [IntegrationNode!]!
  fqn: String!
  id: ID!
  name: String!
  parent: IntegrationTree
}

"""
Service base integration nodes (AWS, GitHub)
"""
interface IntegrationNode {
  ancestors: [IntegrationTree!]!
  fqn: String!

  """
  ID of the object.
  """
  id: ID!
  name: String!
  parent: IntegrationTree
}

type IntegrationServiceTree implements IntegrationNode & IntegrationTree & Node {
  ancestors: [IntegrationTree!]!
  entries: [IntegrationNode!]!
  fqn: String!
  id: ID!
  name: String!
  parent: IntegrationTree
}

enum IntegrationStateEnum {
  CONNECTED
  ERRORED
  PENDING
}

"""
Service base integration nodes (AWS, GitHub)
"""
interface IntegrationTree {
  ancestors: [IntegrationTree!]!
  entries: [IntegrationNode!]!
  fqn: String!

  """
  ID of the object.
  """
  id: ID!
  name: String!
  parent: IntegrationTree
}

type Membership implements Node {
  createdAt: ISO8601DateTime!
  id: ID!
  organization: Organization!
  role: MembershipRoleEnum!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Membership.
"""
type MembershipConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [MembershipEdge!]!

  """
  A list of nodes.
  """
  nodes: [Membership!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type MembershipEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Membership
}

enum MembershipRoleEnum {
  ADMIN
  CONTRIBUTOR
  VIEWER
}

type Mutation {
  createAwsIntegration(input: CreateAwsIntegrationInput!): CreateAwsIntegrationPayload
  createEnvironment(input: CreateEnvironmentInput!): CreateEnvironmentPayload
  createParameter(input: CreateParameterInput!): CreateParameterPayload
  createPersonalAccessToken(input: CreatePersonalAccessTokenInput!): CreatePersonalAccessTokenPayload
  createTemplate(input: CreateTemplateInput!): CreateTemplatePayload
  deleteAllPersonalAccessTokens(input: DeleteAllPersonalAccessTokensInput!): DeleteAllPersonalAccessTokensPayload
  deleteAwsIntegration(input: DeleteAwsIntegrationInput!): DeleteAwsIntegrationPayload
  deleteEnvironment(input: DeleteEnvironmentInput!): DeleteEnvironmentPayload
  deleteParameter(input: DeleteParameterInput!): DeleteParameterPayload
  deletePersonalAccessToken(input: DeletePersonalAccessTokenInput!): DeletePersonalAccessTokenPayload
  deleteTemplate(input: DeleteTemplateInput!): DeleteTemplatePayload
  fakeUserData(input: FakeUserDataInput!): FakeUserDataPayload
  regeneratePersonalAccessToken(input: RegeneratePersonalAccessTokenInput!): RegeneratePersonalAccessTokenPayload
  resetUserData(input: ResetUserDataInput!): ResetUserDataPayload
  updateAwsIntegration(input: UpdateAwsIntegrationInput!): UpdateAwsIntegrationPayload
  updateEnvironment(input: UpdateEnvironmentInput!): UpdateEnvironmentPayload
  updateParameter(input: UpdateParameterInput!): UpdateParameterPayload
  updatePersonalAccessToken(input: UpdatePersonalAccessTokenInput!): UpdatePersonalAccessTokenPayload
  updateTemplate(input: UpdateTemplateInput!): UpdateTemplatePayload
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

enum OrderByEnum {
  ASC
  DESC
}

type Organization implements Node {
  awsIntegrations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AwsIntegrationConnection!
  createdAt: ISO8601DateTime!
  environment(name: String): Environment
  environments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EnvironmentConnection!
  evaluateTemplate(body: String!, environmentId: ID): TemplateEvaluation
  id: ID!
  integrations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AwsIntegrationConnection!
  name: String!
  parameter(keyName: String!): Parameter
  parameters(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    List of key names to return.
    """
    keyNames: [String!]

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Sort order for parameters.
    """
    orderBy: [ParameterOrderBy!]

    """
    Search over parameter names.
    """
    searchTerm: String

    """
    Filter parameter list.
    """
    where: ParameterBoolExp
  ): ParameterConnection!
  template(name: String!): Template
  templates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    List of template names to return.
    """
    names: [String!]
  ): TemplateConnection!
  updatedAt: ISO8601DateTime!
}

type PageCursor {
  cursor: String!
  isCurrent: Boolean!
  pageNumber: Int!
}

type PageCursors {
  around: [PageCursor!]!
  first: PageCursor
  last: PageCursor
  previous: PageCursor
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Parameter implements Node {
  createdAt: ISO8601DateTime!
  description: String
  environmentValue(environmentId: ID, environmentName: String): EnvironmentValue
  environmentValues: [EnvironmentValue!]!
  hasDynamicValue: Boolean!
  id: ID!
  keyName: String!
  organization: Organization!
  templates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): TemplateConnection!
  updatedAt: ISO8601DateTime!
}

input ParameterBoolExp {
  _and: [ParameterBoolExp!]
  _or: [ParameterBoolExp!]
  environmentId: IdComparisonExp
  keyName: StringComparisonExp
}

"""
The connection type for Parameter.
"""
type ParameterConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [ParameterEdge!]!

  """
  A list of nodes.
  """
  nodes: [Parameter!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type ParameterEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Parameter
}

input ParameterOrderBy {
  keyName: OrderByEnum
  updatedAt: OrderByEnum
}

type ParameterValue {
  inheritedFrom: Environment
  parameterName: String!
  parameterValue: String
}

type PersonalAccessToken implements Node {
  createdAt: ISO8601DateTime!
  id: ID!
  lastUsed: ISO8601DateTime
  name: String!
  updatedAt: ISO8601DateTime!
  writeAccess: Boolean!
}

"""
The connection type for PersonalAccessToken.
"""
type PersonalAccessTokenConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [PersonalAccessTokenEdge!]!

  """
  A list of nodes.
  """
  nodes: [PersonalAccessToken!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type PersonalAccessTokenEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PersonalAccessToken
}

type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!
  viewer: Viewer!
}

"""
Autogenerated input type of RegeneratePersonalAccessToken
"""
input RegeneratePersonalAccessTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of RegeneratePersonalAccessToken
"""
type RegeneratePersonalAccessTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  personalAccessToken: PersonalAccessToken
  tokenValue: String
  viewer: Viewer!
}

"""
Autogenerated input type of ResetUserData
"""
input ResetUserDataInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ResetUserData
"""
type ResetUserDataPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  viewer: Viewer!
}

input StringComparisonExp {
  _eq: String
  _neq: String
}

type Template implements Node {
  body: String
  createdAt: ISO8601DateTime!
  description: String
  evaluated(environmentId: ID, environmentName: String): String
  id: ID!
  name: String!
  organization: Organization!
  updatedAt: ISO8601DateTime!
  url(environmentId: ID, environmentName: String): String
}

"""
The connection type for Template.
"""
type TemplateConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [TemplateEdge!]!

  """
  A list of nodes.
  """
  nodes: [Template!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type TemplateEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Template
}

type TemplateEvaluation {
  body: String!
  errors: [UserError!]!
  evaluated: String
}

"""
Autogenerated input type of UpdateAwsIntegration
"""
input UpdateAwsIntegrationInput {
  accountId: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enabledServices: [AwsIntegrationEnum!]!
  id: ID!
  roleName: String!
}

"""
Autogenerated return type of UpdateAwsIntegration
"""
type UpdateAwsIntegrationPayload {
  awsIntegration: AwsIntegration

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of UpdateEnvironment
"""
input UpdateEnvironmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  id: ID!
}

"""
Autogenerated return type of UpdateEnvironment
"""
type UpdateEnvironmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  environment: Environment
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of UpdateParameter
"""
input UpdateParameterInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  environmentId: ID
  id: ID!
  integrationFileId: ID
  jmesPath: String
  value: String
}

"""
Autogenerated return type of UpdateParameter
"""
type UpdateParameterPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  parameter: Parameter
  viewer: Viewer!
}

"""
Autogenerated input type of UpdatePersonalAccessToken
"""
input UpdatePersonalAccessTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String
  writeAccess: Boolean
}

"""
Autogenerated return type of UpdatePersonalAccessToken
"""
type UpdatePersonalAccessTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  personalAccessToken: PersonalAccessToken
  viewer: Viewer!
}

"""
Autogenerated input type of UpdateTemplate
"""
input UpdateTemplateInput {
  body: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  id: ID!
}

"""
Autogenerated return type of UpdateTemplate
"""
type UpdateTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  template: Template
  viewer: Viewer!
}

"""
A user-readable error
"""
type UserError {
  """
  A description of the error
  """
  message: String!

  """
  Which input value this error came from
  """
  path: [String!]
}

type Viewer implements Node {
  id: ID!
  memberships(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): MembershipConnection!
  organization(name: String): Organization
  personalAccessTokens(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PersonalAccessTokenConnection!
}