type AuditLogSnapshot implements HasPolicy & Node {
  createdAt: ISO8601DateTime!
  fileUrl: String
  id: ID!
  policy: NodePolicy!
  status: SnapshotStatusEnum!
}

"""
The connection type for AuditLogSnapshot.
"""
type AuditLogSnapshotConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [AuditLogSnapshotEdge!]!

  """
  A list of nodes.
  """
  nodes: [AuditLogSnapshot!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type AuditLogSnapshotEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AuditLogSnapshot
}

type AwsIntegration implements HasPolicy & IntegrationNode & IntegrationTree & Node {
  accountId: String!
  accountName: String!
  accountState: IntegrationStateEnum!
  ancestors: [IntegrationTree!]!
  createdAt: ISO8601DateTime!
  enabledServices: [AwsIntegrationEnum!]!
  entries: [IntegrationNode!]!
  externalId: String!
  fqn: String!
  id: ID!
  name: String!
  organization: Organization!
  parent: IntegrationTree
  policy: NodePolicy!
  preferredRegions: [AwsRegionEnum!]!
  roleName: String!
  statusMessage: String
  updatedAt: ISO8601DateTime!
}

"""
The connection type for AwsIntegration.
"""
type AwsIntegrationConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [AwsIntegrationEdge!]!

  """
  A list of nodes.
  """
  nodes: [AwsIntegration!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type AwsIntegrationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AwsIntegration
}

enum AwsIntegrationEnum {
  S3
  SECRETS_MANAGER
  SSM
}

enum AwsRegionEnum {
  AF_SOUTH_1
  AP_EAST_1
  AP_NORTHEAST_1
  AP_NORTHEAST_2
  AP_NORTHEAST_3
  AP_SOUTHEAST_1
  AP_SOUTHEAST_2
  AP_SOUTH_1
  CA_CENTRAL_1
  CN_NORTHWEST_1
  CN_NORTH_1
  EU_CENTRAL_1
  EU_NORTH_1
  EU_SOUTH_1
  EU_WEST_1
  EU_WEST_2
  EU_WEST_3
  ME_SOUTH_1
  SA_EAST_1
  US_EAST_1
  US_EAST_2
  US_WEST_1
  US_WEST_2
}

interface BasePolicy {
  destroy: Boolean!
  show: Boolean!
  update: Boolean!
}

"""
Autogenerated input type of CreateAuditLogSnapshot
"""
input CreateAuditLogSnapshotInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organizationId: ID!
}

"""
Autogenerated return type of CreateAuditLogSnapshot
"""
type CreateAuditLogSnapshotPayload {
  auditLogSnapshot: AuditLogSnapshot

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  organization: Organization!
}

"""
Autogenerated input type of CreateAwsIntegration
"""
input CreateAwsIntegrationInput {
  accountId: String!
  accountName: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enabledServices: [AwsIntegrationEnum!]
  organizationId: ID
  preferredRegions: [AwsRegionEnum!]
  roleName: String!
}

"""
Autogenerated return type of CreateAwsIntegration
"""
type CreateAwsIntegrationPayload {
  awsIntegration: AwsIntegration

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of CreateEnvironment
"""
input CreateEnvironmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  name: String!
  organizationId: ID
  parentId: ID!
}

"""
Autogenerated return type of CreateEnvironment
"""
type CreateEnvironmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  environment: Environment
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of CreateGithubSetupToken
"""
input CreateGithubSetupTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organizationId: ID
}

"""
Autogenerated return type of CreateGithubSetupToken
"""
type CreateGithubSetupTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  installationUrl: String!
  token: String!
  viewer: Viewer!
}

"""
Autogenerated input type of CreateInvitation
"""
input CreateInvitationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  memberEmail: String!
  memberRole: MembershipRoleEnum!
  organizationId: ID!
}

"""
Autogenerated return type of CreateInvitation
"""
type CreateInvitationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  invitation: Invitation
  organization: Organization!
}

"""
Autogenerated input type of CreateOrganization
"""
input CreateOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  eaorgid: ID
  name: String
}

"""
Autogenerated return type of CreateOrganization
"""
type CreateOrganizationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  organization: Organization
  viewer: Viewer!
}

"""
Autogenerated input type of CreateParameter
"""
input CreateParameterInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  isSecret: Boolean
  keyName: String!
  organizationId: ID @deprecated(reason: "Use project_id instead")
  projectId: ID
  value: String
}

"""
Autogenerated return type of CreateParameter
"""
type CreateParameterPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  parameter: Parameter
  viewer: Viewer!
}

"""
Autogenerated input type of CreatePersonalAccessToken
"""
input CreatePersonalAccessTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  writeAccess: Boolean!
}

"""
Autogenerated return type of CreatePersonalAccessToken
"""
type CreatePersonalAccessTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  personalAccessToken: PersonalAccessToken
  tokenValue: String
  viewer: Viewer!
}

"""
Autogenerated input type of CreateProject
"""
input CreateProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  name: String!
  organizationId: ID
}

"""
Autogenerated return type of CreateProject
"""
type CreateProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  organization: Organization!
  project: Project
}

"""
Autogenerated input type of CreateServiceAccount
"""
input CreateServiceAccountInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  name: String!
  organizationId: ID!
  role: MembershipRoleEnum!
}

"""
Autogenerated return type of CreateServiceAccount
"""
type CreateServiceAccountPayload {
  apiToken: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  organization: Organization!
  serviceAccount: ServiceAccount
}

"""
Autogenerated input type of CreateTemplate
"""
input CreateTemplateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  name: String!
  organizationId: ID @deprecated(reason: "Use project_id instead")
  projectId: ID
}

"""
Autogenerated return type of CreateTemplate
"""
type CreateTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  template: Template
  viewer: Viewer!
}

"""
Autogenerated input type of DeleteAllPersonalAccessTokens
"""
input DeleteAllPersonalAccessTokensInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DeleteAllPersonalAccessTokens
"""
type DeleteAllPersonalAccessTokensPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of DeleteAwsIntegration
"""
input DeleteAwsIntegrationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteAwsIntegration
"""
type DeleteAwsIntegrationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedAwsIntegrationId: ID
  errors: [UserError!]!
  organization: Organization!
}

"""
Autogenerated input type of DeleteEnvironment
"""
input DeleteEnvironmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteEnvironment
"""
type DeleteEnvironmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedEnvironmentId: ID
  errors: [UserError!]!
  organization: Organization!
}

"""
Autogenerated input type of DeleteGithubIntegration
"""
input DeleteGithubIntegrationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteGithubIntegration
"""
type DeleteGithubIntegrationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedGithubIntegrationId: ID
  errors: [UserError!]!
  organization: Organization!
}

"""
Autogenerated input type of DeleteInvitation
"""
input DeleteInvitationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteInvitation
"""
type DeleteInvitationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedInvitationId: ID
  errors: [UserError!]!
  organization: Organization!
}

"""
Autogenerated input type of DeleteMembership
"""
input DeleteMembershipInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteMembership
"""
type DeleteMembershipPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedMembershipId: ID
  errors: [UserError!]!
  organization: Organization!
}

"""
Autogenerated input type of DeleteParameter
"""
input DeleteParameterInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteParameter
"""
type DeleteParameterPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedParameterId: ID
  errors: [UserError!]!
  organization: Organization!
}

"""
Autogenerated input type of DeletePersonalAccessToken
"""
input DeletePersonalAccessTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeletePersonalAccessToken
"""
type DeletePersonalAccessTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedPersonalAccessTokenId: ID
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of DeleteProject
"""
input DeleteProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteProject
"""
type DeleteProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  organization: Organization!
  project: Project
}

"""
Autogenerated input type of DeleteServiceAccount
"""
input DeleteServiceAccountInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteServiceAccount
"""
type DeleteServiceAccountPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedServiceAccountId: ID
  errors: [UserError!]!
  organization: Organization!
}

"""
Autogenerated input type of DeleteTemplate
"""
input DeleteTemplateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeleteTemplate
"""
type DeleteTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  deletedTemplateId: ID
  errors: [UserError!]!
  organization: Organization!
}

type Environment implements HasPolicy & Node {
  ancestors: [Environment!]!
  children(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EnvironmentConnection!
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  name: String!
  organization: Organization!
  parameterValue(parameterId: ID!): ParameterValue!
  parent: Environment
  policy: NodePolicy!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Environment.
"""
type EnvironmentConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [EnvironmentEdge!]!

  """
  A list of nodes.
  """
  nodes: [Environment!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type EnvironmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Environment
}

type EnvironmentValue {
  environment: Environment!
  inheritedFrom: Environment
  integrationFile: IntegrationFile
  jmesPath: String
  parameterValue: String
  type: EnvironmentValueTypeEnum!
}

enum EnvironmentValueTypeEnum {
  DYNAMIC
  STATIC
}

type ExportParameters {
  evaluated: String
}

enum ExportParametersFormatEnum {
  DOCKER
  DOTENV
  SHELL
}

input ExportParametersOptions {
  contains: String
  endsWith: String
  export: Boolean
  secrets: Boolean
  startsWith: String
}

"""
Autogenerated input type of FakeOrganizationData
"""
input FakeOrganizationDataInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of FakeOrganizationData
"""
type FakeOrganizationDataPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organization: Organization
  viewer: Viewer!
}

type GithubIntegration implements HasPolicy & IntegrationNode & IntegrationTree & Node {
  accountName: String!
  accountState: IntegrationStateEnum!
  ancestors: [IntegrationTree!]!
  availableRepositoryCount: Int!
  createdAt: ISO8601DateTime!
  entries: [IntegrationNode!]!
  fqn: String!
  id: ID!
  installationUrl: String!
  name: String!
  organization: Organization!
  parent: IntegrationTree
  policy: NodePolicy!
  statusMessage: String
  updatedAt: ISO8601DateTime!
}

"""
The connection type for GithubIntegration.
"""
type GithubIntegrationConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [GithubIntegrationEdge!]!

  """
  A list of nodes.
  """
  nodes: [GithubIntegration!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type GithubIntegrationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: GithubIntegration
}

interface HasPolicy {
  policy: BasePolicy!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

input IdComparisonExp {
  _eq: ID
  _neq: ID
}

type Integration implements HasPolicy & IntegrationNode & IntegrationTree & Node {
  accountName: String!
  accountState: IntegrationStateEnum!
  ancestors: [IntegrationTree!]!
  createdAt: ISO8601DateTime!
  entries: [IntegrationNode!]!
  fqn: String!
  id: ID!
  name: String!
  organization: Organization!
  parent: IntegrationTree
  policy: NodePolicy!
  statusMessage: String
  updatedAt: ISO8601DateTime!
}

type IntegrationFile implements IntegrationNode & Node {
  ancestors: [IntegrationTree!]!
  body: String!
  fqn: String!
  id: ID!
  json: String
  mimeType: String!
  name: String!
  parent: IntegrationTree
}

type IntegrationFileTree implements IntegrationNode & IntegrationTree & Node {
  ancestors: [IntegrationTree!]!
  entries: [IntegrationNode!]!
  fqn: String!
  id: ID!
  name: String!
  parent: IntegrationTree
}

"""
Service base integration nodes (AWS, GitHub)
"""
interface IntegrationNode {
  ancestors: [IntegrationTree!]!
  fqn: String!

  """
  ID of the object.
  """
  id: ID!
  name: String!
  parent: IntegrationTree
}

type IntegrationServiceTree implements IntegrationNode & IntegrationTree & Node {
  ancestors: [IntegrationTree!]!
  entries: [IntegrationNode!]!
  fqn: String!
  id: ID!
  name: String!
  parent: IntegrationTree
}

enum IntegrationStateEnum {
  CHECKING
  CONNECTED
  ERRORED
  MISSING
  PENDING
}

"""
Service base integration nodes (AWS, GitHub)
"""
interface IntegrationTree {
  ancestors: [IntegrationTree!]!
  entries: [IntegrationNode!]!
  fqn: String!

  """
  ID of the object.
  """
  id: ID!
  name: String!
  parent: IntegrationTree
}

"""
The connection type for IntegrationTree.
"""
type IntegrationTreeConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [IntegrationTreeEdge!]!

  """
  A list of nodes.
  """
  nodes: [IntegrationTree!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type IntegrationTreeEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: IntegrationTree
}

type Invitation implements HasPolicy & Node {
  createdAt: ISO8601DateTime!
  id: ID!
  memberEmail: String!
  memberRole: MembershipRoleEnum!
  policy: InvitationPolicy!
  state: InvitationStateEnum!
}

"""
The connection type for Invitation.
"""
type InvitationConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [InvitationEdge!]!

  """
  A list of nodes.
  """
  nodes: [Invitation!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type InvitationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Invitation
}

type InvitationPolicy implements BasePolicy {
  destroy: Boolean!
  resend: Boolean!
  show: Boolean!
  update: Boolean!
}

enum InvitationStateEnum {
  ACCEPTED
  DECLINED
  PENDING
}

type Membership implements HasPolicy & Node {
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  name: String
  organization: Organization!
  pictureUrl: String
  policy: NodePolicy!
  role: MembershipRoleEnum!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Membership.
"""
type MembershipConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [MembershipEdge!]!

  """
  A list of nodes.
  """
  nodes: [Membership!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type MembershipEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Membership
}

enum MembershipRoleEnum {
  ADMIN
  CONTRIBUTOR
  OWNER
  VIEWER
}

type Mutation {
  createAuditLogSnapshot(
    """
    Parameters for CreateAuditLogSnapshot
    """
    input: CreateAuditLogSnapshotInput!
  ): CreateAuditLogSnapshotPayload!
  createAwsIntegration(
    """
    Parameters for CreateAwsIntegration
    """
    input: CreateAwsIntegrationInput!
  ): CreateAwsIntegrationPayload!
  createEnvironment(
    """
    Parameters for CreateEnvironment
    """
    input: CreateEnvironmentInput!
  ): CreateEnvironmentPayload!
  createGithubSetupToken(
    """
    Parameters for CreateGithubSetupToken
    """
    input: CreateGithubSetupTokenInput!
  ): CreateGithubSetupTokenPayload!
  createInvitation(
    """
    Parameters for CreateInvitation
    """
    input: CreateInvitationInput!
  ): CreateInvitationPayload!
  createOrganization(
    """
    Parameters for CreateOrganization
    """
    input: CreateOrganizationInput!
  ): CreateOrganizationPayload!
  createParameter(
    """
    Parameters for CreateParameter
    """
    input: CreateParameterInput!
  ): CreateParameterPayload!
  createPersonalAccessToken(
    """
    Parameters for CreatePersonalAccessToken
    """
    input: CreatePersonalAccessTokenInput!
  ): CreatePersonalAccessTokenPayload!
  createProject(
    """
    Parameters for CreateProject
    """
    input: CreateProjectInput!
  ): CreateProjectPayload!
  createServiceAccount(
    """
    Parameters for CreateServiceAccount
    """
    input: CreateServiceAccountInput!
  ): CreateServiceAccountPayload!
  createTemplate(
    """
    Parameters for CreateTemplate
    """
    input: CreateTemplateInput!
  ): CreateTemplatePayload!
  deleteAllPersonalAccessTokens(
    """
    Parameters for DeleteAllPersonalAccessTokens
    """
    input: DeleteAllPersonalAccessTokensInput!
  ): DeleteAllPersonalAccessTokensPayload!
  deleteAwsIntegration(
    """
    Parameters for DeleteAwsIntegration
    """
    input: DeleteAwsIntegrationInput!
  ): DeleteAwsIntegrationPayload!
  deleteEnvironment(
    """
    Parameters for DeleteEnvironment
    """
    input: DeleteEnvironmentInput!
  ): DeleteEnvironmentPayload!
  deleteGithubIntegration(
    """
    Parameters for DeleteGithubIntegration
    """
    input: DeleteGithubIntegrationInput!
  ): DeleteGithubIntegrationPayload!
  deleteInvitation(
    """
    Parameters for DeleteInvitation
    """
    input: DeleteInvitationInput!
  ): DeleteInvitationPayload!
  deleteMembership(
    """
    Parameters for DeleteMembership
    """
    input: DeleteMembershipInput!
  ): DeleteMembershipPayload!
  deleteParameter(
    """
    Parameters for DeleteParameter
    """
    input: DeleteParameterInput!
  ): DeleteParameterPayload!
  deletePersonalAccessToken(
    """
    Parameters for DeletePersonalAccessToken
    """
    input: DeletePersonalAccessTokenInput!
  ): DeletePersonalAccessTokenPayload!
  deleteProject(
    """
    Parameters for DeleteProject
    """
    input: DeleteProjectInput!
  ): DeleteProjectPayload!
  deleteServiceAccount(
    """
    Parameters for DeleteServiceAccount
    """
    input: DeleteServiceAccountInput!
  ): DeleteServiceAccountPayload!
  deleteTemplate(
    """
    Parameters for DeleteTemplate
    """
    input: DeleteTemplateInput!
  ): DeleteTemplatePayload!
  fakeOrganizationData(
    """
    Parameters for FakeOrganizationData
    """
    input: FakeOrganizationDataInput!
  ): FakeOrganizationDataPayload!
  refreshIntegrationState(
    """
    Parameters for RefreshIntegrationState
    """
    input: RefreshIntegrationStateInput!
  ): RefreshIntegrationStatePayload!
  refreshServiceAccountApiToken(
    """
    Parameters for RefreshServiceAccountApiToken
    """
    input: RefreshServiceAccountApiTokenInput!
  ): RefreshServiceAccountApiTokenPayload!
  regeneratePersonalAccessToken(
    """
    Parameters for RegeneratePersonalAccessToken
    """
    input: RegeneratePersonalAccessTokenInput!
  ): RegeneratePersonalAccessTokenPayload!
  resendInvitation(
    """
    Parameters for ResendInvitation
    """
    input: ResendInvitationInput!
  ): ResendInvitationPayload!
  resetOrganizationData(
    """
    Parameters for ResetOrganizationData
    """
    input: ResetOrganizationDataInput!
  ): ResetOrganizationDataPayload!
  updateAwsIntegration(
    """
    Parameters for UpdateAwsIntegration
    """
    input: UpdateAwsIntegrationInput!
  ): UpdateAwsIntegrationPayload!
  updateEnvironment(
    """
    Parameters for UpdateEnvironment
    """
    input: UpdateEnvironmentInput!
  ): UpdateEnvironmentPayload!
  updateInvitation(
    """
    Parameters for UpdateInvitation
    """
    input: UpdateInvitationInput!
  ): UpdateInvitationPayload!
  updateMembership(
    """
    Parameters for UpdateMembership
    """
    input: UpdateMembershipInput!
  ): UpdateMembershipPayload!
  updateOrganization(
    """
    Parameters for UpdateOrganization
    """
    input: UpdateOrganizationInput!
  ): UpdateOrganizationPayload!
  updateParameter(
    """
    Parameters for UpdateParameter
    """
    input: UpdateParameterInput!
  ): UpdateParameterPayload!
  updatePersonalAccessToken(
    """
    Parameters for UpdatePersonalAccessToken
    """
    input: UpdatePersonalAccessTokenInput!
  ): UpdatePersonalAccessTokenPayload!
  updateProject(
    """
    Parameters for UpdateProject
    """
    input: UpdateProjectInput!
  ): UpdateProjectPayload!
  updateTemplate(
    """
    Parameters for UpdateTemplate
    """
    input: UpdateTemplateInput!
  ): UpdateTemplatePayload!
  upsertParameter(
    """
    Parameters for UpsertParameter
    """
    input: UpsertParameterInput!
  ): UpsertParameterPayload!
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

type NodePolicy implements BasePolicy {
  destroy: Boolean!
  show: Boolean!
  update: Boolean!
}

enum OrderByEnum {
  ASC
  DESC
}

type Organization implements HasPolicy & Node {
  auditLogSnapshots(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AuditLogSnapshotConnection!
  awsIntegrations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AwsIntegrationConnection!
  createdAt: ISO8601DateTime!
  defaultProject: Project!
  environment(name: String): Environment
  environments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EnvironmentConnection!
  evaluateTemplate(body: String!, environmentId: ID): TemplateEvaluation @deprecated(reason: "Use project instead.")
  githubIntegrations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): GithubIntegrationConnection!
  id: ID!
  integrations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): IntegrationTreeConnection!
  invitations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filter invitation list by state.
    """
    state: [InvitationStateEnum!]
  ): InvitationConnection!
  memberships(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Optionally filter by user type.
    """
    userType: String
  ): MembershipConnection!
  name: String!
  parameter(keyName: String!): Parameter
  parameters(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    List of key names to return.
    """
    keyNames: [String!]

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Sort order for parameters.
    """
    orderBy: [ParameterOrderBy!]

    """
    Search over parameter names.
    """
    searchTerm: String

    """
    Filter parameter list.
    """
    where: ParameterBoolExp
  ): ParameterConnection!
  policy: OrganizationPolicy!
  project(name: String): Project
  projects(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ProjectConnection!
  subscriptionExpiresAt: ISO8601DateTime
  subscriptionId: String
  subscriptionPlanId: String
  subscriptionPlanName: String
  template(name: String!): Template
  templates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    List of template names to return.
    """
    names: [String!]
  ): TemplateConnection!
  updatedAt: ISO8601DateTime!
  vaultId: String!
}

type OrganizationPolicy implements BasePolicy {
  createEnvironment: Boolean!
  createIntegration: Boolean!
  createInvitation: Boolean!
  createParameter: Boolean! @deprecated(reason: "Everything will go through project in the near future.")
  createProject: Boolean!
  createTemplate: Boolean! @deprecated(reason: "Everything will go through the project in the near future.")
  destroy: Boolean!
  show: Boolean!
  update: Boolean!
}

type PageCursor {
  cursor: String!
  isCurrent: Boolean!
  pageNumber: Int!
}

type PageCursors {
  around: [PageCursor!]!
  first: PageCursor
  last: PageCursor
  previous: PageCursor
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Parameter implements HasPolicy & Node {
  createdAt: ISO8601DateTime!
  description: String
  environmentValue(environmentId: ID, environmentName: String): EnvironmentValue
  environmentValues: [EnvironmentValue!]!
  hasDynamicValue: Boolean!
  id: ID!
  isSecret: Boolean!
  keyName: String!
  organization: Organization!
  policy: NodePolicy!
  project: Project!
  templates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): TemplateConnection!
  updatedAt: ISO8601DateTime!
}

input ParameterBoolExp {
  _and: [ParameterBoolExp!]
  _or: [ParameterBoolExp!]
  environmentId: IdComparisonExp
  keyName: StringComparisonExp
}

"""
The connection type for Parameter.
"""
type ParameterConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [ParameterEdge!]!

  """
  A list of nodes.
  """
  nodes: [Parameter!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type ParameterEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Parameter
}

input ParameterOrderBy {
  keyName: OrderByEnum
  updatedAt: OrderByEnum
}

type ParameterValue {
  inheritedFrom: Environment
  parameterName: String!
  parameterValue: String
}

type PersonalAccessToken implements HasPolicy & Node {
  createdAt: ISO8601DateTime!
  id: ID!
  lastUsed: ISO8601DateTime
  name: String!
  policy: NodePolicy!
  updatedAt: ISO8601DateTime!
  writeAccess: Boolean!
}

"""
The connection type for PersonalAccessToken.
"""
type PersonalAccessTokenConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [PersonalAccessTokenEdge!]!

  """
  A list of nodes.
  """
  nodes: [PersonalAccessToken!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type PersonalAccessTokenEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PersonalAccessToken
}

type Project implements HasPolicy & Node {
  createdAt: ISO8601DateTime!
  defaultForOrganization: Boolean!
  description: String
  evaluateTemplate(body: String!, environmentId: ID, showSecret: Boolean): TemplateEvaluation
  exportParameters(environmentName: String, format: ExportParametersFormatEnum!, options: ExportParametersOptions): ExportParameters
  id: ID!
  name: String!
  organization: Organization!
  parameter(keyName: String!): Parameter
  parameters(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    List of key names to return.
    """
    keyNames: [String!]

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Sort order for parameters.
    """
    orderBy: [ParameterOrderBy!]

    """
    Search over parameter names.
    """
    searchTerm: String

    """
    Filter parameter list.
    """
    where: ParameterBoolExp
  ): ParameterConnection!
  policy: NodePolicy!
  template(name: String!): Template
  templates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    List of template names to return.
    """
    names: [String!]
  ): TemplateConnection!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Project.
"""
type ProjectConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [ProjectEdge!]!

  """
  A list of nodes.
  """
  nodes: [Project!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type ProjectEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Project
}

type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!
  viewer: Viewer!
}

"""
Autogenerated input type of RefreshIntegrationState
"""
input RefreshIntegrationStateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of RefreshIntegrationState
"""
type RefreshIntegrationStatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  integration: Integration!
  organization: Organization!
}

"""
Autogenerated input type of RefreshServiceAccountApiToken
"""
input RefreshServiceAccountApiTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of RefreshServiceAccountApiToken
"""
type RefreshServiceAccountApiTokenPayload {
  apiToken: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  serviceAccount: ServiceAccount
}

"""
Autogenerated input type of RegeneratePersonalAccessToken
"""
input RegeneratePersonalAccessTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of RegeneratePersonalAccessToken
"""
type RegeneratePersonalAccessTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  personalAccessToken: PersonalAccessToken
  tokenValue: String
  viewer: Viewer!
}

"""
Autogenerated input type of ResendInvitation
"""
input ResendInvitationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ResendInvitation
"""
type ResendInvitationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  invitation: Invitation!
}

"""
Autogenerated input type of ResetOrganizationData
"""
input ResetOrganizationDataInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ResetOrganizationData
"""
type ResetOrganizationDataPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  organization: Organization
  viewer: Viewer!
}

type ServiceAccount implements HasPolicy & Node {
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  name: String!
  organization: Organization!
  policy: NodePolicy!
  role: MembershipRoleEnum!
  updatedAt: ISO8601DateTime!
}

enum SnapshotStatusEnum {
  AVAILABLE
  PROCESSING
  REQUESTED
}

input StringComparisonExp {
  _eq: String
  _neq: String
}

type Template implements HasPolicy & Node {
  body: String
  createdAt: ISO8601DateTime!
  description: String
  evaluated(environmentId: ID, environmentName: String, showSecret: Boolean): String
  id: ID!
  name: String!
  organization: Organization! @deprecated(reason: "Use project instead.")
  policy: NodePolicy!
  project: Project!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Template.
"""
type TemplateConnection {
  currentPage: Int!

  """
  A list of edges.
  """
  edges: [TemplateEdge!]!

  """
  A list of nodes.
  """
  nodes: [Template!]!
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  pageSize: Int!

  """
  Total # of nodes in connection
  """
  totalCount: Int!

  """
  Total # of pages, based on total count and page size
  """
  totalPageCount: Int!
}

"""
An edge in a connection.
"""
type TemplateEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Template
}

type TemplateEvaluation {
  body: String!
  errors: [UserError!]!
  evaluated: String
}

"""
Autogenerated input type of UpdateAwsIntegration
"""
input UpdateAwsIntegrationInput {
  accountId: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  enabledServices: [AwsIntegrationEnum!]!
  id: ID!
  preferredRegions: [AwsRegionEnum!]!
  roleName: String!
}

"""
Autogenerated return type of UpdateAwsIntegration
"""
type UpdateAwsIntegrationPayload {
  awsIntegration: AwsIntegration

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of UpdateEnvironment
"""
input UpdateEnvironmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  id: ID!
}

"""
Autogenerated return type of UpdateEnvironment
"""
type UpdateEnvironmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  environment: Environment
  errors: [UserError!]!
  viewer: Viewer!
}

"""
Autogenerated input type of UpdateInvitation
"""
input UpdateInvitationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  state: InvitationStateEnum!
}

"""
Autogenerated return type of UpdateInvitation
"""
type UpdateInvitationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  membership: Membership
}

"""
Autogenerated input type of UpdateMembership
"""
input UpdateMembershipInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  role: MembershipRoleEnum!
}

"""
Autogenerated return type of UpdateMembership
"""
type UpdateMembershipPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  membership: Membership
  viewer: Viewer!
}

"""
Autogenerated input type of UpdateOrganization
"""
input UpdateOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String!
}

"""
Autogenerated return type of UpdateOrganization
"""
type UpdateOrganizationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  organization: Organization
  viewer: Viewer!
}

"""
Autogenerated input type of UpdateParameter
"""
input UpdateParameterInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  environmentId: ID
  id: ID!
  integrationFileFqn: String
  integrationFileId: ID
  isSecret: Boolean
  jmesPath: String
  value: String
}

"""
Autogenerated return type of UpdateParameter
"""
type UpdateParameterPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  parameter: Parameter
  viewer: Viewer!
}

"""
Autogenerated input type of UpdatePersonalAccessToken
"""
input UpdatePersonalAccessTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String
  writeAccess: Boolean
}

"""
Autogenerated return type of UpdatePersonalAccessToken
"""
type UpdatePersonalAccessTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  personalAccessToken: PersonalAccessToken
  viewer: Viewer!
}

"""
Autogenerated input type of UpdateProject
"""
input UpdateProjectInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  id: ID!
  name: String!
}

"""
Autogenerated return type of UpdateProject
"""
type UpdateProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  organization: Organization!
  project: Project
}

"""
Autogenerated input type of UpdateTemplate
"""
input UpdateTemplateInput {
  body: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  id: ID!
}

"""
Autogenerated return type of UpdateTemplate
"""
type UpdateTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  template: Template
  viewer: Viewer!
}

"""
Autogenerated input type of UpsertParameter
"""
input UpsertParameterInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  environmentName: String
  isSecret: Boolean
  keyName: String!
  organizationId: ID @deprecated(reason: "Use project_id instead")
  projectId: ID
  value: String
}

"""
Autogenerated return type of UpsertParameter
"""
type UpsertParameterPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  parameter: Parameter
}

"""
A user-readable error
"""
type UserError {
  """
  A description of the error
  """
  message: String!

  """
  Which input value this error came from
  """
  path: [String!]
}

type Viewer implements Node {
  id: ID!
  memberships(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): MembershipConnection!
  organization(id: ID): Organization
  personalAccessTokens(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PersonalAccessTokenConnection!
}