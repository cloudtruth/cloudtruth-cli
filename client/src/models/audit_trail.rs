/*
 * CloudTruth Management API
 *
 * CloudTruth centralizes your parameters and secrets making them easier to manage and use.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cloudtruth.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuditTrail {
    #[serde(rename = "url")]
    pub url: String,
    /// A unique identifier for the audit record.
    #[serde(rename = "id")]
    pub id: String,
    /// The action that was taken.
    #[serde(rename = "action")]
    pub action: String,
    /// The id of the object associated with the action.
    #[serde(rename = "object_id")]
    pub object_id: String,
    /// The name of the object associated with the action, if applicable.
    #[serde(rename = "object_name")]
    pub object_name: String,
    /// The type of object associated with the action.
    #[serde(rename = "object_type")]
    pub object_type: Box<crate::models::ObjectTypeEnum>,
    /// The timestamp of the activity that was audited.
    #[serde(rename = "timestamp")]
    pub timestamp: String,
    /// Details of the user associated with this change.
    #[serde(rename = "user")]
    pub user: Box<crate::models::User>,
}

impl AuditTrail {
    pub fn new(
        url: String,
        id: String,
        action: String,
        object_id: String,
        object_name: String,
        object_type: crate::models::ObjectTypeEnum,
        timestamp: String,
        user: crate::models::User,
    ) -> AuditTrail {
        AuditTrail {
            url,
            id,
            action,
            object_id,
            object_name,
            object_type: Box::new(object_type),
            timestamp,
            user: Box::new(user),
        }
    }
}
