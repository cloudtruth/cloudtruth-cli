/*
 * CloudTruth Management API
 *
 * CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cloudtruth.com
 * Generated by: https://openapi-generator.tech
 */

/// PatchedTag : The details of a tag.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PatchedTag {
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// A unique identifier for the tag.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The tag name. Tag names may contain alphanumeric, hyphen, underscore, or period characters. Tag names are case sensitive. The name cannot be modified.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// A description of the tag.  You may find it helpful to document how this tag is used to assist others when they need to maintain software that uses this content.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The point in time this tag represents.
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    #[serde(rename = "pushes", skip_serializing_if = "Option::is_none")]
    pub pushes: Option<Vec<crate::models::AwsPush>>,
    #[serde(rename = "usage", skip_serializing_if = "Option::is_none")]
    pub usage: Option<Box<crate::models::TagReadUsage>>,
}

impl PatchedTag {
    /// The details of a tag.
    pub fn new() -> PatchedTag {
        PatchedTag {
            url: None,
            id: None,
            name: None,
            description: None,
            timestamp: None,
            pushes: None,
            usage: None,
        }
    }
}
