/*
 * CloudTruth Management API
 *
 * CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cloudtruth.com
 * Generated by: https://openapi-generator.tech
 */

/// BackupProject : Environment, parameter-type, and project (including parameters and values) data at a point in time.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BackupProject {
    #[serde(rename = "parameters")]
    pub parameters: ::std::collections::HashMap<String, crate::models::BackupParameter>,
    #[serde(rename = "templates")]
    pub templates: ::std::collections::HashMap<String, crate::models::BackupTemplate>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl BackupProject {
    /// Environment, parameter-type, and project (including parameters and values) data at a point in time.
    pub fn new(
        parameters: ::std::collections::HashMap<String, crate::models::BackupParameter>,
        templates: ::std::collections::HashMap<String, crate::models::BackupTemplate>,
        name: String,
    ) -> BackupProject {
        BackupProject {
            parameters,
            templates,
            name,
            parent: None,
            description: None,
        }
    }
}
