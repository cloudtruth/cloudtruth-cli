/*
 * CloudTruth Management API
 *
 * CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cloudtruth.com
 * Generated by: https://openapi-generator.tech
 */

/// AwsPull : Pull actions can be configured to get configuration and secrets from integrations on demand.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AwsPull {
    #[serde(rename = "url")]
    pub url: String,
    /// Unique identifier for the action.
    #[serde(rename = "id")]
    pub id: String,
    /// The action name.
    #[serde(rename = "name")]
    pub name: String,
    /// The optional description for the action.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The most recent task run for this action.
    #[serde(rename = "latest_task")]
    pub latest_task: Option<Box<crate::models::AwsPullTask>>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "modified_at")]
    pub modified_at: String,
    /// When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed.
    #[serde(rename = "dry_run", skip_serializing_if = "Option::is_none")]
    pub dry_run: Option<bool>,
    /// The AWS region this pull uses.  This region must be enabled in the integration.
    #[serde(rename = "region")]
    pub region: Box<crate::models::AwsRegionEnum>,
    /// The AWS service this pull uses.  This service must be enabled in the integration.
    #[serde(rename = "service")]
    pub service: Box<crate::models::AwsServiceEnum>,
    /// Defines a path through the integration to the location where values will be pulled.  The following mustache-style substitutions must be used in the resource locator string:    - ``{{ environment }}`` to identify the environment name   - ``{{ parameter }}`` to identify the parameter name   - ``{{ project }}`` to identify the project name
    #[serde(rename = "resource")]
    pub resource: String,
}

impl AwsPull {
    /// Pull actions can be configured to get configuration and secrets from integrations on demand.
    pub fn new(
        url: String,
        id: String,
        name: String,
        latest_task: Option<crate::models::AwsPullTask>,
        created_at: String,
        modified_at: String,
        region: crate::models::AwsRegionEnum,
        service: crate::models::AwsServiceEnum,
        resource: String,
    ) -> AwsPull {
        AwsPull {
            url,
            id,
            name,
            description: None,
            latest_task: latest_task.map(Box::new),
            created_at,
            modified_at,
            dry_run: None,
            region: Box::new(region),
            service: Box::new(service),
            resource,
        }
    }
}
