/*
 * CloudTruth Management API
 *
 * CloudTruth centralizes your parameters and secrets making them easier to manage and use.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cloudtruth.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Membership {
    #[serde(rename = "url")]
    pub url: String,
    /// A unique identifier for the membership.
    #[serde(rename = "id")]
    pub id: String,
    /// The user of the membership.
    #[serde(rename = "user")]
    pub user: String,
    /// The organization that the user is a member of.
    #[serde(rename = "organization")]
    pub organization: String,
    /// The role that the user has in the organization.
    #[serde(rename = "role")]
    pub role: Box<crate::models::RoleEnum>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "modified_at")]
    pub modified_at: String,
}

impl Membership {
    pub fn new(
        url: String,
        id: String,
        user: String,
        organization: String,
        role: crate::models::RoleEnum,
        created_at: String,
        modified_at: String,
    ) -> Membership {
        Membership {
            url,
            id,
            user,
            organization,
            role: Box::new(role),
            created_at,
            modified_at,
        }
    }
}
