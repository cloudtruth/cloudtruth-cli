/*
 * CloudTruth Management API
 *
 * CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cloudtruth.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ServiceAccountApiKey {
    /// A free-form name for the API key. Need not be unique. 50 characters max.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "prefix")]
    pub prefix: String,
    /// If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)
    #[serde(rename = "revoked", skip_serializing_if = "Option::is_none")]
    pub revoked: Option<bool>,
    #[serde(rename = "has_expired")]
    pub has_expired: bool,
    #[serde(rename = "created")]
    pub created: String,
    /// Once API key expires, clients cannot use it anymore.
    #[serde(rename = "expiry_date", skip_serializing_if = "Option::is_none")]
    pub expiry_date: Option<String>,
}

impl ServiceAccountApiKey {
    pub fn new(prefix: String, has_expired: bool, created: String) -> ServiceAccountApiKey {
        ServiceAccountApiKey {
            name: None,
            prefix,
            revoked: None,
            has_expired,
            created,
            expiry_date: None,
        }
    }
}
