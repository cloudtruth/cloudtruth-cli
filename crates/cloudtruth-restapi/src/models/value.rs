/*
 * CloudTruth Management API
 *
 * CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@cloudtruth.com
 * Generated by: https://openapi-generator.tech
 */

/// Value : A value for a parameter in a given environment.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Value {
    /// The value url.
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "ledger_id")]
    pub ledger_id: String,
    /// The active environment this Value is viewed under
    #[serde(rename = "active_environment")]
    pub active_environment: String,
    /// The active environment id this Value is viewed under
    #[serde(rename = "active_environment_id")]
    pub active_environment_id: String,
    /// The name of the environment that this environment is viewed under
    #[serde(rename = "active_environment_name")]
    pub active_environment_name: String,
    /// The environment this value is set in.
    #[serde(rename = "environment")]
    pub environment: String,
    /// The environment id for this value.
    #[serde(rename = "environment_id")]
    pub environment_id: String,
    /// The environment name for this value.  This is a convenience to avoid another query against the server to resolve the environment url into a name.
    #[serde(rename = "environment_name")]
    pub environment_name: String,
    /// The parameter this value is for.
    #[serde(rename = "parameter")]
    pub parameter: String,
    /// The parameter id for this value.
    #[serde(rename = "parameter_id")]
    pub parameter_id: String,
    #[serde(rename = "external", skip_serializing_if = "Option::is_none")]
    pub external: Option<bool>,
    #[serde(rename = "external_fqn", skip_serializing_if = "Option::is_none")]
    pub external_fqn: Option<String>,
    #[serde(rename = "external_filter", skip_serializing_if = "Option::is_none")]
    pub external_filter: Option<String>,
    /// This field is deprecated and unused.
    #[serde(rename = "external_error")]
    pub external_error: Option<String>,
    /// The most recent mapped pull status for an external value.
    #[serde(rename = "external_status")]
    pub external_status: Option<Box<crate::models::TaskStep>>,
    #[serde(rename = "internal_value", skip_serializing_if = "Option::is_none")]
    pub internal_value: Option<String>,
    #[serde(rename = "interpolated", skip_serializing_if = "Option::is_none")]
    pub interpolated: Option<bool>,
    /// This is the actual content of the Value for the given parameter in the given environment.  If you request secret masking, no secret content will be included in the result and instead a series of asterisks will be used instead for the value.  Clients applying this value to a shell environment should set `<parameter_name>=<value>` even if `value` is the empty string.  If `value` is `null`, the client should unset that shell environment variable.
    #[serde(rename = "value")]
    pub value: Option<String>,
    /// If true, the `value` field has undergone template evaluation.
    #[serde(rename = "evaluated")]
    pub evaluated: bool,
    /// Indicates the value content is a secret.  Normally this is `true` when the parameter is a secret. It is possible for a parameter to be a secret with a external value that is not a secret.  It is not possible to convert a parameter from a secret to a non-secret if any of the values are external and a secret.  Clients can check this condition by leveraging this field.  It is also possible for a parameter to not be a secret but for this value to be dynamic and reference a Parameter that is a secret.  In this case, we indicate the value is a secret.
    #[serde(rename = "secret")]
    pub secret: Option<bool>,
    /// The projects this value references, if dynamic.  This field is not valid for history requests.
    #[serde(rename = "referenced_projects")]
    pub referenced_projects: Vec<String>,
    /// The parameters this value references, if dynamic.  this field is not valid for history requests.
    #[serde(rename = "referenced_parameters")]
    pub referenced_parameters: Vec<String>,
    /// The templates this value references, if dynamic.  This field is not valid for history requests.
    #[serde(rename = "referenced_templates")]
    pub referenced_templates: Vec<String>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "modified_at")]
    pub modified_at: Option<String>,
}

impl Value {
    /// A value for a parameter in a given environment.
    pub fn new(
        url: String,
        id: String,
        ledger_id: String,
        active_environment: String,
        active_environment_id: String,
        active_environment_name: String,
        environment: String,
        environment_id: String,
        environment_name: String,
        parameter: String,
        parameter_id: String,
        external_error: Option<String>,
        external_status: Option<crate::models::TaskStep>,
        value: Option<String>,
        evaluated: bool,
        secret: Option<bool>,
        referenced_projects: Vec<String>,
        referenced_parameters: Vec<String>,
        referenced_templates: Vec<String>,
        created_at: String,
        modified_at: Option<String>,
    ) -> Value {
        Value {
            url,
            id,
            ledger_id,
            active_environment,
            active_environment_id,
            active_environment_name,
            environment,
            environment_id,
            environment_name,
            parameter,
            parameter_id,
            external: None,
            external_fqn: None,
            external_filter: None,
            external_error,
            external_status: external_status.map(Box::new),
            internal_value: None,
            interpolated: None,
            value,
            evaluated,
            secret,
            referenced_projects,
            referenced_parameters,
            referenced_templates,
            created_at,
            modified_at,
        }
    }
}
