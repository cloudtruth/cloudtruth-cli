/*
 * CloudTruth Management API
 *
 * CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@cloudtruth.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AzureKeyVaultIntegrationCreate {
    /// An optional description for the integration.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Allow actions to write to the integration.
    #[serde(rename = "writable", skip_serializing_if = "Option::is_none")]
    pub writable: Option<bool>,
    /// A list of tags to be set on all integration resources.
    #[serde(rename = "resource_tags", skip_serializing_if = "Option::is_none")]
    pub resource_tags: Option<::std::collections::HashMap<String, serde_json::Value>>,
    /// The Azure Key Vault name.
    #[serde(rename = "vault_name")]
    pub vault_name: String,
    /// The Azure Tenant ID.
    #[serde(rename = "tenant_id")]
    pub tenant_id: String,
}

impl AzureKeyVaultIntegrationCreate {
    pub fn new(vault_name: String, tenant_id: String) -> AzureKeyVaultIntegrationCreate {
        AzureKeyVaultIntegrationCreate {
            description: None,
            writable: None,
            resource_tags: None,
            vault_name,
            tenant_id,
        }
    }
}
