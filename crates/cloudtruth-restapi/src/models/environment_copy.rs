/*
 * CloudTruth Management API
 *
 * CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@cloudtruth.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EnvironmentCopy {
    /// The environment name.
    #[serde(rename = "name")]
    pub name: String,
    /// A description of the environment.  You may find it helpful to document how this environment is used to assist others when they need to maintain software that uses this content.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// When copying child Environments, this indicates what name to use for each Environment.  If no name is provided for a given child Environment, a \"-1\" will be appended to its name.  Note that this name mapping can be used for Environments of any level of depth in the parent-child hierarchy.
    #[serde(
        rename = "child_environment_names",
        skip_serializing_if = "Option::is_none"
    )]
    pub child_environment_names: Option<::std::collections::HashMap<String, String>>,
}

impl EnvironmentCopy {
    pub fn new(name: String) -> EnvironmentCopy {
        EnvironmentCopy {
            name,
            description: None,
            child_environment_names: None,
        }
    }
}
